var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.019,1,0.682]],["body/components/AppComponent.html",[0,0.032,1,1.233,2,1.191,3,0.469,4,0.405,5,1.047,6,1.047,7,1.047,8,0.405,9,3.135,10,0.947,11,1.538,12,1.696,13,3.395,14,1.317,15,1.074,16,1.074,17,5.485,18,1.44,19,1.271,20,1.271,21,1.317,22,4.778,23,1.946,24,4.778,25,0.469,26,0.767,27,4.315,28,0.469,29,0.039,30,0.686,31,0.947,32,0.854,33,2.984,34,0.854,35,3.798,36,0.908,37,0.538,38,1.403,39,0.947,40,3.798,41,3.798,42,1.317,43,3.798,44,0.881,45,1.056,46,3.944,47,1.047,48,0.61,49,1.155,50,1.403,51,0.767,52,3.798,53,3.135,54,3.798,55,0.947,56,3.135,57,3.798,58,0.854,59,3.135,60,2.112,61,2.698,62,3.798,63,0.767,64,2.698,65,3.798,66,3.798,67,0.469,68,0.61,69,0.854,70,1.317,71,1.317,72,0.686,73,1.511,74,1.047,75,0.839,76,1.047,77,0.767,78,0.854,79,1.047,80,0.767,81,1.047,82,1.047,83,1.047,84,0.854,85,1.047,86,0.767,87,1.047,88,0.767,89,1.047,90,0.767,91,1.047,92,0.767,93,1.047,94,0.767,95,0.947,96,1.047,97,0.767,98,0.947,99,1.047,100,0.767,101,0.854,102,0.947,103,0.61,104,0.947,105,1.047,106,0.029,107,0.029]],["title/modules/AppRoutingModule.html",[108,1.894,109,2.154]],["body/modules/AppRoutingModule.html",[0,0.037,3,0.497,4,0.428,8,0.428,16,0.903,29,0.039,36,0.985,37,0.569,38,1.484,67,0.612,68,0.645,77,1,78,0.903,80,1,84,1.113,86,1,88,1,90,1,92,1,94,1,95,1.002,97,1,98,1.002,100,1,101,0.903,106,0.03,107,0.03,109,3.516,110,2.234,111,4.018,112,2.752,113,4.018,114,4.018,115,4.018,116,2.855,117,4.018,118,4.018,119,4.018,120,4.018,121,4.018,122,2.855,123,4.018,124,4.018,125,4.018,126,4.018,127,2.51,128,4.018,129,4.018,130,0.903,131,4.948,132,6.131,133,4.948,134,4.426,135,4.018,136,4.018,137,3.317,138,2.855,139,4.018,140,2.855,141,1.809,142,2.855,143,3.317,144,3.317,145,4.018,146,2.855,147,3.317]],["title/components/ChangePasswordComponent.html",[0,0.019,77,0.613]],["body/components/ChangePasswordComponent.html",[0,0.024,1,0.505,2,0.83,3,0.278,4,0.239,5,0.619,6,0.619,7,0.619,8,0.239,10,0.56,11,1.437,12,1.578,14,0.918,15,1.143,16,0.749,18,1.094,19,0.505,20,0.505,21,0.918,25,0.278,26,0.535,28,0.681,29,0.039,30,0.717,31,1.095,32,0.987,34,1.174,36,0.753,37,0.318,38,0.83,39,0.56,42,1.21,44,0.979,45,1.096,47,0.918,48,0.361,49,0.683,51,0.972,55,1.267,58,0.893,63,1.112,67,0.278,68,0.361,69,0.505,70,0.918,71,0.918,72,0.406,73,1.21,74,0.619,75,0.705,76,0.619,77,0.887,78,1.174,79,0.619,80,0.454,81,0.619,82,0.619,83,0.619,84,0.505,85,0.619,86,0.454,87,0.619,88,0.454,89,0.619,90,0.454,91,0.619,92,0.454,93,0.619,94,0.454,95,0.56,96,0.619,97,0.454,98,0.56,99,0.619,100,0.454,101,0.505,102,0.56,103,0.361,104,0.56,105,0.619,106,0.021,107,0.021,122,3.789,130,0.749,141,1.976,148,1.404,149,4.403,150,1.855,151,1.231,152,1.617,153,1.981,154,2.081,155,3.97,156,3.332,157,3.97,158,3.97,159,3.97,160,3.277,161,2.821,162,0.83,163,1.472,164,1.981,165,3.625,166,0.683,167,1.597,168,2.442,169,2.827,170,2.071,171,3.332,172,0.56,173,0.505,174,2.081,175,2.247,176,1.472,177,0.919,178,1.117,179,1.117,180,1.112,181,1.495,182,1.357,183,1.224,184,1.231,185,0.749,186,0.918,187,2.247,188,2.75,189,3.12,190,3.97,191,2.605,192,5.505,193,2.911,194,1.976,195,3.332,196,1.712,197,2.213,198,2.418,199,2.708,200,3.331,201,2.48,202,3.332,203,1.5,204,2.827,205,2.247,206,1.617,207,1.663,208,2.966,209,2.27,210,2.247,211,4.055,212,4.055,213,2.903,214,3.262,215,3.97,216,4.055,217,2.247,218,3.871,219,4.69,220,2.247,221,1.21,222,3.97,223,1.976,224,2.537,225,1.466,226,2.75,227,1.174,228,2.75,229,2.75,230,2.75,231,1.25,232,0.83,233,1.25,234,1.25,235,1.121,236,3.97,237,1.855,238,1.617,239,0.683,240,2.247,241,2.247,242,2.247,243,1.121,244,0.753,245,1.855,246,1.855,247,2.48,248,2.48,249,1.855,250,1.855,251,1.855,252,0.753,253,1.013,254,2.247,255,1.404,256,1.853,257,1.25,258,1.25,259,2.75,260,2.247,261,3.332,262,2.247,263,2.247,264,1.121,265,3.332,266,1.121,267,2.247,268,1.404,269,2.247,270,1.597,271,1.121,272,1.597,273,3.332,274,1.597,275,1.855,276,1.012,277,1.597,278,1.855,279,1.25,280,1.404,281,1.855,282,2.247,283,1.404,284,1.25,285,1.855,286,2.75,287,2.081,288,1.357,289,1.853,290,2.367,291,3.332,292,1.663]],["title/components/DetailsComponent.html",[0,0.019,80,0.613]],["body/components/DetailsComponent.html",[0,0.026,1,0.575,2,0.912,3,0.316,4,0.272,5,0.704,6,0.704,7,0.704,8,0.272,10,0.637,11,1.466,12,1.611,14,1.008,15,0.823,16,0.823,18,1.178,19,0.575,20,0.575,21,1.008,23,1.491,25,0.316,26,0.588,28,0.61,29,0.039,30,0.843,34,1.11,36,0.793,37,0.362,38,0.944,39,0.637,42,1.286,44,0.944,45,1.093,47,1.008,48,0.686,49,0.777,51,0.949,55,1.163,58,1.11,63,1.038,67,0.316,68,0.41,69,0.575,70,1.008,71,1.008,72,0.462,73,1.361,74,0.704,75,0.825,76,0.704,77,0.516,78,0.575,79,0.704,80,0.943,81,0.704,82,0.704,83,0.704,84,0.575,85,0.704,86,0.516,87,0.704,88,0.516,89,0.704,90,0.516,91,0.704,92,0.516,93,0.704,94,0.516,95,0.637,96,0.704,97,0.516,98,0.637,99,0.704,100,0.516,101,0.575,102,0.637,103,0.41,104,0.637,105,0.704,106,0.023,107,0.023,130,1.049,151,1.352,152,1.741,162,0.912,163,1.564,166,1.113,172,1.065,173,0.961,176,1.722,177,0.928,178,1.226,179,1.226,180,1.181,181,1.518,182,1.491,183,1.437,184,1.352,185,0.961,186,1.416,196,0.777,212,3.021,213,2.595,214,2.67,221,1.458,223,2.436,225,1.999,227,1.272,239,1.113,244,0.857,251,4.077,253,1.502,283,2.915,293,1.816,294,3.66,295,3.66,296,3.66,297,2.917,298,3.021,299,2.6,300,2.556,301,5.138,302,2.852,303,3.66,304,3.66,305,3.021,306,2.556,307,2.6,308,3.751,309,3.534,310,2.6,311,3.852,312,2.377,313,3.316,314,4.667,315,4.077,316,2.155,317,3.759,318,4.939,319,3.66,320,2.556,321,2.377,322,1.924,323,2.746,324,3.529,325,2.377,326,4.275,327,2.6,328,2.556,329,3.66,330,3.66,331,3.66,332,3.037,333,3.037,334,2.329,335,4.667,336,1.816,337,1.816,338,1.816,339,1.816,340,0.857,341,2.556,342,2.556,343,2.6,344,2.556,345,2.556,346,2.556,347,1.491,348,2.556,349,2.556,350,2.6,351,1.816,352,2.6,353,1.816,354,1.816,355,1.816,356,0.944,357,1.816,358,1.816,359,3.66,360,3.021,361,3.66,362,3.316,363,3.66,364,1.597,365,1.352,366,2.6,367,3.66,368,1.597]],["title/components/FooterComponent.html",[0,0.019,20,0.682]],["body/components/FooterComponent.html",[0,0.033,1,0.886,2,1.219,3,0.487,4,0.42,5,1.086,6,1.086,7,1.086,8,0.42,10,0.983,11,1.544,12,1.702,14,1.347,15,1.099,16,0.886,19,0.886,20,1.25,21,1.347,23,1.992,29,0.038,33,3.054,36,0.633,37,0.558,42,1.347,44,0.918,45,1.074,46,4.037,47,1.086,48,0.633,49,1.199,50,1.456,51,0.633,58,1.099,59,4.388,60,2.956,63,0.796,67,0.487,68,0.633,69,0.886,70,1.347,71,1.347,72,0.712,73,1.532,74,1.086,75,0.854,76,1.086,77,0.796,78,0.886,79,1.086,80,0.796,81,1.086,82,1.086,83,1.086,84,0.886,85,1.086,86,0.796,87,1.086,88,0.796,89,1.086,90,0.796,91,1.086,92,0.796,93,1.086,94,0.796,95,0.983,96,1.086,97,0.796,98,0.983,99,1.086,100,0.796,101,0.886,102,0.983,103,0.633,104,0.983,105,1.086,106,0.03,107,0.03,177,0.712,369,3.254,370,4.89,371,4.89,372,4.89,373,3.942,374,2.801,375,3.942,376,3.942,377,3.942,378,3.254,379,3.942,380,3.942,381,4.89,382,4.89,383,4.89,384,4.89]],["title/components/HeaderComponent.html",[0,0.019,19,0.682]],["body/components/HeaderComponent.html",[0,0.024,1,0.48,2,0.799,3,0.264,4,0.227,5,0.588,6,0.588,7,0.588,8,0.227,10,0.532,11,1.425,12,1.564,14,0.883,15,1.156,16,0.721,18,0.883,19,0.962,20,0.48,21,0.883,23,1.305,25,0.264,26,0.515,28,0.65,29,0.039,30,0.696,31,0.959,32,0.865,34,1.223,36,0.774,37,0.302,38,1.184,39,0.532,42,1.328,44,0.991,45,1.192,47,1.179,48,0.343,49,0.649,50,0.788,51,0.962,55,0.959,58,1.124,60,1.782,63,0.974,64,1.516,67,0.264,68,0.343,69,0.48,70,0.883,71,0.883,72,0.385,73,1.179,74,0.588,75,0.687,76,0.588,77,0.431,78,0.48,79,0.588,80,0.431,81,0.588,82,0.588,83,0.588,84,0.48,85,0.588,86,0.431,87,0.588,88,0.431,89,0.588,90,0.431,91,0.588,92,0.431,93,0.588,94,0.431,95,0.532,96,0.588,97,0.431,98,0.532,99,0.588,100,0.431,101,0.48,102,0.532,103,0.343,104,0.532,105,0.588,106,0.02,107,0.02,130,0.962,134,2.646,138,2.277,140,2.277,147,2.646,162,0.799,163,1.434,166,0.649,169,2.779,172,0.532,173,0.48,176,1.434,177,1.061,178,1.434,179,1.434,180,1.01,181,1.179,182,1.743,183,1.311,184,1.184,185,1.083,186,1.476,194,2.25,196,1.711,199,1.599,208,2.679,209,1.869,211,2.646,221,1.449,227,0.962,235,1.599,239,1.17,244,0.715,247,2.404,248,2.404,249,1.761,250,1.761,252,0.715,253,1.301,288,0.869,302,2.289,309,3.443,323,1.782,325,2.38,334,1.921,336,1.516,340,0.715,365,1.422,378,1.761,385,1.761,386,3.205,387,3.205,388,3.205,389,4.587,390,3.849,391,3.787,392,4.998,393,4.28,394,4.28,395,4.28,396,4.818,397,4.28,398,1.761,399,3.849,400,4.28,401,3.205,402,2.133,403,1.997,404,4.818,405,2.624,406,4.422,407,2.38,408,4.28,409,2.133,410,3.259,411,3.737,412,2.133,413,1.795,414,3.041,415,2.38,416,2.133,417,3.205,418,3.122,419,1.599,420,2.002,421,1.782,422,3.205,423,1.782,424,2.646,425,1.305,426,3.849,427,4.818,428,2.277,429,3.205,430,2.133,431,2.646,432,3.205,433,4.587,434,3.533,435,3.737,436,3.205,437,3.205,438,3.205,439,2.133,440,3.849,441,2.404,442,2.133,443,3.423,444,3.533,445,4.587,446,1.782,447,3.205,448,3.205,449,2.133,450,1.782,451,2.036,452,2.133,453,1.516,454,2.133,455,2.133,456,1.761,457,1.761,458,2.133,459,2.133,460,2.133,461,1.333,462,2.133,463,1.761,464,2.133,465,3.041,466,2.735,467,2.002,468,2.646,469,2.133,470,1.761,471,2.133,472,2.133,473,3.205,474,2.133,475,2.133,476,2.133,477,1.761,478,1.761,479,1.761,480,2.133,481,1.442,482,2.133,483,2.133,484,1.761,485,1.761,486,2.133,487,2.133,488,2.133,489,2.646,490,3.205,491,3.205,492,2.002]],["title/components/LoginComponent.html",[0,0.019,86,0.613]],["body/components/LoginComponent.html",[0,0.025,1,0.533,2,0.864,3,0.293,4,0.253,5,0.653,6,0.653,7,0.653,8,0.253,10,0.591,11,1.45,12,1.592,14,0.955,15,1.013,16,0.779,18,1.129,19,0.533,20,0.533,21,0.955,25,0.293,26,0.557,28,0.619,29,0.039,30,0.74,31,0.864,32,0.779,34,1.126,36,0.77,37,0.336,38,0.876,39,0.591,42,1.242,44,0.981,45,1.149,47,0.955,48,0.381,49,0.721,51,0.948,53,3.381,55,1.123,58,1.236,60,2.278,63,0.969,67,0.293,68,0.381,69,0.533,70,0.955,71,0.955,72,0.428,73,1.242,74,0.653,75,0.724,76,0.653,77,0.479,78,0.533,79,0.653,80,0.479,81,0.653,82,0.653,83,0.653,84,0.533,85,0.653,86,0.91,87,0.653,88,0.479,89,0.653,90,0.479,91,0.653,92,0.479,93,0.653,94,0.479,95,0.591,96,0.653,97,0.479,98,0.591,99,0.653,100,0.479,101,0.533,102,0.591,103,0.381,104,0.591,105,0.653,106,0.021,107,0.021,130,1.013,138,2.462,141,1.844,148,1.481,151,1.28,152,1.668,153,2.044,154,2.165,160,3.381,161,3.406,162,0.864,163,1.51,164,2.044,165,3.72,166,0.721,167,1.685,168,2.506,169,2.876,170,2.106,172,0.591,173,0.533,174,2.165,176,1.51,177,0.977,178,1.161,179,1.161,180,1.071,181,1.242,182,1.412,183,1.123,184,1.28,185,0.779,186,0.955,191,2.58,193,2.902,194,1.56,196,1.744,197,2.19,198,2.382,199,2.498,200,3.312,201,2.165,203,1.56,204,3.007,206,1.412,207,1.729,208,1.318,209,1.835,221,1.242,223,2.028,224,2.742,225,1.664,227,0.921,231,1.318,232,0.876,233,1.318,234,1.318,235,1.729,239,1.245,243,1.183,246,2.861,252,0.795,253,1.054,255,1.481,256,2.278,257,1.927,258,1.318,259,2.861,264,1.183,266,1.183,271,1.183,272,1.685,274,2.91,275,1.957,276,1.067,277,1.685,278,1.957,279,1.318,280,1.481,281,1.957,286,2.861,287,2.165,288,2.203,289,1.927,292,1.729,340,0.795,403,1.51,405,1.729,410,1.685,413,1.161,415,1.318,418,3.632,423,2.876,451,2.04,463,2.861,467,1.481,493,1.957,494,4.096,495,3.466,496,4.096,497,3.466,498,2.371,499,3.466,500,2.371,501,1.927,502,3.466,503,2.462,504,2.559,505,3.466,506,2.666,507,3.957,508,3.202,509,3.72,510,3.466,511,2.462,512,1.56,513,2.371,514,2.371,515,3.381,516,4.096,517,1.481,518,1.481,519,2.371,520,2.371,521,4.269,522,2.371,523,1.685,524,1.685,525,2.371,526,2.371,527,2.371,528,2.371,529,2.371,530,1.957,531,2.371,532,0.876,533,2.371,534,3.466,535,2.371,536,2.371,537,1.318,538,2.371,539,1.481,540,2.371,541,1.957,542,2.371,543,2.371,544,2.371,545,1.481,546,2.371,547,2.371,548,2.371,549,2.165,550,2.165]],["title/components/OrdersComponent.html",[0,0.019,88,0.613]],["body/components/OrdersComponent.html",[0,0.026,1,0.546,2,0.879,3,0.3,4,0.259,5,0.67,6,0.67,7,0.67,8,0.259,10,0.606,11,1.455,12,1.598,14,0.972,15,0.793,16,0.793,18,1.145,19,0.546,20,0.546,21,0.972,25,0.3,26,0.567,28,0.683,29,0.039,30,0.913,31,1.207,32,1.088,34,1.172,36,0.567,37,0.344,39,0.606,42,1.256,44,0.909,45,0.713,47,0.972,48,0.39,49,0.739,50,1.303,51,0.947,55,1.483,58,1.025,61,3.239,63,1.131,67,0.3,68,0.39,69,0.546,70,0.972,71,0.972,72,0.439,73,1.256,74,0.67,75,0.667,76,0.67,77,0.491,78,0.546,79,0.67,80,0.491,81,0.67,82,0.67,83,0.67,84,0.546,85,0.67,86,0.491,87,0.67,88,0.921,89,0.67,90,0.491,91,0.67,92,0.491,93,0.67,94,0.491,95,0.606,96,0.67,97,0.491,98,0.606,99,0.67,100,0.491,101,0.546,102,0.606,103,0.39,104,0.606,105,0.67,106,0.022,107,0.022,130,0.793,144,2.912,148,1.518,151,1.303,152,1.692,154,2.204,162,0.879,163,1.528,176,1.528,177,1.079,178,1.182,179,1.182,180,1.154,181,1.256,182,1.437,183,1.136,184,1.303,185,0.793,186,0.972,197,2.142,198,2.174,206,1.972,221,1.145,225,0.897,239,1.386,244,1.392,276,2.273,321,1.962,364,2.595,365,1.971,368,2.595,403,2.007,407,1.962,413,1.392,415,2.692,419,2.275,421,2.31,425,0.99,451,1.437,457,2.006,466,1.726,492,3.819,512,1.588,523,2.507,524,3.44,551,2.006,552,4.154,553,3.528,554,4.154,555,4.841,556,4.841,557,4.558,558,2.43,559,3.44,560,3.528,561,2.968,562,2.507,563,2.43,564,3.528,565,3.528,566,2.43,567,5.05,568,4.558,569,2.43,570,2.43,571,1.76,572,3.528,573,2.43,574,4.841,575,2.43,576,1.518,577,2.006,578,2.006,579,2.507,580,2.912,581,2.204,582,2.912,583,2.006,584,2.006,585,4.154,586,2.43,587,2.43,588,2.43,589,2.912,590,2.006,591,2.006,592,2.006,593,2.43,594,3.528,595,2.43,596,2.951,597,2.912,598,2.912,599,3.239,600,2.507,601,1.588,602,2.507,603,1.588,604,2.507,605,2.507,606,2.912,607,2.912,608,2.912,609,3.528,610,3.528,611,3.528,612,3.528,613,3.528,614,3.528]],["title/components/PerfilComponent.html",[0,0.019,90,0.613]],["body/components/PerfilComponent.html",[0,0.021,1,0.403,2,0.699,3,0.222,4,0.191,5,0.494,6,0.494,7,0.494,8,0.191,10,0.447,11,1.381,12,1.513,14,0.773,15,0.777,16,0.631,18,0.952,19,0.403,20,0.403,21,0.773,23,1.143,25,0.222,26,0.451,28,0.556,29,0.039,30,0.624,31,0.447,32,1.011,34,1.124,36,0.755,37,0.254,38,0.662,39,0.447,42,1.077,44,0.979,45,1.158,47,0.773,48,0.451,49,0.545,51,0.959,55,1.421,58,1.172,63,1.01,67,0.222,68,0.288,69,0.403,70,0.773,71,0.773,72,0.324,73,1.077,74,0.494,75,0.681,76,0.494,77,0.362,78,0.403,79,0.494,80,0.362,81,0.494,82,0.494,83,0.494,84,0.403,85,0.494,86,0.362,87,0.494,88,0.362,89,0.494,90,0.79,91,0.494,92,0.362,93,0.494,94,0.362,95,0.447,96,0.494,97,0.362,98,0.447,99,0.494,100,0.362,101,0.403,102,0.447,103,0.288,104,0.447,105,0.494,106,0.017,107,0.017,112,0.997,130,1.094,140,3.339,141,1.555,151,1.036,152,1.407,153,1.724,162,0.699,163,1.31,164,1.724,166,0.545,167,1.274,168,2.173,169,2.613,170,1.592,172,0.699,173,0.631,174,1.752,176,1.63,177,1.001,178,0.94,179,0.94,180,1.098,181,1.239,182,1.143,183,1.338,184,1.036,185,1.094,186,1.239,191,2.765,193,2.86,194,1.759,196,1.685,197,1.796,198,1.832,203,1.263,204,2.898,206,1.728,207,2.116,216,1.48,221,1.378,223,1.909,224,1.4,225,1.036,227,1.011,231,2.173,232,0.662,233,0.997,234,0.997,238,1.592,239,1.29,243,2.679,244,1.31,245,2.852,252,0.601,253,0.853,255,1.12,256,0.997,257,2.359,258,0.997,264,0.895,266,1.4,268,1.12,270,1.274,271,0.895,276,0.807,280,1.752,284,2.173,288,2.257,289,2.705,290,3.195,292,2.244,323,1.56,325,1.56,334,1.724,340,1.31,347,1.143,356,0.662,365,0.662,403,1.799,405,1.724,407,1.56,413,1.575,414,3.195,415,2.501,419,1.4,425,1.143,446,2.359,450,0.997,451,2.187,461,1.12,465,1.993,481,1.555,501,1.921,506,2.173,512,1.263,517,1.752,518,2.809,532,1.796,537,1.56,539,1.752,541,1.48,545,1.752,549,1.752,550,1.752,559,1.274,562,3.195,571,1.4,601,1.555,603,1.909,615,1.48,616,2.805,617,2.805,618,2.852,619,3.501,620,3.226,621,3.908,622,2.316,623,3.908,624,3.226,625,3.455,626,2.805,627,1.793,628,4.222,629,2.805,630,2.316,631,1.793,632,2.316,633,3.908,634,3.226,635,2.805,636,1.793,637,2.316,638,2.316,639,2.316,640,1.793,641,3.226,642,2.805,643,3.712,644,3.339,645,2.316,646,1.793,647,2.316,648,3.908,649,2.805,650,2.316,651,2.316,652,2.316,653,1.793,654,2.316,655,2.649,656,2.805,657,2.805,658,1.793,659,2.316,660,1.752,661,1.48,662,2.024,663,1.12,664,1.12,665,1.274,666,1.48,667,1.793,668,1.48,669,1.793,670,1.48,671,1.793,672,2.852,673,1.48,674,1.793,675,2.316,676,1.793,677,1.48,678,1.48,679,1.48,680,1.48,681,1.793,682,1.48,683,1.48,684,1.793,685,1.793,686,1.793,687,2.158,688,1.48,689,1.48,690,2.316,691,2.316,692,1.48,693,3.226,694,3.712,695,2.316,696,1.48,697,1.48,698,1.48,699,1.48,700,1.48,701,1.793,702,1.48,703,1.48,704,1.48,705,1.48,706,1.793,707,1.793,708,1.48,709,1.48,710,1.793,711,1.793,712,3.455,713,1.793,714,2.805,715,1.793,716,1.793,717,2.805,718,1.993,719,1.48,720,1.793,721,2.316,722,3.455,723,1.274,724,1.48,725,1.48,726,1.48,727,1.793,728,1.12,729,3.908,730,1.793,731,1.793,732,1.793,733,1.48,734,1.48,735,1.48,736,1.274,737,1.793,738,1.48,739,2.805,740,2.441,741,3.226,742,2.316,743,3.226,744,1.993,745,2.316,746,1.48,747,1.48,748,1.48,749,1.48,750,1.993,751,2.316,752,2.316,753,1.48,754,1.48,755,1.48,756,1.48]],["title/interfaces/Product.html",[297,1.513,757,1.686]],["body/interfaces/Product.html",[3,0.497,4,0.428,8,0.428,25,0.497,26,0.795,27,4.619,28,0.733,29,0.039,30,1.119,44,0.795,45,1.131,48,0.645,50,1.484,51,0.795,67,0.497,106,0.03,107,0.03,177,1.108,180,1.083,227,0.903,297,2.469,308,3.867,322,2.634,324,4.085,332,2.855,340,1.658,360,4.085,362,4.157,413,1.658,441,3.655,757,2.234,758,2.855,759,3.317,760,5.596,761,5.596,762,5.851,763,5.596,764,4.948,765,4.948,766,4.948,767,4.085,768,4.948,769,4.948,770,4.948]],["title/injectables/ProductService.html",[302,1.513,771,1.686]],["body/injectables/ProductService.html",[3,0.211,4,0.182,8,0.182,13,1.212,15,0.606,25,0.211,26,0.433,28,0.656,29,0.039,30,0.945,31,0.834,32,0.752,34,1.234,36,0.665,37,0.242,44,0.964,45,1.149,48,0.809,49,0.519,50,0.996,51,0.983,55,1.192,58,1.133,63,0.89,67,0.211,68,0.274,75,0.809,106,0.017,107,0.017,130,1.133,142,3.818,162,0.672,166,0.519,172,1.256,173,1.133,177,1.051,180,1.203,181,1.647,183,1.149,185,1.234,186,1.389,189,3.128,194,1.214,196,1.59,203,2.152,206,1.793,207,1.346,209,1.099,221,1.59,227,1.286,238,1.549,239,1.454,244,1.476,247,2.75,248,1.685,252,0.572,253,1.496,276,1.214,279,2.114,297,2.949,298,2.227,302,1.346,305,2.227,307,1.916,308,3.783,309,3.671,310,3.77,312,2.114,313,2.701,321,2.448,322,2.637,334,1.669,337,1.212,339,3.128,340,1.274,343,3.276,347,2.053,356,0.996,365,1.235,366,2.942,374,2.377,407,2.448,419,1.346,420,2.75,425,1.947,434,3.634,435,3.933,441,3.212,443,3.899,446,2.448,453,1.212,481,2.269,503,1.916,504,2.75,512,1.711,530,2.227,545,1.066,561,2.448,571,2.197,578,3.138,579,3.128,581,2.09,634,3.138,664,2.09,718,2.377,728,1.685,734,2.227,771,1.5,772,1.212,773,1.408,774,3.802,775,2.697,776,2.697,777,3.138,778,2.227,779,2.697,780,3.802,781,2.697,782,3.802,783,2.227,784,2.697,785,2.697,786,1.408,787,4.569,788,2.697,789,2.697,790,1.706,791,3.138,792,3.946,793,3.946,794,3.634,795,3.128,796,1.706,797,3.802,798,2.227,799,3.946,800,3.138,801,2.761,802,3.581,803,2.697,804,1.706,805,2.697,806,2.697,807,1.706,808,2.227,809,4.403,810,2.227,811,1.706,812,2.227,813,2.697,814,3.138,815,2.227,816,2.697,817,1.706,818,3.128,819,1.706,820,2.761,821,2.227,822,2.697,823,2.697,824,1.706,825,2.697,826,1.916,827,2.697,828,1.706,829,2.227,830,1.706,831,2.227,832,2.697,833,1.706,834,2.697,835,1.706,836,2.697,837,2.227,838,2.697,839,1.706,840,3.345,841,2.697,842,2.697,843,2.761,844,2.697,845,1.706,846,2.761,847,3.345,848,2.761,849,1.706,850,1.706,851,1.408,852,1.706,853,1.706,854,1.408,855,1.212,856,4.141,857,3.418,858,1.706,859,1.706,860,3.802,861,1.706,862,1.706,863,1.706,864,1.706,865,1.706,866,2.697,867,1.706,868,1.706,869,1.706,870,3.345,871,4.403,872,3.345,873,3.802,874,1.706,875,3.802,876,1.706,877,2.761,878,3.345,879,1.706,880,1.706,881,1.706,882,1.706,883,1.706,884,1.706,885,1.706,886,1.706]],["title/directives/RutFormatDirective.html",[72,0.548,103,0.487]],["body/directives/RutFormatDirective.html",[3,0.494,4,0.426,8,0.426,10,0.996,11,1.229,25,0.494,28,0.661,29,0.039,30,1.037,32,1.109,34,1.256,36,0.792,37,0.566,51,0.792,67,0.494,68,0.642,72,0.891,75,0.859,102,0.996,103,0.792,104,1.229,106,0.03,107,0.03,130,0.898,162,1.229,166,1.215,172,1.333,173,1.203,185,1.109,186,1.359,209,1.627,232,1.476,252,1.339,253,1.215,481,1.798,532,1.821,687,3.341,887,3.584,888,4.736,889,3.298,890,4.931,891,4.931,892,4.931,893,4.931,894,3.995,895,5.585,896,5.585,897,3.995,898,3.995,899,5.585,900,4.931,901,4.931,902,3.995,903,4.931,904,3.995,905,4.931,906,3.995,907,3.995,908,3.995,909,5.921,910,3.995,911,3.995,912,3.995,913,3.995,914,3.995,915,4.415,916,3.995,917,3.995,918,3.995]],["title/components/SalesComponent.html",[0,0.019,92,0.613]],["body/components/SalesComponent.html",[0,0.027,1,0.62,2,0.963,3,0.341,4,0.294,5,0.76,6,0.76,7,0.76,8,0.294,10,0.687,11,1.481,12,1.629,14,1.064,15,0.868,16,0.868,18,1.064,19,0.62,20,0.62,21,1.064,23,1.573,25,0.341,26,0.62,28,0.668,29,0.039,30,1.013,31,1.111,32,1.002,34,1.143,36,0.775,37,0.547,39,0.687,42,1.33,44,0.922,45,0.9,47,1.064,48,0.62,49,0.838,50,1.426,51,0.912,55,1.431,58,1.085,63,0.9,67,0.341,68,0.443,69,0.62,70,1.064,71,1.064,72,0.498,73,1.33,74,0.76,75,0.775,76,0.76,77,0.557,78,0.62,79,0.76,80,0.557,81,0.76,82,0.76,83,0.76,84,0.62,85,0.76,86,0.557,87,0.76,88,0.557,89,0.76,90,0.557,91,0.76,92,0.975,93,0.76,94,0.557,95,0.687,96,0.76,97,0.557,98,0.687,99,0.76,100,0.557,101,0.62,102,0.687,103,0.443,104,0.687,105,0.76,106,0.024,107,0.024,112,1.533,130,0.868,143,3.188,151,1.426,152,1.815,162,0.963,163,1.618,172,0.687,173,0.62,176,1.618,177,1.047,178,1.294,179,1.294,180,1.195,181,1.451,182,1.573,183,1.313,184,1.426,185,0.868,186,1.064,197,1.426,206,1.815,221,0.76,225,1.018,227,0.868,232,1.018,234,1.533,238,1.123,243,1.927,244,1.493,276,1.738,279,2.147,321,2.147,347,1.573,364,1.723,365,1.783,368,1.723,403,1.942,405,2.628,411,1.959,413,1.294,414,2.744,415,2.826,419,2.224,421,1.533,444,2.276,446,2.929,450,2.147,451,1.573,489,2.276,492,3.693,512,2.434,523,1.959,524,3.166,561,2.478,571,1.927,576,1.723,579,1.959,580,2.276,581,2.412,582,3.188,583,2.276,584,2.276,589,3.188,590,2.276,591,2.276,592,2.276,596,2.744,597,3.188,598,3.188,599,3.921,600,2.744,601,1.738,602,2.744,603,1.738,604,2.744,605,2.744,606,3.188,607,3.678,664,1.723,802,2.744,855,2.744,919,2.276,920,3.861,921,3.861,922,3.861,923,3.861,924,3.861,925,5.082,926,2.758,927,3.861,928,2.758,929,2.758,930,2.758,931,2.758,932,2.758,933,2.758,934,2.758,935,2.758,936,2.758,937,2.276,938,2.758,939,3.861,940,3.861]],["title/modules/SharedModule.html",[108,1.894,941,1.894]],["body/modules/SharedModule.html",[3,0.551,4,0.475,8,0.475,16,1.003,18,1.452,29,0.039,36,0.931,37,0.631,39,1.111,67,0.551,68,0.716,69,1.003,103,0.997,106,0.032,107,0.032,108,2.785,110,2.48,112,2.93,146,3.985,153,2.225,232,1.647,316,1.816,532,1.647,887,2.785,941,3.782,942,2.785,943,4.63,944,3.168,945,3.681,946,3.681,947,3.681,948,4.35,949,3.681,950,3.168,951,4.459,952,4.459]],["title/components/ShoppingCartComponent.html",[0,0.019,94,0.613]],["body/components/ShoppingCartComponent.html",[0,0.02,1,0.38,2,0.667,3,0.209,4,0.18,5,0.466,6,0.466,7,0.466,8,0.18,10,0.421,11,1.365,12,1.494,14,0.738,15,0.602,16,0.602,18,0.738,19,0.38,20,0.38,21,0.738,23,1.091,25,0.209,26,0.43,28,0.607,29,0.039,30,0.683,31,0.829,32,0.748,34,1.206,36,0.704,37,0.239,38,0.624,39,0.421,42,1.208,44,0.955,45,1.117,47,0.738,48,0.662,51,0.975,55,0.943,58,0.85,60,0.94,63,1.016,64,1.903,67,0.209,68,0.271,69,0.38,70,0.738,71,0.738,72,0.305,73,1.136,74,0.466,75,0.738,76,0.466,77,0.342,78,0.38,79,0.466,80,0.342,81,0.466,82,0.466,83,0.466,84,0.38,85,0.466,86,0.342,87,0.466,88,0.342,89,0.466,90,0.342,91,0.466,92,0.342,93,0.466,94,0.886,95,1.145,96,0.466,97,0.342,98,0.421,99,0.466,100,0.342,101,0.38,102,0.421,103,0.271,104,0.421,105,0.466,106,0.016,107,0.016,127,3.388,130,1.033,142,3.116,151,0.989,152,1.679,153,0.844,162,0.667,163,1.268,166,1.253,168,2.293,169,2.852,172,0.943,173,0.85,174,2.363,176,0.897,177,1.014,178,0.897,179,0.897,180,0.963,181,1.208,183,1.093,184,0.989,185,1.103,186,1.607,191,2.449,194,1.703,196,1.586,197,1.812,198,1.786,199,2.057,204,1.489,208,1.489,209,1.091,213,1.489,221,1.535,223,1.703,225,0.989,227,1.072,230,3.122,231,0.94,232,0.624,238,1.541,239,1.449,252,0.567,253,1.631,255,1.056,257,2.103,258,0.94,268,1.056,270,1.201,276,1.703,277,1.903,283,1.673,287,2.363,288,1.999,289,2.439,292,1.659,297,1.659,299,1.903,302,2.508,308,3.307,309,3.63,310,3.116,311,3.122,312,2.103,315,2.21,316,1.354,317,3.265,322,1.703,323,1.489,325,2.439,327,1.903,333,2.363,336,1.201,337,1.201,338,1.201,343,2.688,347,1.786,350,1.903,351,1.201,352,1.903,353,1.201,354,1.201,355,1.201,356,0.624,357,1.201,358,1.201,362,2.929,364,2.077,365,1.894,368,2.077,398,1.395,403,1.774,410,2.688,411,1.903,413,1.54,418,3.065,421,2.795,423,0.94,425,1.091,431,2.21,435,3.116,441,3.204,443,3.487,450,1.489,456,2.21,465,2.688,466,1.201,467,1.056,468,1.395,470,1.395,477,1.395,478,1.395,479,3.793,481,2.263,485,1.395,492,1.056,501,1.489,504,2.363,512,0.761,515,2.21,537,1.849,549,1.673,550,1.673,576,1.673,596,1.903,599,2.363,600,1.903,601,1.703,602,1.903,603,1.703,604,1.903,605,3.81,608,1.395,655,1.056,665,1.903,675,1.395,735,1.395,740,1.673,777,3.122,778,2.21,783,2.21,800,2.21,802,1.903,810,2.21,812,2.21,815,2.21,820,1.395,821,2.21,829,2.21,831,2.21,843,2.21,855,1.903,877,1.395,937,1.395,953,3.853,954,1.201,955,4.123,956,2.678,957,2.678,958,4.907,959,3.325,960,3.783,961,3.783,962,3.783,963,3.783,964,2.678,965,2.678,966,2.678,967,2.678,968,1.69,969,3.783,970,2.678,971,1.69,972,3.783,973,3.783,974,1.69,975,2.678,976,2.678,977,1.69,978,3.783,979,1.69,980,1.69,981,1.69,982,1.69,983,2.678,984,2.678,985,1.69,986,1.69,987,1.69,988,2.678,989,1.69,990,2.678,991,1.69,992,1.69,993,1.69,994,3.325,995,3.783,996,1.69,997,1.69,998,1.69,999,1.69,1000,2.678,1001,1.69,1002,4.595,1003,3.783,1004,1.69,1005,1.69,1006,1.69,1007,1.69,1008,1.69,1009,1.69,1010,1.69,1011,1.69,1012,1.69,1013,1.69,1014,3.325,1015,3.325,1016,1.69,1017,1.69,1018,1.69,1019,1.69,1020,1.69,1021,1.69,1022,1.69,1023,1.69,1024,1.69,1025,1.69,1026,4.123,1027,1.69,1028,1.69,1029,1.69,1030,1.69,1031,1.69,1032,1.69,1033,1.69,1034,1.69,1035,1.69,1036,2.678,1037,2.678,1038,2.678,1039,2.678,1040,2.678,1041,2.678,1042,2.678,1043,3.783]],["title/components/SignUpComponent.html",[0,0.019,97,0.613]],["body/components/SignUpComponent.html",[0,0.022,1,0.419,2,0.721,3,0.231,4,0.199,5,0.976,6,0.514,7,0.514,8,0.199,10,0.465,11,1.392,12,1.525,14,0.797,15,0.797,16,0.65,18,0.976,19,0.419,20,0.419,21,0.797,23,1.178,25,0.231,26,0.465,28,0.626,29,0.039,30,0.781,31,0.721,32,0.898,34,1.163,36,0.734,37,0.264,39,0.465,42,1.19,44,0.958,45,1.159,48,0.846,49,1.314,50,1.068,51,0.951,55,1.312,58,0.898,63,0.807,67,0.231,68,0.3,69,0.419,70,0.797,71,0.797,72,0.337,73,1.1,74,0.514,75,0.766,76,0.514,77,0.377,78,0.419,79,0.514,80,0.377,81,0.514,82,0.514,83,0.514,84,0.419,85,0.514,86,0.377,87,0.514,88,0.377,89,0.514,90,0.377,91,0.514,92,0.377,93,0.514,94,0.377,95,0.465,96,0.514,97,0.807,98,1.189,99,0.514,100,0.377,101,0.419,102,0.465,103,0.3,104,0.465,105,0.514,106,0.018,107,0.018,112,1.037,116,3.741,130,1.108,137,2.388,141,2.057,153,1.768,161,3.07,162,0.721,163,1.448,164,1.768,166,0.567,168,2.22,170,1.942,172,0.995,173,0.898,176,1.187,177,0.934,178,0.969,179,0.969,180,0.924,181,0.797,183,1.312,185,1.028,186,1.1,188,3.566,191,2.828,193,2.891,196,1.572,197,1.761,198,1.862,199,0.931,200,1.165,201,1.165,203,1.302,204,2.402,206,1.443,207,2.156,213,1.037,214,1.165,221,1.314,223,1.595,224,1.443,225,1.068,227,1.108,231,1.037,232,0.689,233,1.037,234,1.609,235,1.768,237,2.388,238,1.178,239,1.45,243,1.992,244,1.338,252,0.625,253,0.567,256,1.037,257,2.542,258,1.037,264,0.931,266,1.443,268,1.807,271,0.931,272,1.325,274,2.055,280,1.807,284,2.22,285,1.54,287,1.165,288,2.336,289,2.741,290,3.248,292,2.459,340,1.338,347,1.178,356,0.689,365,0.689,403,1.187,405,0.931,413,1.532,421,1.037,423,1.609,425,1.178,428,2.517,451,2.38,461,1.165,481,2.146,501,1.97,503,2.055,504,1.807,506,2.402,512,1.302,517,3.384,518,2.979,532,1.91,537,1.609,539,1.807,545,2.213,549,2.494,550,2.855,562,2.836,571,1.443,601,1.797,603,2.057,618,2.925,619,3.566,620,3.295,622,2.388,624,3.295,628,4.177,630,2.388,637,1.54,638,1.54,639,2.388,641,2.388,643,3.566,644,2.055,645,2.388,647,2.388,650,2.388,651,2.925,652,2.388,654,2.388,655,2.213,659,1.54,660,1.165,661,1.54,662,1.302,663,1.165,665,2.055,666,2.388,668,2.388,670,1.54,672,3.566,673,1.54,683,2.388,687,1.807,689,1.54,690,2.388,691,2.388,692,1.54,693,3.295,694,3.773,695,2.388,696,1.54,697,1.54,698,1.54,699,1.54,700,1.54,702,1.54,703,1.54,704,1.54,705,1.54,708,1.54,709,1.54,723,1.325,728,1.807,733,2.388,738,2.925,740,2.494,741,3.295,742,2.388,743,3.295,744,2.055,745,2.388,746,1.54,747,1.54,748,1.54,749,1.54,750,2.055,751,2.388,752,2.388,753,1.54,754,1.54,755,1.54,756,1.54,798,1.54,808,2.925,887,3.289,915,2.388,1044,1.54,1045,2.893,1046,2.893,1047,2.893,1048,2.893,1049,1.865,1050,2.893,1051,2.893,1052,2.893,1053,1.865,1054,1.865,1055,2.893,1056,1.865,1057,1.865,1058,2.893,1059,1.865,1060,2.893,1061,1.865,1062,2.893,1063,1.865,1064,1.865,1065,1.865,1066,1.865,1067,1.865,1068,3.543,1069,1.865,1070,1.865,1071,1.865,1072,1.865,1073,1.865,1074,1.865,1075,1.865,1076,1.865,1077,1.865,1078,1.865,1079,1.865,1080,1.865,1081,1.865,1082,1.865,1083,2.893,1084,2.893,1085,2.893,1086,2.893,1087,2.893,1088,1.865,1089,1.865,1090,2.893,1091,1.865,1092,2.893,1093,1.865,1094,1.865,1095,1.865,1096,1.865,1097,1.865,1098,1.865,1099,2.893,1100,1.865,1101,1.865,1102,3.543]],["title/interfaces/User.html",[662,1.365,757,1.686]],["body/interfaces/User.html",[3,0.482,4,0.416,8,0.416,25,0.482,26,0.78,28,0.736,29,0.039,30,1.133,44,0.78,48,0.627,50,1.441,67,0.482,106,0.03,107,0.03,141,2.493,173,1.306,177,1.112,180,0.789,183,1.211,193,2.425,197,2.146,198,1.98,227,0.878,322,2.615,332,2.773,340,1.629,403,2.078,405,2.899,413,1.947,461,3.036,532,2.146,537,3.08,539,3.46,601,2.187,603,2.187,662,2.187,740,3.036,757,2.17,758,2.773,767,4.012,1103,3.222,1104,4.86,1105,4.86]],["title/components/UsersComponent.html",[0,0.019,100,0.613]],["body/components/UsersComponent.html",[0,0.025,1,0.513,2,0.84,3,0.282,4,0.243,5,0.629,6,0.929,7,0.629,8,0.243,10,0.569,11,1.441,12,1.582,14,0.929,15,1.061,16,0.758,18,1.104,19,0.513,20,0.513,21,0.929,25,0.282,26,0.541,28,0.611,29,0.039,30,0.724,31,0.84,32,0.758,34,1.204,36,0.711,37,0.323,39,0.569,42,1.361,44,0.971,45,1.151,47,0.929,48,0.644,51,0.934,55,0.999,56,1.885,58,0.995,61,1.623,63,1.06,67,0.282,68,0.367,69,0.513,70,0.929,71,0.929,72,0.413,73,1.301,74,0.629,75,0.793,76,0.629,77,0.461,78,0.513,79,0.629,80,0.461,81,0.629,82,0.629,83,0.629,84,0.513,85,0.629,86,0.461,87,0.629,88,0.461,89,0.629,90,0.461,91,0.629,92,0.461,93,0.629,94,0.461,95,0.569,96,0.629,97,0.461,98,0.569,99,0.629,100,0.998,101,1.111,102,0.569,103,0.367,104,0.569,105,0.629,106,0.021,107,0.021,130,1.111,148,1.426,151,1.245,152,1.633,154,2.106,162,0.84,163,1.483,164,2,166,1.219,170,2.082,172,0.999,173,0.901,176,1.13,177,0.893,178,1.13,179,1.13,180,1.082,181,1.301,182,1.373,183,1.377,184,1.245,185,1.061,186,1.445,196,0.694,201,3.086,203,1.517,208,1.875,209,1.373,213,1.27,214,1.426,221,1.301,223,1.992,224,2.356,225,1.634,227,1.179,229,2.783,233,1.27,235,2.718,238,0.93,239,1.554,252,0.765,253,1.219,264,1.14,266,1.14,271,1.14,283,2.106,284,1.27,288,0.93,299,2.395,312,2.747,316,1.923,317,3.631,322,1.804,323,1.875,325,2.747,327,2.395,333,2.848,334,2,338,1.623,340,0.765,347,1.633,350,2.395,351,1.623,352,2.395,353,1.623,354,1.623,355,1.623,356,1.245,357,1.623,358,1.623,391,3.897,403,1.937,406,1.885,413,1.13,419,1.14,420,2.106,424,2.783,425,0.93,428,1.623,450,1.27,484,1.885,501,1.875,506,1.875,508,1.623,511,1.623,521,2.783,532,1.245,561,1.27,576,3.192,601,1.517,603,1.517,632,1.885,644,3.51,655,2.503,662,2.487,663,1.426,677,2.783,678,2.783,680,2.783,682,2.783,736,2.395,744,1.623,750,2.395,795,2.395,818,4.108,826,2.395,1106,1.623,1107,4.008,1108,3.372,1109,4.426,1110,3.653,1111,4.426,1112,3.372,1113,2.284,1114,3.372,1115,4.008,1116,3.372,1117,2.284,1118,4.721,1119,3.897,1120,3.372,1121,3.372,1122,2.284,1123,3.372,1124,3.372,1125,2.284,1126,3.372,1127,3.372,1128,3.372,1129,3.372,1130,2.284,1131,3.372,1132,4.721,1133,2.284,1134,2.284,1135,2.284,1136,2.284,1137,2.284,1138,2.284,1139,3.372,1140,2.284,1141,2.284,1142,3.372,1143,2.284,1144,2.284,1145,2.284,1146,2.284,1147,2.284,1148,2.284,1149,3.372,1150,2.284,1151,3.372,1152,2.284,1153,3.372,1154,2.284,1155,2.284,1156,2.284,1157,4.008,1158,3.372,1159,2.284,1160,2.284,1161,2.284,1162,2.284,1163,2.284,1164,3.372,1165,3.372,1166,3.372,1167,3.372,1168,3.372,1169,3.372,1170,3.372]],["title/injectables/UsersService.html",[170,1.235,771,1.686]],["body/injectables/UsersService.html",[3,0.244,4,0.21,8,0.21,13,1.403,15,0.925,25,0.244,26,0.485,28,0.621,29,0.039,30,1.05,31,0.492,32,0.444,34,1.181,36,0.59,37,0.28,44,0.966,45,1.156,48,0.751,51,0.881,55,1.351,58,0.826,63,0.831,67,0.244,68,0.317,75,0.806,101,1.094,106,0.019,107,0.019,130,1.307,141,2.105,162,0.753,164,2.854,166,0.6,170,1.231,172,1.251,173,1.129,177,1.059,180,1.163,181,1.646,183,0.753,185,1.269,189,3.567,193,2.621,194,1.852,196,1.647,197,1.973,198,2.176,199,2.213,200,2.57,203,2.539,207,1.832,209,1.676,218,2.495,221,1.555,224,2.213,226,1.63,227,1.278,228,1.63,235,2.704,238,1.231,239,1.686,243,2.334,244,1.013,247,2.921,248,2.921,252,0.662,253,1.116,256,2.862,264,0.985,266,2.505,271,0.985,279,1.681,307,2.148,312,1.681,313,2.609,321,1.681,322,2.191,334,1.508,339,1.403,347,2.096,356,0.729,366,2.148,374,2.148,403,2.045,407,2.288,418,1.888,420,1.888,423,1.681,425,2.298,446,2.601,451,1.496,467,2.57,481,2.191,506,2.288,507,3.396,508,2.148,509,2.495,532,1.901,559,1.403,561,1.681,571,1.508,577,2.495,581,1.888,662,2.469,663,1.234,664,1.888,679,2.495,718,3.323,719,1.63,721,2.495,723,2.148,724,1.63,725,1.63,726,1.63,728,2.57,736,1.403,771,1.681,772,1.403,786,1.63,787,4.858,791,3.396,792,4.657,793,4.657,794,4.144,795,2.148,799,3.396,814,2.495,818,2.923,826,2.923,837,2.495,846,2.495,848,2.495,851,1.63,854,1.63,857,3.031,1110,2.495,1119,2.495,1171,1.63,1172,3.672,1173,3.023,1174,4.114,1175,3.023,1176,3.023,1177,3.023,1178,3.023,1179,3.023,1180,3.023,1181,3.023,1182,1.975,1183,3.023,1184,1.975,1185,1.975,1186,3.023,1187,1.975,1188,3.023,1189,1.975,1190,3.023,1191,4.434,1192,1.975,1193,4.114,1194,3.023,1195,1.975,1196,3.023,1197,1.975,1198,3.023,1199,1.975,1200,1.975,1201,1.975,1202,4.434,1203,4.434,1204,1.975,1205,4.677,1206,4.434,1207,4.434,1208,4.114,1209,1.975,1210,4.114,1211,3.672,1212,1.975,1213,3.023,1214,3.023,1215,3.023,1216,3.023,1217,1.975,1218,1.975,1219,1.975,1220,1.975,1221,1.975,1222,1.975,1223,1.975,1224,1.975,1225,1.975,1226,1.975]],["title/coverage.html",[1227,3.403]],["body/coverage.html",[0,0.038,1,0.9,8,0.427,9,3.306,19,0.9,20,0.9,28,0.495,29,0.039,72,0.724,77,0.809,80,0.809,84,0.9,86,0.809,88,0.809,90,0.809,92,0.809,94,0.809,97,0.809,100,0.809,103,0.643,106,0.03,107,0.03,116,2.845,122,2.845,127,3.084,149,3.306,150,3.306,170,1.631,293,3.508,297,1.998,302,1.998,316,2.277,356,1.479,365,2.21,369,3.306,385,3.306,493,3.306,511,4.079,551,3.306,615,3.306,660,2.501,662,1.802,757,2.746,759,3.306,771,2.746,773,3.306,887,3.084,888,3.306,889,3.306,919,3.306,953,3.508,954,3.508,1044,3.306,1103,3.306,1106,3.508,1171,3.306,1227,3.306,1228,4.004,1229,4.004,1230,4.004,1231,4.004,1232,3.306,1233,3.306,1234,5.846,1235,4.938,1236,4.004,1237,5.589,1238,4.004,1239,4.004,1240,4.004,1241,4.004,1242,4.004,1243,4.004,1244,4.076,1245,4.004,1246,4.004,1247,4.004,1248,4.004,1249,4.004,1250,4.004,1251,4.004,1252,4.004,1253,4.004,1254,4.004,1255,4.004,1256,4.004,1257,4.004,1258,4.004,1259,4.004,1260,4.004,1261,4.004,1262,4.004,1263,4.004,1264,3.306,1265,4.004,1266,4.004,1267,4.004,1268,4.004]],["title/dependencies.html",[942,2.275,1269,1.804]],["body/dependencies.html",[29,0.039,37,0.656,38,1.712,39,1.155,106,0.033,107,0.033,232,1.712,316,1.888,453,3.293,942,2.895,1270,4.635,1271,6.14,1272,4.635,1273,4.635,1274,4.635,1275,5.39,1276,4.449,1277,4.635,1278,4.635,1279,4.635,1280,4.635,1281,4.635,1282,4.635,1283,4.635]],["title/miscellaneous/functions.html",[1284,1.586,1285,3.007]],["body/miscellaneous/functions.html",[25,0.567,28,0.567,29,0.037,44,0.86,48,0.737,51,0.86,63,0.927,75,0.737,106,0.033,107,0.033,172,1.143,173,1.031,177,0.829,180,0.927,185,1.031,191,2.289,196,1.629,206,1.868,227,1.031,244,1.537,284,2.55,288,2.182,292,2.289,340,1.537,451,2.182,517,3.346,518,2.865,532,2.096,660,3.346,687,3.346,688,3.786,1264,3.786,1284,2.865,1285,3.786,1286,4.587,1287,4.587,1288,4.587,1289,4.587,1290,4.587,1291,4.587,1292,4.587]],["title/index.html",[25,0.314,1293,2.539,1294,2.539]],["body/index.html",[0,0.034,4,0.458,29,0.032,33,2.687,47,1.522,75,0.691,78,0.967,106,0.032,107,0.032,151,1.589,356,1.589,950,3.056,1269,3.056,1295,5.158,1296,4.302,1297,5.524,1298,3.551,1299,4.302,1300,4.302,1301,5.158,1302,5.857,1303,6.012,1304,4.302,1305,4.302,1306,4.302,1307,4.302,1308,4.302,1309,4.302,1310,4.302,1311,4.302,1312,4.302,1313,4.302,1314,5.524,1315,5.524,1316,4.302,1317,5.728,1318,4.302,1319,4.302,1320,4.302,1321,4.302,1322,5.158,1323,5.158,1324,5.728,1325,4.302,1326,5.158,1327,5.158,1328,4.302,1329,5.946,1330,4.302,1331,4.302,1332,4.302,1333,5.158,1334,4.302,1335,4.302,1336,4.302,1337,4.302,1338,4.302,1339,4.302,1340,5.524,1341,4.302,1342,4.302,1343,4.302,1344,3.056,1345,4.302,1346,4.302]],["title/modules.html",[110,2.292]],["body/modules.html",[29,0.034,106,0.034,107,0.034,109,3.442,110,2.694,941,3.026,1276,3.999,1347,4.844,1348,4.844,1349,5.529,1350,4.844,1351,4.844]],["title/overview.html",[1344,2.929]],["body/overview.html",[2,1.161,29,0.036,69,1.048,72,0.842,103,0.981,106,0.033,107,0.033,108,2.91,110,2.591,146,3.31,316,1.898,758,3.31,772,3.31,801,3.846,941,3.736,942,2.91,943,3.846,944,3.31,945,3.846,946,3.846,947,3.846,948,4.463,949,3.846,950,3.31,1344,3.31,1352,5.712,1353,4.659]],["title/properties.html",[26,0.585,1269,1.804]],["body/properties.html",[26,0.784,29,0.036,106,0.034,107,0.034,1298,4.032,1354,4.884]],["title/miscellaneous/variables.html",[1284,1.586,1355,3.007]],["body/miscellaneous/variables.html",[25,0.558,28,0.733,29,0.039,31,1.126,32,1.015,33,2.821,106,0.033,107,0.033,127,2.821,293,3.209,316,2.49,944,3.209,953,3.209,954,3.772,1106,3.209,1232,3.728,1233,4.382,1244,3.728,1284,2.821,1355,3.728,1356,4.516,1357,4.516,1358,4.516,1359,4.516,1360,4.516,1361,4.516,1362,4.516,1363,4.516,1364,4.516,1365,4.516,1366,4.516,1367,4.516,1368,4.516,1369,4.516,1370,4.516,1371,4.516,1372,4.516,1373,4.516,1374,4.516]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":365,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1354,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":801,"title":{},"body":{"injectables/ProductService.html":{},"overview.html":{}}}],["1/1",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1237,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1353,"title":{},"body":{"overview.html":{}}}],["14/17",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["15/15",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["17.1.0",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["17.3.8",{"_index":1299,"title":{},"body":{"index.html":{}}}],["18/23",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1352,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":745,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["2024",{"_index":381,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":915,"title":{},"body":{"directives/RutFormatDirective.html":{},"components/SignUpComponent.html":{}}}],["3000",{"_index":1090,"title":{},"body":{"components/SignUpComponent.html":{}}}],["36",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["4/11",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":270,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["5.3.3",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["6/10",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":742,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["8/10",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1235,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["9]/.test(value",{"_index":699,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["9kk]/g",{"_index":908,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["abre",{"_index":1131,"title":{},"body":{"components/UsersComponent.html":{}}}],["abstractcontrol",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["acceder",{"_index":1137,"title":{},"body":{"components/UsersComponent.html":{}}}],["acciones",{"_index":939,"title":{},"body":{"components/SalesComponent.html":{}}}],["activa",{"_index":972,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["activatedroute",{"_index":301,"title":{},"body":{"components/DetailsComponent.html":{}}}],["actual",{"_index":419,"title":{},"body":{"components/HeaderComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/UsersComponent.html":{}}}],["actual_component",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["actualiza",{"_index":407,"title":{},"body":{"components/HeaderComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["actualización",{"_index":1193,"title":{},"body":{"injectables/UsersService.html":{}}}],["actualizados",{"_index":734,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/ProductService.html":{}}}],["actualizando",{"_index":737,"title":{},"body":{"components/PerfilComponent.html":{}}}],["actualizar",{"_index":446,"title":{},"body":{"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"injectables/UsersService.html":{}}}],["actualizarestado",{"_index":923,"title":{},"body":{"components/SalesComponent.html":{}}}],["actualizarestado(pedido",{"_index":924,"title":{},"body":{"components/SalesComponent.html":{}}}],["actualizaron",{"_index":669,"title":{},"body":{"components/PerfilComponent.html":{}}}],["actualmente",{"_index":444,"title":{},"body":{"components/HeaderComponent.html":{},"components/SalesComponent.html":{}}}],["acumulado",{"_index":988,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["add",{"_index":1336,"title":{},"body":{"index.html":{}}}],["adddoc(this.userscollection",{"_index":1200,"title":{},"body":{"injectables/UsersService.html":{}}}],["addproduct",{"_index":775,"title":{},"body":{"injectables/ProductService.html":{}}}],["addproduct(product",{"_index":789,"title":{},"body":{"injectables/ProductService.html":{}}}],["addtocart",{"_index":298,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{}}}],["addtocart(product",{"_index":305,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{}}}],["adduser",{"_index":1173,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser(user",{"_index":1181,"title":{},"body":{"injectables/UsersService.html":{}}}],["admin",{"_index":483,"title":{},"body":{"components/HeaderComponent.html":{}}}],["administrador",{"_index":406,"title":{},"body":{"components/HeaderComponent.html":{},"components/UsersComponent.html":{}}}],["agrega",{"_index":797,"title":{},"body":{"injectables/ProductService.html":{}}}],["agregado",{"_index":318,"title":{},"body":{"components/DetailsComponent.html":{}}}],["agregar",{"_index":366,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["al",{"_index":183,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["alcanza",{"_index":813,"title":{},"body":{"injectables/ProductService.html":{}}}],["alguno",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{}}}],["almacenada",{"_index":973,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["almacenado",{"_index":578,"title":{},"body":{"components/OrdersComponent.html":{},"injectables/ProductService.html":{}}}],["almacenados",{"_index":523,"title":{},"body":{"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["almacenamiento",{"_index":414,"title":{},"body":{"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{}}}],["almacenando",{"_index":984,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["almacenar",{"_index":1138,"title":{},"body":{"components/UsersComponent.html":{}}}],["angular",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/firestore",{"_index":851,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["angular/forms",{"_index":232,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["antes",{"_index":656,"title":{},"body":{"components/PerfilComponent.html":{}}}],["apikey\":\"aizasydp3dqlviw0tkwhlxdif6tzdsexjd6awlm",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicación",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["app.component.css",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1233,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid\":\"1:916680941903:web:6bc1c0a1a74e72aab0653a",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1308,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":109,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["apprutformat",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["arguments",{"_index":898,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["arreglo",{"_index":561,"title":{},"body":{"components/OrdersComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["artifacts",{"_index":1318,"title":{},"body":{"index.html":{}}}],["asignados",{"_index":1105,"title":{},"body":{"interfaces/User.html":{}}}],["asignar",{"_index":927,"title":{},"body":{"components/SalesComponent.html":{}}}],["async",{"_index":164,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["autenticación",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{}}}],["autenticado",{"_index":411,"title":{},"body":{"components/HeaderComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["authdomain\":\"db",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1309,"title":{},"body":{"index.html":{}}}],["available",{"_index":1348,"title":{},"body":{"modules.html":{}}}],["await",{"_index":266,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["añade",{"_index":307,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["añadir",{"_index":313,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["bandera",{"_index":211,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{}}}],["basado",{"_index":560,"title":{},"body":{"components/OrdersComponent.html":{}}}],["base",{"_index":242,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["behaviorsubject",{"_index":840,"title":{},"body":{"injectables/ProductService.html":{}}}],["behaviorsubject(this.getcart",{"_index":838,"title":{},"body":{"injectables/ProductService.html":{}}}],["blanco",{"_index":685,"title":{},"body":{"components/PerfilComponent.html":{}}}],["body",{"_index":354,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["boolean",{"_index":208,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["bootstrap",{"_index":316,"title":{},"body":{"components/DetailsComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.modal(document.getelementbyid('deleteusermodal",{"_index":1144,"title":{},"body":{"components/UsersComponent.html":{}}}],["bootstrap.modal.getinstance(modalelement",{"_index":1154,"title":{},"body":{"components/UsersComponent.html":{}}}],["bootstrap.toast(toastelement",{"_index":357,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["botón",{"_index":1085,"title":{},"body":{"components/SignUpComponent.html":{}}}],["browse",{"_index":1349,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1276,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":1317,"title":{},"body":{"index.html":{}}}],["básica",{"_index":376,"title":{},"body":{"components/FooterComponent.html":{}}}],["cabecera",{"_index":455,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cada",{"_index":821,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["cadena",{"_index":249,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{}}}],["calcula",{"_index":969,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calculatetotal",{"_index":960,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cambiar",{"_index":273,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["cambio",{"_index":192,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["cambios",{"_index":427,"title":{},"body":{"components/HeaderComponent.html":{}}}],["campo",{"_index":683,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["campos",{"_index":207,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["cancela",{"_index":432,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cancelar",{"_index":1170,"title":{},"body":{"components/UsersComponent.html":{}}}],["cantidad",{"_index":443,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["cantidades",{"_index":843,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["capabilities",{"_index":1338,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":743,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["carga",{"_index":325,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["cargado",{"_index":341,"title":{},"body":{"components/DetailsComponent.html":{}}}],["cargar",{"_index":632,"title":{},"body":{"components/PerfilComponent.html":{},"components/UsersComponent.html":{}}}],["carrito",{"_index":309,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["cart",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["cart.component",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cart.component.css",{"_index":957,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":956,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":954,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cart.component.ts:108",{"_index":979,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:119",{"_index":977,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:129",{"_index":974,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:141",{"_index":982,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:203",{"_index":985,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:26",{"_index":986,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:29",{"_index":987,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:32",{"_index":989,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:35",{"_index":964,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:57",{"_index":981,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:68",{"_index":980,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:78",{"_index":968,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:88",{"_index":971,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.filter(item",{"_index":879,"title":{},"body":{"injectables/ProductService.html":{}}}],["cart.find(item",{"_index":872,"title":{},"body":{"injectables/ProductService.html":{}}}],["cart.push",{"_index":876,"title":{},"body":{"injectables/ProductService.html":{}}}],["cart.reduce((sum",{"_index":476,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cart/shopping",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ShoppingCartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartquantity",{"_index":389,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cartsubscription",{"_index":390,"title":{},"body":{"components/HeaderComponent.html":{}}}],["carácter",{"_index":703,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["catch",{"_index":271,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["catch(error",{"_index":1161,"title":{},"body":{"components/UsersComponent.html":{}}}],["categoria",{"_index":760,"title":{},"body":{"interfaces/Product.html":{}}}],["categoría",{"_index":764,"title":{},"body":{"interfaces/Product.html":{}}}],["cdr",{"_index":399,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cerrar",{"_index":459,"title":{},"body":{"components/HeaderComponent.html":{}}}],["change",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["changedetectorref",{"_index":400,"title":{},"body":{"components/HeaderComponent.html":{}}}],["changepasswordcomponent",{"_index":77,"title":{"components/ChangePasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["changepasswordform",{"_index":157,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["check",{"_index":1343,"title":{},"body":{"index.html":{}}}],["checkadminpermission",{"_index":393,"title":{},"body":{"components/HeaderComponent.html":{}}}],["checkout",{"_index":955,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["checkproductidexists",{"_index":776,"title":{},"body":{"injectables/ProductService.html":{}}}],["checkproductidexists(id",{"_index":803,"title":{},"body":{"injectables/ProductService.html":{}}}],["checkusersession",{"_index":961,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["chileno",{"_index":1291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["choice",{"_index":1332,"title":{},"body":{"index.html":{}}}],["ciclo",{"_index":178,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["cierra",{"_index":417,"title":{},"body":{"components/HeaderComponent.html":{}}}],["class",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["clearcart",{"_index":777,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["cli",{"_index":1297,"title":{},"body":{"index.html":{}}}],["clic",{"_index":1084,"title":{},"body":{"components/SignUpComponent.html":{}}}],["cliente",{"_index":1097,"title":{},"body":{"components/SignUpComponent.html":{}}}],["cluster_sharedmodule",{"_index":945,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":946,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":947,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":1312,"title":{},"body":{"index.html":{}}}],["coincidan",{"_index":1076,"title":{},"body":{"components/SignUpComponent.html":{}}}],["coinciden",{"_index":562,"title":{},"body":{"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["coincidencia",{"_index":642,"title":{},"body":{"components/PerfilComponent.html":{}}}],["coincidir",{"_index":752,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["colección",{"_index":791,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["collection(this.firestore",{"_index":846,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["collection,doc,docdata,getdoc,setdoc,updatedoc,deletedoc",{"_index":850,"title":{},"body":{"injectables/ProductService.html":{}}}],["collectiondata(productscollection",{"_index":865,"title":{},"body":{"injectables/ProductService.html":{}}}],["comercializadora",{"_index":382,"title":{},"body":{"components/FooterComponent.html":{}}}],["command",{"_index":1333,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["commonmodule,formsmodule",{"_index":932,"title":{},"body":{"components/SalesComponent.html":{}}}],["commonmodule,reactiveformsmodule",{"_index":992,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["commonmodule,routermodule",{"_index":454,"title":{},"body":{"components/HeaderComponent.html":{}}}],["como",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/OrdersComponent.html":{},"components/UsersComponent.html":{}}}],["complejidad",{"_index":648,"title":{},"body":{"components/PerfilComponent.html":{}}}],["completa",{"_index":794,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["completamente",{"_index":976,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["completo",{"_index":740,"title":{},"body":{"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["componente",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["componentes",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/footer/footer.component",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["components/header/header.component",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["compra",{"_index":1042,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":310,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["con",{"_index":239,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["configurar",{"_index":1069,"title":{},"body":{"components/SignUpComponent.html":{}}}],["confirmación",{"_index":644,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["confirmar",{"_index":750,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["confirmpassword",{"_index":672,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["confirmpassword.value",{"_index":1080,"title":{},"body":{"components/SignUpComponent.html":{}}}],["conservar",{"_index":1218,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.error(\"error",{"_index":272,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["console.error('error",{"_index":736,"title":{},"body":{"components/PerfilComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["console.log('usuario",{"_index":1148,"title":{},"body":{"components/UsersComponent.html":{}}}],["console.warn('no",{"_index":1157,"title":{},"body":{"components/UsersComponent.html":{}}}],["const",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":166,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(el",{"_index":894,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["constructor(f",{"_index":1049,"title":{},"body":{"components/SignUpComponent.html":{}}}],["constructor(fb",{"_index":167,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["constructor(firestore",{"_index":786,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":252,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(productservice",{"_index":398,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["constructor(route",{"_index":300,"title":{},"body":{"components/DetailsComponent.html":{}}}],["constructor(usersservice",{"_index":1113,"title":{},"body":{"components/UsersComponent.html":{}}}],["construir",{"_index":967,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["contenedor",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["contener",{"_index":693,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["contenido",{"_index":809,"title":{},"body":{"injectables/ProductService.html":{}}}],["contiene",{"_index":206,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["contienen",{"_index":842,"title":{},"body":{"injectables/ProductService.html":{}}}],["continuar",{"_index":1041,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["contrario",{"_index":248,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["contraseña",{"_index":193,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["contraseñas",{"_index":643,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["control",{"_index":687,"title":{},"body":{"components/PerfilComponent.html":{},"directives/RutFormatDirective.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["control.value",{"_index":689,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["controles",{"_index":245,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/PerfilComponent.html":{}}}],["correcta",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{}}}],["correctamente",{"_index":216,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/PerfilComponent.html":{}}}],["correo",{"_index":197,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["correoenviado",{"_index":158,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["correoenviadocontrasena",{"_index":159,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["correofiltro",{"_index":554,"title":{},"body":{"components/OrdersComponent.html":{}}}],["correonoregistrado",{"_index":160,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["corresponde",{"_index":825,"title":{},"body":{"injectables/ProductService.html":{}}}],["correspondiente",{"_index":326,"title":{},"body":{"components/DetailsComponent.html":{}}}],["coverage",{"_index":1227,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{}}}],["crear",{"_index":331,"title":{},"body":{"components/DetailsComponent.html":{}}}],["credenciales",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UsersService.html":{}}}],["cualquier",{"_index":1123,"title":{},"body":{"components/UsersComponent.html":{}}}],["cuando",{"_index":189,"title":{},"body":{"components/ChangePasswordComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["cumple",{"_index":650,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["currency:'':'symbol':'1.0",{"_index":364,"title":{},"body":{"components/DetailsComponent.html":{},"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currency:\\'\\':\\'symbol\\':\\'1.0",{"_index":368,"title":{},"body":{"components/DetailsComponent.html":{},"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentpassword",{"_index":712,"title":{},"body":{"components/PerfilComponent.html":{}}}],["cuya",{"_index":814,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["datos",{"_index":243,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["de",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["debe",{"_index":290,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["deben",{"_index":751,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["declaramos",{"_index":1136,"title":{},"body":{"components/UsersComponent.html":{}}}],["declarations",{"_index":943,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":338,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["decorators",{"_index":904,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["decrementa",{"_index":812,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["decrementar",{"_index":815,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["decrementquantity",{"_index":778,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["decrementquantity(productid",{"_index":810,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["default",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["definido",{"_index":1217,"title":{},"body":{"injectables/UsersService.html":{}}}],["dejan",{"_index":684,"title":{},"body":{"components/PerfilComponent.html":{}}}],["del",{"_index":177,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["delete",{"_index":715,"title":{},"body":{"components/PerfilComponent.html":{}}}],["deletedoc(productdoc",{"_index":862,"title":{},"body":{"injectables/ProductService.html":{}}}],["deletedoc(userdoc",{"_index":1226,"title":{},"body":{"injectables/UsersService.html":{}}}],["deletemodal",{"_index":1143,"title":{},"body":{"components/UsersComponent.html":{}}}],["deletemodal.show",{"_index":1145,"title":{},"body":{"components/UsersComponent.html":{}}}],["deleteproduct",{"_index":779,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct(id",{"_index":816,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteuser",{"_index":1110,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":1183,"title":{},"body":{"injectables/UsersService.html":{}}}],["demostración",{"_index":1128,"title":{},"body":{"components/UsersComponent.html":{}}}],["dependencies",{"_index":942,"title":{"dependencies.html":{}},"body":{"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describe",{"_index":933,"title":{},"body":{"components/SalesComponent.html":{}}}],["descripcion",{"_index":761,"title":{},"body":{"interfaces/Product.html":{}}}],["descripción",{"_index":360,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/Product.html":{}}}],["description",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["desde",{"_index":323,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["desea",{"_index":802,"title":{},"body":{"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["deseas",{"_index":1168,"title":{},"body":{"components/UsersComponent.html":{}}}],["después",{"_index":428,"title":{},"body":{"components/HeaderComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["destruir",{"_index":431,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["details",{"_index":294,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["details.component.css",{"_index":296,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.html",{"_index":295,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details/:id",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["detailscomponent",{"_index":80,"title":{"components/DetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["detallada",{"_index":766,"title":{},"body":{"interfaces/Product.html":{}}}],["detalle",{"_index":608,"title":{},"body":{"components/OrdersComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["detalles",{"_index":335,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detección",{"_index":426,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dev",{"_index":1305,"title":{},"body":{"index.html":{}}}],["development",{"_index":1300,"title":{},"body":{"index.html":{}}}],["dinámicas",{"_index":379,"title":{},"body":{"components/FooterComponent.html":{}}}],["direccion",{"_index":994,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["direccionenvio",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{}}}],["dirección",{"_index":601,"title":{},"body":{"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["directive",{"_index":72,"title":{"directives/RutFormatDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1316,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1321,"title":{},"body":{"index.html":{}}}],["disponibles",{"_index":634,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/ProductService.html":{}}}],["dist",{"_index":1320,"title":{},"body":{"index.html":{}}}],["distribuidora",{"_index":383,"title":{},"body":{"components/FooterComponent.html":{}}}],["doc(this.firestore",{"_index":857,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["doc.data",{"_index":1222,"title":{},"body":{"injectables/UsersService.html":{}}}],["doc.id",{"_index":1223,"title":{},"body":{"injectables/UsersService.html":{}}}],["docdata(productdoc",{"_index":867,"title":{},"body":{"injectables/ProductService.html":{}}}],["docsnapshot.exists",{"_index":864,"title":{},"body":{"injectables/ProductService.html":{}}}],["document.getelementbyid('deleteusermodal",{"_index":1152,"title":{},"body":{"components/UsersComponent.html":{}}}],["document.getelementbyid('livetoast",{"_index":351,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["document.getelementbyid('toast",{"_index":353,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["documentation",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["documento",{"_index":806,"title":{},"body":{"injectables/ProductService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["durante",{"_index":229,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/UsersComponent.html":{}}}],["dv",{"_index":918,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["dyf",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dyf.appspot.com",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dyf.firebaseapp.com",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1330,"title":{},"body":{"index.html":{}}}],["editar",{"_index":739,"title":{},"body":{"components/PerfilComponent.html":{}}}],["ejecuta",{"_index":182,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/UsersComponent.html":{}}}],["el",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["electrónico",{"_index":198,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["element",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["elemento",{"_index":1160,"title":{},"body":{"components/UsersComponent.html":{}}}],["elementref",{"_index":895,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["elimina",{"_index":420,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["eliminación",{"_index":1119,"title":{},"body":{"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["eliminado",{"_index":1149,"title":{},"body":{"components/UsersComponent.html":{}}}],["eliminar",{"_index":818,"title":{},"body":{"injectables/ProductService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["email",{"_index":256,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["emite",{"_index":841,"title":{},"body":{"injectables/ProductService.html":{}}}],["emitevent",{"_index":913,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["en",{"_index":221,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["encabezado",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["encontr",{"_index":1158,"title":{},"body":{"components/UsersComponent.html":{}}}],["encontraron",{"_index":614,"title":{},"body":{"components/OrdersComponent.html":{}}}],["encuentra",{"_index":827,"title":{},"body":{"injectables/ProductService.html":{}}}],["end",{"_index":1329,"title":{},"body":{"index.html":{}}}],["enrutador",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["entero",{"_index":462,"title":{},"body":{"components/HeaderComponent.html":{}}}],["entre",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["enviada",{"_index":219,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["enviado",{"_index":215,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["enviar",{"_index":654,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["envía",{"_index":190,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["envío",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["error",{"_index":224,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["error('email",{"_index":724,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UsersService.html":{}}}],["error('method",{"_index":1065,"title":{},"body":{"components/SignUpComponent.html":{}}}],["errores",{"_index":284,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["errors",{"_index":690,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.missinglowercase",{"_index":697,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.missingnumber",{"_index":700,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.missingspecial",{"_index":702,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.missinguppercase",{"_index":692,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["es",{"_index":288,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["especial",{"_index":704,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["especificado",{"_index":805,"title":{},"body":{"injectables/ProductService.html":{}}}],["específicas",{"_index":380,"title":{},"body":{"components/FooterComponent.html":{}}}],["específico",{"_index":251,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{}}}],["específicos",{"_index":1060,"title":{},"body":{"components/SignUpComponent.html":{}}}],["est",{"_index":199,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["establece",{"_index":1126,"title":{},"body":{"components/UsersComponent.html":{}}}],["establecen",{"_index":635,"title":{},"body":{"components/PerfilComponent.html":{}}}],["estado",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["este",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/SignUpComponent.html":{}}}],["estructura",{"_index":375,"title":{},"body":{"components/FooterComponent.html":{}}}],["están",{"_index":633,"title":{},"body":{"components/PerfilComponent.html":{}}}],["estás",{"_index":1166,"title":{},"body":{"components/UsersComponent.html":{}}}],["estático",{"_index":373,"title":{},"body":{"components/FooterComponent.html":{}}}],["event",{"_index":899,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["execute",{"_index":1326,"title":{},"body":{"index.html":{}}}],["existe",{"_index":799,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["existen",{"_index":940,"title":{},"body":{"components/SalesComponent.html":{}}}],["existente",{"_index":836,"title":{},"body":{"injectables/ProductService.html":{}}}],["existingproduct",{"_index":871,"title":{},"body":{"injectables/ProductService.html":{}}}],["existingproduct.quantity",{"_index":875,"title":{},"body":{"injectables/ProductService.html":{}}}],["exitosamente",{"_index":1101,"title":{},"body":{"components/SignUpComponent.html":{}}}],["export",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["f",{"_index":1051,"title":{},"body":{"components/SignUpComponent.html":{}}}],["false",{"_index":209,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["favor",{"_index":277,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["fb",{"_index":174,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":1311,"title":{},"body":{"index.html":{}}}],["filtra",{"_index":565,"title":{},"body":{"components/OrdersComponent.html":{}}}],["filtrados",{"_index":574,"title":{},"body":{"components/OrdersComponent.html":{}}}],["filtrar",{"_index":559,"title":{},"body":{"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/UsersService.html":{}}}],["filtrarpedidos",{"_index":557,"title":{},"body":{"components/OrdersComponent.html":{}}}],["filtro",{"_index":568,"title":{},"body":{"components/OrdersComponent.html":{}}}],["firestore",{"_index":787,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["firestore,collection,adddoc,doc,query,deletedoc,getdocs,where,updatedoc",{"_index":1199,"title":{},"body":{"injectables/UsersService.html":{}}}],["firestore,collectiondata",{"_index":849,"title":{},"body":{"injectables/ProductService.html":{}}}],["first",{"_index":1335,"title":{},"body":{"index.html":{}}}],["footer",{"_index":370,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.css",{"_index":372,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":371,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":20,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["format.directive",{"_index":952,"title":{},"body":{"modules/SharedModule.html":{}}}],["format.directive.ts",{"_index":889,"title":{},"body":{"directives/RutFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:12",{"_index":900,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["format.directive.ts:19",{"_index":902,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["format.directive.ts:7",{"_index":897,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["formatrut",{"_index":890,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["formatrut(value",{"_index":901,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["formattedrut",{"_index":909,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["formbuilder",{"_index":168,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["formdata",{"_index":710,"title":{},"body":{"components/PerfilComponent.html":{}}}],["formdata.confirmpassword",{"_index":716,"title":{},"body":{"components/PerfilComponent.html":{}}}],["formdata.password",{"_index":714,"title":{},"body":{"components/PerfilComponent.html":{}}}],["formgroup",{"_index":204,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["formgroup,reactiveformsmodule",{"_index":991,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["formlogin",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{}}}],["formregistro",{"_index":618,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["formregistro.get('password')?.errors?.['missinglowercase",{"_index":747,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["formregistro.get('password')?.errors?.['missingnumber",{"_index":748,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["formregistro.get('password')?.errors?.['missingspecial",{"_index":749,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["formregistro.get('password')?.errors?.['missinguppercase",{"_index":746,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["formregistro.get(\\'password\\')?.errors?.[\\'missinglowercase",{"_index":754,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["formregistro.get(\\'password\\')?.errors?.[\\'missingnumber",{"_index":755,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["formregistro.get(\\'password\\')?.errors?.[\\'missingspecial",{"_index":756,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["formregistro.get(\\'password\\')?.errors?.[\\'missinguppercase",{"_index":753,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["formsmodule",{"_index":920,"title":{},"body":{"components/SalesComponent.html":{}}}],["formulario",{"_index":191,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["formulario(formulario",{"_index":1052,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formularios",{"_index":965,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["forzar",{"_index":488,"title":{},"body":{"components/HeaderComponent.html":{}}}],["fuerza",{"_index":1081,"title":{},"body":{"components/SignUpComponent.html":{}}}],["full",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["funcionalidad",{"_index":458,"title":{},"body":{"components/HeaderComponent.html":{}}}],["funcionalidades",{"_index":378,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["función",{"_index":1288,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1285,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1339,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1314,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1296,"title":{},"body":{"index.html":{}}}],["gestiona",{"_index":456,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["gestionar",{"_index":855,"title":{},"body":{"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["gestión",{"_index":664,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"injectables/UsersService.html":{}}}],["getcart",{"_index":780,"title":{},"body":{"injectables/ProductService.html":{}}}],["getdoc(productdoc).then(docsnapshot",{"_index":863,"title":{},"body":{"injectables/ProductService.html":{}}}],["getdocs(collection(this.firestore",{"_index":1220,"title":{},"body":{"injectables/UsersService.html":{}}}],["getdocs(q",{"_index":1206,"title":{},"body":{"injectables/UsersService.html":{}}}],["getfirestore",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getproductbyid",{"_index":781,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproductbyid(id",{"_index":823,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproducts",{"_index":782,"title":{},"body":{"injectables/ProductService.html":{}}}],["getting",{"_index":1293,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":1174,"title":{},"body":{"injectables/UsersService.html":{}}}],["go",{"_index":1342,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1347,"title":{},"body":{"modules.html":{}}}],["group",{"_index":645,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["group.get('confirmpassword",{"_index":1078,"title":{},"body":{"components/SignUpComponent.html":{}}}],["group.get('confirmpassword')?.value",{"_index":707,"title":{},"body":{"components/PerfilComponent.html":{}}}],["group.get('password",{"_index":1077,"title":{},"body":{"components/SignUpComponent.html":{}}}],["group.get('password')?.value",{"_index":706,"title":{},"body":{"components/PerfilComponent.html":{}}}],["grupo",{"_index":668,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["guarda",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/SignUpComponent.html":{}}}],["guardada",{"_index":1100,"title":{},"body":{"components/SignUpComponent.html":{}}}],["guardar",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ProductService.html":{}}}],["ha",{"_index":213,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["hacer",{"_index":1083,"title":{},"body":{"components/SignUpComponent.html":{}}}],["hay",{"_index":410,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["header",{"_index":386,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["header.component.css",{"_index":388,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":387,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":19,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["help",{"_index":1340,"title":{},"body":{"index.html":{}}}],["hola",{"_index":491,"title":{},"body":{"components/HeaderComponent.html":{}}}],["home",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{}}}],["home'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["homecomponent",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["hostlistener",{"_index":906,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["hostlistener('input",{"_index":905,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["hostlisteners",{"_index":892,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["html",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["http://localhost:4200",{"_index":1307,"title":{},"body":{"index.html":{}}}],["hubiera",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{}}}],["hubo",{"_index":275,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["id",{"_index":322,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1229,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":866,"title":{},"body":{"injectables/ProductService.html":{}}}],["imagen",{"_index":768,"title":{},"body":{"interfaces/Product.html":{}}}],["img",{"_index":1012,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["implemented",{"_index":1066,"title":{},"body":{"components/SignUpComponent.html":{}}}],["implements",{"_index":151,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["incluye",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["incluyendo",{"_index":667,"title":{},"body":{"components/PerfilComponent.html":{}}}],["incorrecta",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{}}}],["incrementa",{"_index":800,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["incrementar",{"_index":831,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["incrementquantity",{"_index":783,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["incrementquantity(productid",{"_index":829,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":450,"title":{},"body":{"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["indicando",{"_index":241,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["indicar",{"_index":212,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["información",{"_index":421,"title":{},"body":{"components/HeaderComponent.html":{},"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["ingresa",{"_index":1040,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["ingresada",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["ingresado",{"_index":1089,"title":{},"body":{"components/SignUpComponent.html":{}}}],["ingresando",{"_index":237,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/SignUpComponent.html":{}}}],["ingresar",{"_index":291,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["iniciado",{"_index":990,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["inicial",{"_index":630,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["inicializa",{"_index":637,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["inicializar",{"_index":184,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["iniciar",{"_index":521,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersComponent.html":{}}}],["inicio",{"_index":423,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["initializeapp",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":771,"title":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":772,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input",{"_index":893,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["instancia",{"_index":1159,"title":{},"body":{"components/UsersComponent.html":{}}}],["instrucciones",{"_index":240,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["interface",{"_index":757,"title":{"interfaces/Product.html":{},"interfaces/User.html":{}},"body":{"interfaces/Product.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":758,"title":{},"body":{"interfaces/Product.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaz",{"_index":332,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/Product.html":{},"interfaces/User.html":{}}}],["inténtelo",{"_index":278,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["inválido",{"_index":1292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isadmin",{"_index":391,"title":{},"body":{"components/HeaderComponent.html":{},"components/UsersComponent.html":{}}}],["isemailregistered",{"_index":1175,"title":{},"body":{"injectables/UsersService.html":{}}}],["isemailregistered(email",{"_index":1186,"title":{},"body":{"injectables/UsersService.html":{}}}],["isloggedin",{"_index":394,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isregistered",{"_index":265,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["isrutregistered",{"_index":1176,"title":{},"body":{"injectables/UsersService.html":{}}}],["isrutregistered(rut",{"_index":1188,"title":{},"body":{"injectables/UsersService.html":{}}}],["item",{"_index":477,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["item.cantidad",{"_index":610,"title":{},"body":{"components/OrdersComponent.html":{}}}],["item.precio",{"_index":612,"title":{},"body":{"components/OrdersComponent.html":{}}}],["item.product.descripcion",{"_index":1037,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["item.product.id",{"_index":873,"title":{},"body":{"injectables/ProductService.html":{}}}],["item.product.precio",{"_index":1002,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["item.product.thumbnailurl",{"_index":1013,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["item.product.title",{"_index":1014,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["item.producto",{"_index":609,"title":{},"body":{"components/OrdersComponent.html":{}}}],["item.quantity",{"_index":479,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["item.subtotal",{"_index":613,"title":{},"body":{"components/OrdersComponent.html":{}}}],["json.parse(cart",{"_index":881,"title":{},"body":{"injectables/ProductService.html":{}}}],["json.parse(localstorage.getitem('pedidos",{"_index":1027,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["json.parse(localstorage.getitem('sesionusuario",{"_index":675,"title":{},"body":{"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["json.parse(pedidosstorage",{"_index":592,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["json.parse(sesionusuario",{"_index":468,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["json.parse(usuariostorage",{"_index":584,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["json.stringify",{"_index":732,"title":{},"body":{"components/PerfilComponent.html":{}}}],["json.stringify(cart",{"_index":885,"title":{},"body":{"injectables/ProductService.html":{}}}],["json.stringify(pedidos",{"_index":1029,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["json.stringify(this.pedidos",{"_index":938,"title":{},"body":{"components/SalesComponent.html":{}}}],["json.stringify(userdata",{"_index":542,"title":{},"body":{"components/LoginComponent.html":{}}}],["junto",{"_index":822,"title":{},"body":{"injectables/ProductService.html":{}}}],["karma",{"_index":1328,"title":{},"body":{"index.html":{}}}],["la",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["las",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["leaks",{"_index":438,"title":{},"body":{"components/HeaderComponent.html":{}}}],["legend",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["letra",{"_index":695,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["librería",{"_index":330,"title":{},"body":{"components/DetailsComponent.html":{}}}],["limpia",{"_index":808,"title":{},"body":{"injectables/ProductService.html":{},"components/SignUpComponent.html":{}}}],["limpiar",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SignUpComponent.html":{}}}],["limpiarformulario",{"_index":620,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["lista",{"_index":576,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["listado",{"_index":597,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["literal",{"_index":820,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["llama",{"_index":188,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/SignUpComponent.html":{}}}],["lo",{"_index":247,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["loadcart",{"_index":962,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["loaduserdata",{"_index":621,"title":{},"body":{"components/PerfilComponent.html":{}}}],["loadusername",{"_index":395,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loadusers",{"_index":1111,"title":{},"body":{"components/UsersComponent.html":{}}}],["local",{"_index":415,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{}}}],["localmente",{"_index":572,"title":{},"body":{"components/OrdersComponent.html":{}}}],["localstorage",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["localstorage.getitem('cart",{"_index":880,"title":{},"body":{"injectables/ProductService.html":{}}}],["localstorage.getitem('pedidos",{"_index":590,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["localstorage.getitem('sesionusuario",{"_index":466,"title":{},"body":{"components/HeaderComponent.html":{},"components/OrdersComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["localstorage.getitem('usuario",{"_index":934,"title":{},"body":{"components/SalesComponent.html":{}}}],["localstorage.removeitem('cart",{"_index":882,"title":{},"body":{"injectables/ProductService.html":{}}}],["localstorage.removeitem('sesionusuario",{"_index":485,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["localstorage.setitem('cart",{"_index":884,"title":{},"body":{"injectables/ProductService.html":{}}}],["localstorage.setitem('pedidos",{"_index":937,"title":{},"body":{"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["localstorage.setitem('sesionusuario",{"_index":541,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{}}}],["login",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["login.component.css",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":86,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["logout",{"_index":396,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logueado",{"_index":1030,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["los",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["luego",{"_index":564,"title":{},"body":{"components/OrdersComponent.html":{}}}],["maneja",{"_index":201,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["manejar",{"_index":463,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["manejo",{"_index":1162,"title":{},"body":{"components/UsersComponent.html":{}}}],["map",{"_index":852,"title":{},"body":{"injectables/ProductService.html":{}}}],["map(product",{"_index":869,"title":{},"body":{"injectables/ProductService.html":{}}}],["marca",{"_index":762,"title":{},"body":{"interfaces/Product.html":{}}}],["matching",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mayúscula",{"_index":696,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["mediante",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{}}}],["memory",{"_index":437,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menos",{"_index":694,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["mensaje",{"_index":223,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["mensajeerror",{"_index":161,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["mensajeexito",{"_index":619,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["mensajes",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{}}}],["message",{"_index":333,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["messagingsenderid\":\"916680941903",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":162,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["miniatura",{"_index":769,"title":{},"body":{"interfaces/Product.html":{}}}],["minúscula",{"_index":698,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["miscellaneous",{"_index":1284,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misma",{"_index":649,"title":{},"body":{"components/PerfilComponent.html":{}}}],["modal",{"_index":1132,"title":{},"body":{"components/UsersComponent.html":{}}}],["modalelement",{"_index":1151,"title":{},"body":{"components/UsersComponent.html":{}}}],["modalinstance",{"_index":1153,"title":{},"body":{"components/UsersComponent.html":{}}}],["modalinstance.hide",{"_index":1155,"title":{},"body":{"components/UsersComponent.html":{}}}],["models/product.model",{"_index":337,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["models/users.model",{"_index":663,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":108,"title":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":110,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1341,"title":{},"body":{"index.html":{}}}],["mostrado",{"_index":659,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["mostrar",{"_index":283,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["muestra",{"_index":225,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["más",{"_index":280,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["método",{"_index":176,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["métodos",{"_index":848,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navega",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{}}}],["navegación",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["navegar",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigate",{"_index":1306,"title":{},"body":{"index.html":{}}}],["need",{"_index":1334,"title":{},"body":{"index.html":{}}}],["new",{"_index":356,"title":{},"body":{"components/DetailsComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":1191,"title":{},"body":{"injectables/UsersService.html":{}}}],["ng",{"_index":1303,"title":{},"body":{"index.html":{}}}],["ngcontrol",{"_index":896,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["ngmodule",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/SignUpComponent.html":{}}}],["ngondestroy",{"_index":397,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ngoninit",{"_index":163,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["nico",{"_index":767,"title":{},"body":{"interfaces/Product.html":{},"interfaces/User.html":{}}}],["ningún",{"_index":342,"title":{},"body":{"components/DetailsComponent.html":{}}}],["nombre",{"_index":413,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["nombrefiltro",{"_index":555,"title":{},"body":{"components/OrdersComponent.html":{}}}],["nombreusuario",{"_index":1099,"title":{},"body":{"components/SignUpComponent.html":{}}}],["nopedidos",{"_index":598,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["notificación",{"_index":314,"title":{},"body":{"components/DetailsComponent.html":{}}}],["nueva",{"_index":218,"title":{},"body":{"components/ChangePasswordComponent.html":{},"injectables/UsersService.html":{}}}],["nuevo",{"_index":279,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"injectables/UsersService.html":{}}}],["nuevoestado",{"_index":925,"title":{},"body":{"components/SalesComponent.html":{}}}],["nuevousuario",{"_index":1091,"title":{},"body":{"components/SignUpComponent.html":{}}}],["null",{"_index":451,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["nulo",{"_index":525,"title":{},"body":{"components/LoginComponent.html":{}}}],["number",{"_index":441,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["número",{"_index":461,"title":{},"body":{"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{}}}],["o",{"_index":340,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["object.entries(formdata).filter(([_",{"_index":720,"title":{},"body":{"components/PerfilComponent.html":{}}}],["object.entries(user).filter(([_",{"_index":1219,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.fromentries",{"_index":719,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UsersService.html":{}}}],["object.keys(errors).length",{"_index":705,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["objeto",{"_index":244,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["objetos",{"_index":579,"title":{},"body":{"components/OrdersComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{}}}],["observable",{"_index":434,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ProductService.html":{}}}],["obtener",{"_index":581,"title":{},"body":{"components/OrdersComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"injectables/UsersService.html":{}}}],["obtiene",{"_index":321,"title":{},"body":{"components/DetailsComponent.html":{},"components/OrdersComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"injectables/UsersService.html":{}}}],["oculta",{"_index":1156,"title":{},"body":{"components/UsersComponent.html":{}}}],["ocurra",{"_index":1124,"title":{},"body":{"components/UsersComponent.html":{}}}],["ocurre",{"_index":226,"title":{},"body":{"components/ChangePasswordComponent.html":{},"injectables/UsersService.html":{}}}],["olvidaste",{"_index":286,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["oninit",{"_index":152,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["oninput",{"_index":891,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["oninput(event",{"_index":903,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["onsubmit",{"_index":165,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["opciones",{"_index":1164,"title":{},"body":{"components/UsersComponent.html":{}}}],["opendeletemodal",{"_index":1112,"title":{},"body":{"components/UsersComponent.html":{}}}],["opendeletemodal(user",{"_index":1129,"title":{},"body":{"components/UsersComponent.html":{}}}],["operaciones",{"_index":1115,"title":{},"body":{"components/UsersComponent.html":{}}}],["operación",{"_index":795,"title":{},"body":{"injectables/ProductService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["optional",{"_index":173,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["orders",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OrdersComponent.html":{}}}],["orders'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["orders.component.css",{"_index":552,"title":{},"body":{"components/OrdersComponent.html":{}}}],["orders.component.html",{"_index":553,"title":{},"body":{"components/OrdersComponent.html":{}}}],["orderscomponent",{"_index":88,"title":{"components/OrdersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["out",{"_index":950,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1344,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1269,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":1346,"title":{},"body":{"index.html":{}}}],["pages/change",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/details/details.component",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/home/home.component",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/login/login.component",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/orders/orders.component",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/perfil/perfil.component",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/sales/sales.component",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/shopping",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/sign",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/users/users.component",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pago",{"_index":1043,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["para",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["param",{"_index":347,"title":{},"body":{"components/DetailsComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":172,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parcial",{"_index":837,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":718,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["password",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["password'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["password.component",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["password.component.css",{"_index":155,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.html",{"_index":156,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts",{"_index":150,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:27",{"_index":205,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:33",{"_index":220,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:39",{"_index":210,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:45",{"_index":217,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:51",{"_index":171,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:62",{"_index":175,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:68",{"_index":187,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.value",{"_index":1079,"title":{},"body":{"components/SignUpComponent.html":{}}}],["password/change",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["passwordmatchvalidator",{"_index":622,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["passwordmatchvalidator(group",{"_index":639,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["passwordmismatch",{"_index":708,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["passwordstrengthvalidator",{"_index":1048,"title":{},"body":{"components/SignUpComponent.html":{}}}],["passwordstrengthvalidator(control",{"_index":1058,"title":{},"body":{"components/SignUpComponent.html":{}}}],["passwordvalidator",{"_index":623,"title":{},"body":{"components/PerfilComponent.html":{}}}],["path",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pedido",{"_index":599,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["pedido.correo",{"_index":596,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["pedido.direccion",{"_index":602,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["pedido.estado",{"_index":607,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["pedido.nombre",{"_index":600,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["pedido.telefono",{"_index":604,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["pedido.total",{"_index":606,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["pedidos",{"_index":492,"title":{},"body":{"components/HeaderComponent.html":{},"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["pedidos.push(pedido",{"_index":1028,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["pedidosfiltrados",{"_index":556,"title":{},"body":{"components/OrdersComponent.html":{}}}],["pedidosstorage",{"_index":589,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["perfil",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/PerfilComponent.html":{}}}],["perfil'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["perfil.component.css",{"_index":617,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfil.component.html",{"_index":616,"title":{},"body":{"components/PerfilComponent.html":{}}}],["perfilcomponent",{"_index":90,"title":{"components/PerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["permisos",{"_index":405,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{}}}],["permite",{"_index":234,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/SignUpComponent.html":{}}}],["personales",{"_index":666,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["personalizada",{"_index":1289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["personalizado",{"_index":647,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["personalizados",{"_index":1067,"title":{},"body":{"components/SignUpComponent.html":{}}}],["pertenece",{"_index":765,"title":{},"body":{"interfaces/Product.html":{}}}],["pie",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["pipe",{"_index":868,"title":{},"body":{"injectables/ProductService.html":{}}}],["platform",{"_index":1331,"title":{},"body":{"index.html":{}}}],["por",{"_index":276,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["porque",{"_index":1163,"title":{},"body":{"components/UsersComponent.html":{}}}],["precio",{"_index":362,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/Product.html":{},"components/ShoppingCartComponent.html":{}}}],["prevenir",{"_index":436,"title":{},"body":{"components/HeaderComponent.html":{}}}],["previo",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{}}}],["principal",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["privado",{"_index":329,"title":{},"body":{"components/DetailsComponent.html":{}}}],["private",{"_index":253,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["problema",{"_index":228,"title":{},"body":{"components/ChangePasswordComponent.html":{},"injectables/UsersService.html":{}}}],["procede",{"_index":983,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["proceder",{"_index":1026,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["proceedtocheckout",{"_index":963,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["procesado",{"_index":1016,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["proceso",{"_index":230,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["product",{"_index":297,"title":{"interfaces/Product.html":{}},"body":{"components/DetailsComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["product.descripcion",{"_index":361,"title":{},"body":{"components/DetailsComponent.html":{}}}],["product.id",{"_index":874,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.precio",{"_index":363,"title":{},"body":{"components/DetailsComponent.html":{}}}],["product.title",{"_index":359,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdoc",{"_index":856,"title":{},"body":{"injectables/ProductService.html":{}}}],["productid",{"_index":343,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["producto",{"_index":308,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["productos",{"_index":435,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["products",{"_index":847,"title":{},"body":{"injectables/ProductService.html":{}}}],["products/${id",{"_index":860,"title":{},"body":{"injectables/ProductService.html":{}}}],["products/${product.id",{"_index":858,"title":{},"body":{"injectables/ProductService.html":{}}}],["productscollection",{"_index":774,"title":{},"body":{"injectables/ProductService.html":{}}}],["productservice",{"_index":302,"title":{"injectables/ProductService.html":{}},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["productservice,private",{"_index":464,"title":{},"body":{"components/HeaderComponent.html":{}}}],["project",{"_index":1295,"title":{},"body":{"index.html":{}}}],["projectid\":\"db",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promesa",{"_index":792,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":203,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["propiedad",{"_index":408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["proporciona",{"_index":374,"title":{},"body":{"components/FooterComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["proporcionado",{"_index":826,"title":{},"body":{"injectables/ProductService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["proporcione",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["providedin",{"_index":854,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["providefirebaseapp",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefirestore",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":944,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["puede",{"_index":744,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["página",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["q",{"_index":1202,"title":{},"body":{"injectables/UsersService.html":{}}}],["quantity",{"_index":877,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{}}}],["que",{"_index":180,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["query(this.userscollection",{"_index":1203,"title":{},"body":{"injectables/UsersService.html":{}}}],["querysnapshot",{"_index":1205,"title":{},"body":{"injectables/UsersService.html":{}}}],["querysnapshot.docs[0",{"_index":1211,"title":{},"body":{"injectables/UsersService.html":{}}}],["querysnapshot.empty",{"_index":1207,"title":{},"body":{"injectables/UsersService.html":{}}}],["querysnapshot.foreach(doc",{"_index":1221,"title":{},"body":{"injectables/UsersService.html":{}}}],["quiere",{"_index":978,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["raíz",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiveformsmodule",{"_index":153,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["reactivos",{"_index":966,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["real",{"_index":448,"title":{},"body":{"components/HeaderComponent.html":{}}}],["realiza",{"_index":424,"title":{},"body":{"components/HeaderComponent.html":{},"components/UsersComponent.html":{}}}],["realizado",{"_index":1034,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["redirección",{"_index":429,"title":{},"body":{"components/HeaderComponent.html":{}}}],["redirectto",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirige",{"_index":422,"title":{},"body":{"components/HeaderComponent.html":{}}}],["redirigiendo",{"_index":1035,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["redirigir",{"_index":657,"title":{},"body":{"components/PerfilComponent.html":{}}}],["reference",{"_index":1345,"title":{},"body":{"index.html":{}}}],["registrado",{"_index":200,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["registrar",{"_index":1102,"title":{},"body":{"components/SignUpComponent.html":{}}}],["registrarse",{"_index":1045,"title":{},"body":{"components/SignUpComponent.html":{}}}],["registrate",{"_index":490,"title":{},"body":{"components/HeaderComponent.html":{}}}],["registro",{"_index":628,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["relacionadas",{"_index":1116,"title":{},"body":{"components/UsersComponent.html":{}}}],["reload",{"_index":1310,"title":{},"body":{"index.html":{}}}],["representa",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/OrdersComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{}}}],["representan",{"_index":580,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["requerida",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["requerido",{"_index":289,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["required",{"_index":725,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UsersService.html":{}}}],["requisitos",{"_index":651,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["reset",{"_index":949,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["respuesta",{"_index":1121,"title":{},"body":{"components/UsersComponent.html":{}}}],["restablece",{"_index":1055,"title":{},"body":{"components/SignUpComponent.html":{}}}],["restableciendo",{"_index":629,"title":{},"body":{"components/PerfilComponent.html":{}}}],["resuelve",{"_index":793,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["resultados",{"_index":202,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["results",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":481,"title":{},"body":{"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":185,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":1104,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":304,"title":{},"body":{"components/DetailsComponent.html":{}}}],["router",{"_index":169,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["routermodule",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{}}}],["routermodule,routes",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1302,"title":{},"body":{"index.html":{}}}],["running",{"_index":1322,"title":{},"body":{"index.html":{}}}],["rut",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"directives/RutFormatDirective.html":{},"modules/SharedModule.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rut.slice",{"_index":916,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["rut.slice(0",{"_index":917,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["rutformatdirective",{"_index":103,"title":{"directives/RutFormatDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rutregistered",{"_index":1087,"title":{},"body":{"components/SignUpComponent.html":{}}}],["rxjs",{"_index":453,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":853,"title":{},"body":{"injectables/ProductService.html":{}}}],["s.a",{"_index":384,"title":{},"body":{"components/FooterComponent.html":{}}}],["sales",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SalesComponent.html":{}}}],["sales'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["sales.component.css",{"_index":922,"title":{},"body":{"components/SalesComponent.html":{}}}],["sales.component.html",{"_index":921,"title":{},"body":{"components/SalesComponent.html":{}}}],["salescomponent",{"_index":92,"title":{"components/SalesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["scaffolding",{"_index":1313,"title":{},"body":{"index.html":{}}}],["se",{"_index":181,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["sean",{"_index":730,"title":{},"body":{"components/PerfilComponent.html":{}}}],["segundos",{"_index":1062,"title":{},"body":{"components/SignUpComponent.html":{}}}],["seguridad",{"_index":686,"title":{},"body":{"components/PerfilComponent.html":{}}}],["seguro",{"_index":1167,"title":{},"body":{"components/UsersComponent.html":{}}}],["según",{"_index":577,"title":{},"body":{"components/OrdersComponent.html":{},"injectables/UsersService.html":{}}}],["seleccionado",{"_index":1118,"title":{},"body":{"components/UsersComponent.html":{}}}],["selecteduser",{"_index":1109,"title":{},"body":{"components/UsersComponent.html":{}}}],["selecteduser?.nombre",{"_index":1169,"title":{},"body":{"components/UsersComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["serve",{"_index":1304,"title":{},"body":{"index.html":{}}}],["server",{"_index":1301,"title":{},"body":{"index.html":{}}}],["service/product.service",{"_index":336,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["service/users.service",{"_index":233,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["servicio",{"_index":312,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["sesion",{"_index":1031,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["sesionusuario",{"_index":465,"title":{},"body":{"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["sesionusuario.direccionenvio",{"_index":1018,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["sesionusuario.email",{"_index":1019,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["sesionusuario.nombre",{"_index":1017,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["sesionusuario.password",{"_index":713,"title":{},"body":{"components/PerfilComponent.html":{}}}],["sesionusuario.telefono",{"_index":1020,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["sesión",{"_index":418,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/UsersService.html":{}}}],["setdoc(productdoc",{"_index":859,"title":{},"body":{"injectables/ProductService.html":{}}}],["settimeout",{"_index":268,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["sharedmodule",{"_index":941,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shopping",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["shoppingcartcomponent",{"_index":94,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["showtoast",{"_index":299,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["showtoast(message",{"_index":327,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["si",{"_index":196,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["sido",{"_index":214,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["sign",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["signupcomponent",{"_index":97,"title":{"components/SignUpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["simulado",{"_index":1127,"title":{},"body":{"components/UsersComponent.html":{}}}],["sin",{"_index":377,"title":{},"body":{"components/FooterComponent.html":{}}}],["sistema",{"_index":222,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["slice:0:50",{"_index":1038,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["solicitar",{"_index":236,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["solo",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{}}}],["son",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["src/.../app.config.ts",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../details.component.ts",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.component.ts",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rut.validator.ts",{"_index":1286,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../shopping",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.component.ts",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:23",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1232,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":369,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts",{"_index":385,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:104",{"_index":402,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:120",{"_index":416,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:29",{"_index":449,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:35",{"_index":442,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:41",{"_index":452,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:47",{"_index":401,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:57",{"_index":412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:70",{"_index":439,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:83",{"_index":430,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:94",{"_index":409,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/models/product.model.ts",{"_index":759,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/app/models/users.model.ts",{"_index":1103,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/pages/change",{"_index":149,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/details/details.component.ts",{"_index":293,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/details/details.component.ts:29",{"_index":303,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:41",{"_index":320,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:57",{"_index":306,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:68",{"_index":328,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/login/login.component.ts",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/login/login.component.ts:26",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:32",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:39",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:50",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:63",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/orders/orders.component.ts",{"_index":551,"title":{},"body":{"components/OrdersComponent.html":{},"coverage.html":{}}}],["src/app/pages/orders/orders.component.ts:23",{"_index":570,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:29",{"_index":573,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:35",{"_index":575,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:41",{"_index":566,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:47",{"_index":569,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:55",{"_index":563,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders.component.ts:80",{"_index":558,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/perfil/perfil.component.ts",{"_index":615,"title":{},"body":{"components/PerfilComponent.html":{},"coverage.html":{}}}],["src/app/pages/perfil/perfil.component.ts:112",{"_index":640,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/pages/perfil/perfil.component.ts:123",{"_index":653,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/pages/perfil/perfil.component.ts:166",{"_index":627,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/pages/perfil/perfil.component.ts:28",{"_index":658,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/pages/perfil/perfil.component.ts:35",{"_index":626,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/pages/perfil/perfil.component.ts:44",{"_index":636,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/pages/perfil/perfil.component.ts:64",{"_index":631,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/pages/perfil/perfil.component.ts:85",{"_index":646,"title":{},"body":{"components/PerfilComponent.html":{}}}],["src/app/pages/sales/sales.component.ts",{"_index":919,"title":{},"body":{"components/SalesComponent.html":{},"coverage.html":{}}}],["src/app/pages/sales/sales.component.ts:25",{"_index":929,"title":{},"body":{"components/SalesComponent.html":{}}}],["src/app/pages/sales/sales.component.ts:31",{"_index":931,"title":{},"body":{"components/SalesComponent.html":{}}}],["src/app/pages/sales/sales.component.ts:37",{"_index":930,"title":{},"body":{"components/SalesComponent.html":{}}}],["src/app/pages/sales/sales.component.ts:44",{"_index":928,"title":{},"body":{"components/SalesComponent.html":{}}}],["src/app/pages/sales/sales.component.ts:64",{"_index":926,"title":{},"body":{"components/SalesComponent.html":{}}}],["src/app/pages/shopping",{"_index":953,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/sign",{"_index":887,"title":{},"body":{"directives/RutFormatDirective.html":{},"modules/SharedModule.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/pages/users/users.component.ts",{"_index":1106,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/users/users.component.ts:102",{"_index":1133,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:18",{"_index":1135,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:19",{"_index":1134,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:21",{"_index":1114,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:35",{"_index":1125,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:45",{"_index":1122,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:58",{"_index":1130,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/pages/users/users.component.ts:70",{"_index":1117,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/service/product.service.ts",{"_index":773,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/app/service/product.service.ts:108",{"_index":796,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:124",{"_index":830,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:139",{"_index":811,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:156",{"_index":819,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:166",{"_index":807,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:176",{"_index":833,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:23",{"_index":788,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:31",{"_index":839,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:32",{"_index":845,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:40",{"_index":790,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:52",{"_index":835,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:63",{"_index":817,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:74",{"_index":804,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:84",{"_index":828,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/product.service.ts:96",{"_index":824,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/service/users.service.ts",{"_index":1171,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/service/users.service.ts:119",{"_index":1185,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/service/users.service.ts:141",{"_index":1184,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/service/users.service.ts:15",{"_index":1180,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/service/users.service.ts:24",{"_index":1182,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/service/users.service.ts:34",{"_index":1189,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/service/users.service.ts:46",{"_index":1187,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/service/users.service.ts:59",{"_index":1197,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/service/users.service.ts:76",{"_index":1192,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/service/users.service.ts:93",{"_index":1195,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/validators/rut.validator.ts",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["started",{"_index":1294,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1230,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":524,"title":{},"body":{"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["storagebucket\":\"db",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1319,"title":{},"body":{"index.html":{}}}],["string",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["styles",{"_index":148,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/UsersComponent.html":{}}}],["styleurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["styleurls",{"_index":154,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/UsersComponent.html":{}}}],["su",{"_index":238,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["submitform",{"_index":624,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["subscription",{"_index":445,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subtotal",{"_index":1015,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["sum",{"_index":478,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["sumando",{"_index":970,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["support",{"_index":1350,"title":{},"body":{"modules.html":{}}}],["sus",{"_index":665,"title":{},"body":{"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["suscribe",{"_index":440,"title":{},"body":{"components/HeaderComponent.html":{}}}],["suscripción",{"_index":433,"title":{},"body":{"components/HeaderComponent.html":{}}}],["svg",{"_index":1351,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["también",{"_index":460,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tarde",{"_index":281,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["telefono",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{}}}],["teléfono",{"_index":603,"title":{},"body":{"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["tener",{"_index":741,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["test",{"_index":1325,"title":{},"body":{"index.html":{}}}],["test(value",{"_index":1082,"title":{},"body":{"components/SignUpComponent.html":{}}}],["testing",{"_index":1337,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1324,"title":{},"body":{"index.html":{}}}],["texto",{"_index":250,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{}}}],["this.calculatetotal",{"_index":999,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.cart",{"_index":997,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.cart.asobservable",{"_index":844,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.cart.map(item",{"_index":1011,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.cart.next",{"_index":883,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.cart.next(cart",{"_index":886,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.cart.reduce((sum",{"_index":1001,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.cartquantity",{"_index":475,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.cartsubscription",{"_index":473,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.cartsubscription.unsubscribe",{"_index":480,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.cdr.detectchanges",{"_index":487,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.changepasswordform",{"_index":254,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.get('email')?.value",{"_index":263,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.markallastouched",{"_index":282,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.changepasswordform.valid",{"_index":262,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.checkadminpermission",{"_index":472,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.checkusersession",{"_index":996,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.clearcart",{"_index":1032,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.control.control?.setvalue(formattedrut",{"_index":912,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["this.correoenviado",{"_index":260,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.correoenviadocontrasena",{"_index":261,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.correofiltro",{"_index":585,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.correonoregistrado",{"_index":259,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.el.nativeelement.value",{"_index":911,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["this.el.nativeelement.value.replace(/[^0",{"_index":907,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["this.f.group",{"_index":1070,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.fb.group",{"_index":255,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.filtrarpedidos",{"_index":593,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.formatrut(value",{"_index":910,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["this.formlogin",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formlogin.get('email')?.value",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formlogin.get('password')?.value",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formregistro",{"_index":670,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["this.formregistro.get('direccionenvio')?.value",{"_index":1096,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formregistro.get('email')?.value",{"_index":1093,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formregistro.get('nombre')?.value",{"_index":1092,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formregistro.get('password')?.value",{"_index":1094,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formregistro.get('rut')?.value",{"_index":1086,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formregistro.get('telefono')?.value",{"_index":1095,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.formregistro.patchvalue",{"_index":676,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.formregistro.reset",{"_index":738,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["this.formregistro.valid",{"_index":709,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["this.formregistro.value",{"_index":711,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.getcart",{"_index":870,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.isadmin",{"_index":484,"title":{},"body":{"components/HeaderComponent.html":{},"components/UsersComponent.html":{}}}],["this.loadcart",{"_index":995,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.loaduserdata",{"_index":674,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.loadusername",{"_index":471,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.loadusers",{"_index":1139,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.mensajeerror",{"_index":274,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.mensajeexito",{"_index":733,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["this.nombrefiltro",{"_index":587,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":673,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["this.passwordstrengthvalidator",{"_index":1074,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.passwordvalidator",{"_index":671,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.pedidos",{"_index":591,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["this.pedidos.filter(pedido",{"_index":595,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.pedidosfiltrados",{"_index":594,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.permisos",{"_index":935,"title":{},"body":{"components/SalesComponent.html":{}}}],["this.product",{"_index":346,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.productservice.addtocart(product",{"_index":348,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.productservice.cart$.subscribe(cart",{"_index":474,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.productservice.clearcart",{"_index":1010,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.productservice.decrementquantity(productid",{"_index":1009,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.productservice.getcart",{"_index":998,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.productservice.getproductbyid(productid).subscribe(product",{"_index":345,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.productservice.incrementquantity(productid",{"_index":1008,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":344,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.router.navigate",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/home",{"_index":735,"title":{},"body":{"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.router.navigate(['/login']).then",{"_index":486,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.navigate(['login",{"_index":269,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.selecteduser",{"_index":1142,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.selecteduser.id",{"_index":1146,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.showtoast(`${product.title",{"_index":349,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.showtoast(`${this.selecteduser?.nombre",{"_index":1150,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.showtoast(`¡pedido",{"_index":1033,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.total",{"_index":1000,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updatecart(cart",{"_index":878,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.userinfoform",{"_index":993,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.userinfoform.patchvalue",{"_index":1004,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.userinfoform.valid",{"_index":1021,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.userinfoform.value.correo",{"_index":1024,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.userinfoform.value.direccion",{"_index":1023,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.userinfoform.value.nombre",{"_index":1022,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.userinfoform.value.telefono",{"_index":1025,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.userloggedin",{"_index":1003,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.username",{"_index":469,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.users",{"_index":1140,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.updatepassword(updateduserdata.correo",{"_index":731,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.userservice.updateuser(updateduserdata",{"_index":727,"title":{},"body":{"components/PerfilComponent.html":{}}}],["this.usersservice.adduser(nuevousuario",{"_index":1098,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.usersservice.deleteuser(this.selecteduser.id.tostring",{"_index":1147,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.getusers",{"_index":1141,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usersservice.isemailregistered(email",{"_index":267,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.usersservice.isrutregistered(rut",{"_index":1088,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.usersservice.validateuser(email",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usuario",{"_index":583,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["this.usuario.email",{"_index":586,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.usuario.nombre",{"_index":588,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.usuario.permisos",{"_index":936,"title":{},"body":{"components/SalesComponent.html":{}}}],["throw",{"_index":723,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["throws",{"_index":1216,"title":{},"body":{"injectables/UsersService.html":{}}}],["thumbnailurl",{"_index":763,"title":{},"body":{"interfaces/Product.html":{}}}],["tiempo",{"_index":447,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tiene",{"_index":404,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tipo",{"_index":339,"title":{},"body":{"components/DetailsComponent.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["title",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Product.html":{}}}],["toast",{"_index":317,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["toast.show",{"_index":358,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["toastbodyelement",{"_index":352,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["toastbodyelement.innertext",{"_index":355,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["toastelement",{"_index":350,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UsersComponent.html":{}}}],["todos",{"_index":571,"title":{},"body":{"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["total",{"_index":605,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["través",{"_index":1120,"title":{},"body":{"components/UsersComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["try",{"_index":264,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["tslib",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":287,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["type",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["título",{"_index":770,"title":{},"body":{"interfaces/Product.html":{}}}],["un",{"_index":227,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":425,"title":{},"body":{"components/HeaderComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["undefined",{"_index":334,"title":{},"body":{"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["unit",{"_index":1323,"title":{},"body":{"index.html":{}}}],["up",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SignUpComponent.html":{}}}],["up'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["up.component",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["up.component.css",{"_index":1047,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.html",{"_index":1046,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":1044,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:119",{"_index":1061,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:169",{"_index":1054,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:22",{"_index":1053,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:33",{"_index":1063,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:34",{"_index":1064,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:35",{"_index":1050,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:45",{"_index":1056,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:69",{"_index":1057,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:84",{"_index":1059,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/rut",{"_index":888,"title":{},"body":{"directives/RutFormatDirective.html":{},"coverage.html":{}}}],["up/sharedmodule.ts",{"_index":951,"title":{},"body":{"modules/SharedModule.html":{}}}],["up/sign",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["update",{"_index":726,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UsersService.html":{}}}],["updatecart",{"_index":784,"title":{},"body":{"injectables/ProductService.html":{}}}],["updatecart(cart",{"_index":832,"title":{},"body":{"injectables/ProductService.html":{}}}],["updatedoc(productdoc",{"_index":861,"title":{},"body":{"injectables/ProductService.html":{}}}],["updatedoc(userref",{"_index":1215,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateduserdata",{"_index":717,"title":{},"body":{"components/PerfilComponent.html":{}}}],["updateduserdata.correo",{"_index":722,"title":{},"body":{"components/PerfilComponent.html":{}}}],["updateduserdata.password",{"_index":729,"title":{},"body":{"components/PerfilComponent.html":{}}}],["updatepassword",{"_index":1177,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatepassword(email",{"_index":1190,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateproduct",{"_index":785,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproduct(id",{"_index":834,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateuser",{"_index":1178,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":1194,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":324,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/Product.html":{}}}],["usagenotes",{"_index":1068,"title":{},"body":{"components/SignUpComponent.html":{}}}],["use",{"_index":1315,"title":{},"body":{"index.html":{}}}],["user",{"_index":662,"title":{"interfaces/User.html":{}},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user).then",{"_index":1201,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.correo",{"_index":679,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UsersService.html":{}}}],["user.direccionenvio",{"_index":682,"title":{},"body":{"components/PerfilComponent.html":{},"components/UsersComponent.html":{}}}],["user.id",{"_index":1165,"title":{},"body":{"components/UsersComponent.html":{}}}],["user.nombre",{"_index":678,"title":{},"body":{"components/PerfilComponent.html":{},"components/UsersComponent.html":{}}}],["user.permisos",{"_index":681,"title":{},"body":{"components/PerfilComponent.html":{}}}],["user.rut",{"_index":677,"title":{},"body":{"components/PerfilComponent.html":{},"components/UsersComponent.html":{}}}],["user.telefono",{"_index":680,"title":{},"body":{"components/PerfilComponent.html":{},"components/UsersComponent.html":{}}}],["userdata",{"_index":467,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/UsersService.html":{}}}],["userdata.direccionenvio",{"_index":1005,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["userdata.email",{"_index":1006,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["userdata.nombre",{"_index":470,"title":{},"body":{"components/HeaderComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["userdata.permisos",{"_index":482,"title":{},"body":{"components/HeaderComponent.html":{}}}],["userdata.telefono",{"_index":1007,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["userdoc",{"_index":1210,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdoc.data",{"_index":1212,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdoc.id",{"_index":1214,"title":{},"body":{"injectables/UsersService.html":{}}}],["userinfoform",{"_index":958,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["userloggedin",{"_index":959,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["username",{"_index":392,"title":{},"body":{"components/HeaderComponent.html":{}}}],["userref",{"_index":1213,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["users.component.css",{"_index":1107,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.html",{"_index":1108,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.push(user",{"_index":1224,"title":{},"body":{"injectables/UsersService.html":{}}}],["users/${id",{"_index":1225,"title":{},"body":{"injectables/UsersService.html":{}}}],["userscollection",{"_index":1172,"title":{},"body":{"injectables/UsersService.html":{}}}],["userscomponent",{"_index":100,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["userservice",{"_index":625,"title":{},"body":{"components/PerfilComponent.html":{}}}],["usersservice",{"_index":170,"title":{"injectables/UsersService.html":{}},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usuario",{"_index":403,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["usuario.correo",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{}}}],["usuario.direccionenvio",{"_index":540,"title":{},"body":{"components/LoginComponent.html":{}}}],["usuario.nombre",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{}}}],["usuario.permisos",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{}}}],["usuario.rut",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{}}}],["usuario.telefono",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{}}}],["usuarios",{"_index":235,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["usuariostorage",{"_index":582,"title":{},"body":{"components/OrdersComponent.html":{},"components/SalesComponent.html":{}}}],["utiliza",{"_index":311,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["utilizado",{"_index":567,"title":{},"body":{"components/OrdersComponent.html":{}}}],["utilizando",{"_index":315,"title":{},"body":{"components/DetailsComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["v",{"_index":721,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/UsersService.html":{}}}],["va",{"_index":319,"title":{},"body":{"components/DetailsComponent.html":{}}}],["vaciar",{"_index":1039,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["vacía",{"_index":975,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["vacío",{"_index":1036,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["valida",{"_index":1198,"title":{},"body":{"injectables/UsersService.html":{}}}],["validaciones",{"_index":246,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["validación",{"_index":285,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/SignUpComponent.html":{}}}],["validador",{"_index":641,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["validadores",{"_index":638,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["validar",{"_index":1290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validarrut",{"_index":660,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validarrut(control",{"_index":1287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateuser",{"_index":1179,"title":{},"body":{"injectables/UsersService.html":{}}}],["validateuser(email",{"_index":1196,"title":{},"body":{"injectables/UsersService.html":{}}}],["validationerrors",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":1075,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators",{"_index":231,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.email",{"_index":258,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.maxlength(20",{"_index":1073,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators.minlength(8",{"_index":1072,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators.required",{"_index":257,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.required,validarrut",{"_index":1071,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators/rut.validator",{"_index":661,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["validez",{"_index":195,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["valor",{"_index":688,"title":{},"body":{"components/PerfilComponent.html":{},"miscellaneous/functions.html":{}}}],["value",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":914,"title":{},"body":{"directives/RutFormatDirective.html":{}}}],["var",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1355,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ventas",{"_index":489,"title":{},"body":{"components/HeaderComponent.html":{},"components/SalesComponent.html":{}}}],["verifica",{"_index":194,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"injectables/UsersService.html":{}}}],["verificando",{"_index":522,"title":{},"body":{"components/LoginComponent.html":{}}}],["verificar",{"_index":728,"title":{},"body":{"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["version",{"_index":1298,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1327,"title":{},"body":{"index.html":{}}}],["vida",{"_index":179,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["vistas",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["visualización",{"_index":457,"title":{},"body":{"components/HeaderComponent.html":{},"components/OrdersComponent.html":{}}}],["void",{"_index":186,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"directives/RutFormatDirective.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["volver",{"_index":367,"title":{},"body":{"components/DetailsComponent.html":{}}}],["válida",{"_index":652,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["válidas",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UsersService.html":{}}}],["válido",{"_index":292,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/functions.html":{}}}],["w_]/.test(value",{"_index":701,"title":{},"body":{"components/PerfilComponent.html":{}}}],["where('correo",{"_index":1208,"title":{},"body":{"injectables/UsersService.html":{}}}],["where('password",{"_index":1209,"title":{},"body":{"injectables/UsersService.html":{}}}],["where('rut",{"_index":1204,"title":{},"body":{"injectables/UsersService.html":{}}}],["x",{"_index":611,"title":{},"body":{"components/OrdersComponent.html":{}}}],["xito",{"_index":655,"title":{},"body":{"components/PerfilComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{}}}],["y",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"components/PerfilComponent.html":{},"injectables/ProductService.html":{},"components/SalesComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignUpComponent.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["ya",{"_index":798,"title":{},"body":{"injectables/ProductService.html":{},"components/SignUpComponent.html":{}}}],["z]/.test(value",{"_index":691,"title":{},"body":{"components/PerfilComponent.html":{},"components/SignUpComponent.html":{}}}],["zone.js",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":948,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            CommonModule\n                                HeaderComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dyf'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, CommonModule, HeaderComponent, FooterComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\n\n/**\n * Componente raíz de la aplicación Angular.\n * @description Este componente representa el contenedor principal de la aplicación.\n * Incluye los componentes de encabezado (`HeaderComponent`) y pie de página (`FooterComponent`),\n * así como el enrutador (`RouterOutlet`) para la navegación entre vistas.\n */\n\nexport class AppComponent {\n  title = 'dyf';\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule,Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { SignUpComponent } from './pages/sign-up/sign-up.component';\nimport { DetailsComponent } from './pages/details/details.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { PerfilComponent } from './pages/perfil/perfil.component';\nimport { ChangePasswordComponent } from './pages/change-password/change-password.component';\nimport { SalesComponent } from './pages/sales/sales.component';\nimport { OrdersComponent } from './pages/orders/orders.component';\nimport { ShoppingCartComponent } from './pages/shopping-cart/shopping-cart.component';\nimport { UsersComponent } from './pages/users/users.component';\n\n\nexport const routes: Routes = [\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent },\n    { path: 'sign-up', component: SignUpComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'details/:id', component: DetailsComponent},\n    { path: 'perfil', component: PerfilComponent},\n    { path: 'change-password', component: ChangePasswordComponent},\n    { path: 'shopping-cart', component: ShoppingCartComponent},\n    { path: 'sales', component: SalesComponent},\n    { path: 'orders', component: OrdersComponent},\n    { path: 'users', component: UsersComponent},\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordComponent.html":{"url":"components/ChangePasswordComponent.html","title":"component - ChangePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/change-password/change-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./change-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./change-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changePasswordForm\n                            \n                            \n                                correoEnviado\n                            \n                            \n                                correoEnviadoContrasena\n                            \n                            \n                                correoNoRegistrado\n                            \n                            \n                                mensajeError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/change-password/change-password.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password/change-password.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password/change-password.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Método que se llama cuando se envía el formulario de cambio de contraseña.\nVerifica la validez del formulario, verifica si el correo electrónico está registrado y maneja los resultados.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changePasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password/change-password.component.ts:27\n                        \n                    \n\n            \n                \n                    FormGroup que contiene los campos del formulario de cambio de contraseña.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correoEnviado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password/change-password.component.ts:39\n                        \n                    \n\n            \n                \n                    Bandera para indicar si el correo electrónico ha sido enviado correctamente para el cambio de contraseña.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correoEnviadoContrasena\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password/change-password.component.ts:45\n                        \n                    \n\n            \n                \n                    Bandera para indicar si la nueva contraseña ha sido enviada correctamente al correo electrónico.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correoNoRegistrado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password/change-password.component.ts:33\n                        \n                    \n\n            \n                \n                    Bandera para indicar si el correo electrónico no está registrado en el sistema.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mensajeError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password/change-password.component.ts:51\n                        \n                    \n\n            \n                \n                    Mensaje de error que se muestra cuando ocurre un problema durante el proceso de cambio de contraseña.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UsersService } from '../../service/users.service';\n\n@Component({\n  selector: 'app-change-password',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\n\n/**\n * Componente para el formulario de cambio de contraseña.\n * @description Este componente permite a los usuarios solicitar un cambio de contraseña ingresando su correo electrónico.\n * Si el correo está registrado en el sistema, se envía un correo electrónico con instrucciones para el cambio de contraseña.\n * Si el correo no está registrado, se muestra un mensaje de error indicando que el correo no está en la base de datos.\n */\nexport class ChangePasswordComponent implements OnInit {\n\n  /**\n   * FormGroup que contiene los campos del formulario de cambio de contraseña.\n   * @type {FormGroup} Objeto FormGroup que maneja los controles y validaciones del formulario.\n   */\n  changePasswordForm: FormGroup;\n\n  /**\n   * Bandera para indicar si el correo electrónico no está registrado en el sistema.\n   * @type {boolean} true si el correo electrónico no está registrado, de lo contrario false.\n   */\n  correoNoRegistrado: boolean = false;\n\n  /**\n   * Bandera para indicar si el correo electrónico ha sido enviado correctamente para el cambio de contraseña.\n   * @type {boolean} true si el correo electrónico ha sido enviado correctamente, de lo contrario false.\n   */\n  correoEnviado: boolean = false;\n\n  /**\n   * Bandera para indicar si la nueva contraseña ha sido enviada correctamente al correo electrónico.\n   * @type {boolean} true si la nueva contraseña ha sido enviada correctamente, de lo contrario false.\n   */\n  correoEnviadoContrasena: boolean = false;\n\n  /**\n   * Mensaje de error que se muestra cuando ocurre un problema durante el proceso de cambio de contraseña.\n   * @type {string} Cadena de texto que contiene el mensaje de error específico.\n   */\n  mensajeError: string = '';\n\n  constructor(private fb: FormBuilder, private router: Router, private usersService: UsersService) {\n    this.changePasswordForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  /**\n   * Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\n   */\n  ngOnInit(): void {}\n\n  /**\n   * Método que se llama cuando se envía el formulario de cambio de contraseña.\n   * Verifica la validez del formulario, verifica si el correo electrónico está registrado y maneja los resultados.\n   */\n  async onSubmit(): Promise {\n    this.correoNoRegistrado = false;\n    this.correoEnviado = false;\n    this.correoEnviadoContrasena = false;\n\n    if (this.changePasswordForm.valid) {\n      const email = this.changePasswordForm.get('email')?.value;\n\n      try {\n        const isRegistered = await this.usersService.isEmailRegistered(email);\n        if (isRegistered) {\n          this.correoEnviadoContrasena = true;\n          setTimeout(() => {\n            this.router.navigate(['login']);\n          }, 4000);\n        } else {\n          this.correoNoRegistrado = true;\n        }\n      } catch (error) {\n        console.error(\"Error al cambiar la contraseña: \", error);\n        this.mensajeError = 'Hubo un error al cambiar la contraseña. Por favor, inténtelo de nuevo más tarde.';\n      }\n    } else {\n      this.changePasswordForm.markAllAsTouched(); // Para mostrar los errores de validación\n    }\n  }\n}\n    \n\n    \n        \n  \n    Olvidaste tu Password\n    \n      \n        Correo Electrónico\n        \n        \n          \n            El correo electrónico es requerido\n          \n          \n            Debe ingresar un correo electrónico válido\n          \n        \n        \n          El correo electrónico no está registrado\n        \n        \n          La nueva contraseña ha sido enviada a su correo electrónico\n        \n      \n      \n        Solicitar\n      \n    \n  \n\n    \n\n    \n                \n                    ./change-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Olvidaste tu Password                  Correo Electrónico                                      El correo electrónico es requerido                                Debe ingresar un correo electrónico válido                                    El correo electrónico no está registrado                          La nueva contraseña ha sido enviada a su correo electrónico                            Solicitar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/details/details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                product\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/details/details.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Método que añade un producto al carrito de compras.\nUtiliza el servicio ProductService para añadir el producto al carrito.\nMuestra un mensaje de notificación utilizando Bootstrap Toast para indicar que el producto ha sido agregado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Producto que se va a añadir al carrito.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\nObtiene el ID del producto desde la URL utilizando ActivatedRoute y carga el producto correspondiente desde ProductService.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Método privado que muestra un Toast de Bootstrap con un mensaje específico.\nUtiliza la librería de Bootstrap para crear y mostrar un mensaje de notificación en la interfaz.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mensaje que se mostrará en el Toast.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:29\n                        \n                    \n\n            \n                \n                    Producto específico que se muestra en los detalles.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductService } from '../../service/product.service';\nimport { Product } from '../../models/product.model';\n\ndeclare var bootstrap: any; \n\n@Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.css'\n})\n\n/**\n * Componente que muestra los detalles de un producto específico.\n * @description Este componente obtiene el ID del producto desde la URL, carga el producto correspondiente utilizando el servicio ProductService,\n * y muestra los detalles del producto en la interfaz.\n */\n\nexport class DetailsComponent implements OnInit {\n\n  /**\n   * Producto específico que se muestra en los detalles.\n   * @type {Product | undefined} Objeto de tipo Product o undefined si no se ha cargado ningún producto.\n   */\n  product: Product | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private productService: ProductService\n  ) {}\n\n  /**\n   * Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\n   * Obtiene el ID del producto desde la URL utilizando ActivatedRoute y carga el producto correspondiente desde ProductService.\n   */\n  \n  ngOnInit(): void {\n    const productId = this.route.snapshot.paramMap.get('id');\n    if (productId) {\n      this.productService.getProductById(productId).subscribe(product => {\n        this.product = product;\n      });\n    }\n  }\n\n   /**\n   * Método que añade un producto al carrito de compras.\n   * Utiliza el servicio ProductService para añadir el producto al carrito.\n   * Muestra un mensaje de notificación utilizando Bootstrap Toast para indicar que el producto ha sido agregado.\n   * @param {Product} product Producto que se va a añadir al carrito.\n   */\n\n  addToCart(product: Product): void {\n    this.productService.addToCart(product);\n    this.showToast(`${product.title} ha sido agregado al carrito`);\n  }\n\n   /**\n   * Método privado que muestra un Toast de Bootstrap con un mensaje específico.\n   * Utiliza la librería de Bootstrap para crear y mostrar un mensaje de notificación en la interfaz.\n   * @param {string} message Mensaje que se mostrará en el Toast.\n   */\n\n  private showToast(message: string): void {\n    const toastElement = document.getElementById('liveToast');\n    const toastBodyElement = document.getElementById('toast-body');\n\n    if (toastBodyElement) {\n      toastBodyElement.innerText = message;\n    }\n\n    if (toastElement) {\n      const toast = new bootstrap.Toast(toastElement);\n      toast.show();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          Producto agregado al carrito.\n        \n        \n      \n    \n  \n\n\n\n\n    \n      \n        \n          \n          \n            {{ product.title }}\n            Descripción: {{ product.descripcion }}\n            Precio:   Precio {{ product.precio | currency:'':'symbol':'1.0-0' }}\n            \n                Agregar al carrito\n                Volver\n              \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Producto agregado al carrito.                                                                              {{ product.title }}            Descripción: {{ product.descripcion }}            Precio:   Precio {{ product.precio | currency:\\'\\':\\'symbol\\':\\'1.0-0\\' }}                            Agregar al carrito                Volver                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\n\n/**\n * Componente de pie de página para la aplicación.\n * @description Este componente representa el pie de página estático de la aplicación Angular.\n * Proporciona la estructura básica del pie de página sin funcionalidades dinámicas específicas.\n */\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n\n    \n      \n        \n            \n        \n        © 2024 Comercializadora y Distribuidora DyF S.A.\n      \n  \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              © 2024 Comercializadora y Distribuidora DyF S.A.                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartQuantity\n                            \n                            \n                                    Private\n                                cartSubscription\n                            \n                            \n                                isAdmin\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAdminPermission\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                loadUserName\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAdminPermission\n                        \n                    \n                \n            \n            \n                \ncheckAdminPermission()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario tiene permisos de administrador.\nActualiza la propiedad isAdmin a true si el usuario tiene permisos de administrador.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Verifica si hay un usuario autenticado.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si hay un usuario autenticado, de lo contrario false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserName\n                        \n                    \n                \n            \n            \n                \nloadUserName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Carga el nombre del usuario desde el almacenamiento local.\nActualiza la propiedad userName con el nombre del usuario si está autenticado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario actual.\nElimina la información de sesión del almacenamiento local y redirige a la página de inicio de sesión.\nRealiza una detección de cambios después de la redirección.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se ejecuta al destruir el componente.\nCancela la suscripción al observable del carrito de productos para prevenir memory leaks.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\nCarga el nombre de usuario, verifica los permisos de administrador y suscribe cambios en el carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:35\n                        \n                    \n\n            \n                \n                    Cantidad de productos actualmente en el carrito.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:47\n                        \n                    \n\n            \n                \n                    Suscripción al observable del carrito de productos para actualizar la cantidad en tiempo real.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:29\n                        \n                    \n\n            \n                \n                    Bandera que indica si el usuario tiene permisos de administrador.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:41\n                        \n                    \n\n            \n                \n                    Nombre del usuario actualmente autenticado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ProductService } from '../../service/product.service';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule,RouterModule ],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.css'\n})\n\n  /**\n * Componente de cabecera para la navegación y funcionalidades del usuario.\n * @description Este componente gestiona la visualización del nombre de usuario, la cantidad de productos en el carrito,\n * y la funcionalidad de cerrar sesión. También verifica los permisos de administrador y suscribe cambios en el carrito.\n */\n\nexport class HeaderComponent {\n  \n   /**\n   * Bandera que indica si el usuario tiene permisos de administrador.\n   * @type {boolean} true si el usuario es administrador, de lo contrario false.\n   */\n\n  isAdmin: boolean = false;\n\n   /**\n   * Cantidad de productos actualmente en el carrito.\n   * @type {number} Número entero que representa la cantidad de productos en el carrito.\n   */\n  cartQuantity: number = 0;\n  \n    /**\n   * Nombre del usuario actualmente autenticado.\n   * @type {string | null} Cadena de texto con el nombre del usuario o null si no hay usuario autenticado.\n   */\n  userName: string | null = null;\n\n   /**\n   * Suscripción al observable del carrito de productos para actualizar la cantidad en tiempo real.\n   * @type {Subscription | undefined} Objeto Subscription para manejar la suscripción al carrito de productos.\n   */\n  private cartSubscription: Subscription | undefined;\n\n  constructor(private productService: ProductService,private router: Router, private cdr: ChangeDetectorRef) {}\n\n  \n   /**\n   * Carga el nombre del usuario desde el almacenamiento local.\n   * Actualiza la propiedad `userName` con el nombre del usuario si está autenticado.\n   */\n\n   loadUserName(): void {\n    const sesionUsuario = localStorage.getItem('sesionUsuario');\n    if (sesionUsuario) {\n      const userData = JSON.parse(sesionUsuario);\n      this.userName = userData.nombre;\n    }\n  }\n\n    /**\n   * Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\n   * Carga el nombre de usuario, verifica los permisos de administrador y suscribe cambios en el carrito.\n   */\n\n  ngOnInit(): void {\n    this.loadUserName();\n    this.checkAdminPermission();\n    this.cartSubscription = this.productService.cart$.subscribe(cart => {\n      this.cartQuantity = cart.reduce((sum, item) => sum + item.quantity, 0);\n    });\n  }\n\n    /**\n   * Método del ciclo de vida de Angular que se ejecuta al destruir el componente.\n   * Cancela la suscripción al observable del carrito de productos para prevenir memory leaks.\n   */\n\n  ngOnDestroy(): void {\n    if (this.cartSubscription) {\n      this.cartSubscription.unsubscribe();\n    }\n  }\n\n   /**\n   * Verifica si hay un usuario autenticado.\n   * @return {boolean} true si hay un usuario autenticado, de lo contrario false.\n   */\n\n  isLoggedIn(): boolean {\n    return localStorage.getItem('sesionUsuario') !== null;\n  }\n\n\n  /**\n   * Verifica si el usuario tiene permisos de administrador.\n   * Actualiza la propiedad `isAdmin` a true si el usuario tiene permisos de administrador.\n   */\n\n  checkAdminPermission(): void {\n    const sesionUsuario = localStorage.getItem('sesionUsuario');\n    if (sesionUsuario) {\n      const userData = JSON.parse(sesionUsuario);\n      if (userData.permisos === 'admin') {\n        this.isAdmin = true;\n      }\n    }\n  }\n\n   /**\n   * Cierra la sesión del usuario actual.\n   * Elimina la información de sesión del almacenamiento local y redirige a la página de inicio de sesión.\n   * Realiza una detección de cambios después de la redirección.\n   */\n\n  logout(): void {\n    localStorage.removeItem('sesionUsuario');\n    this.router.navigate(['/login']).then(() => {\n      this.cdr.detectChanges(); // Forzar detección de cambios\n    });\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n      \n      \n        \n          \n            Home\n          \n          \n            Usuarios\n          \n          \n            Ventas\n          \n          \n            Registrate\n          \n          \n            Login\n          \n          \n            \n              \n              {{ cartQuantity }}\n            \n          \n          \n            \n              Hola, {{ userName }}\n            \n            \n              Perfil\n              Pedidos\n              Logout\n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                  Home                                Usuarios                                Ventas                                Registrate                                Login                                                            {{ cartQuantity }}                                                          Hola, {{ userName }}                                      Perfil              Pedidos              Logout                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correoNoRegistrado\n                            \n                            \n                                formLogin\n                            \n                            \n                                mensajeError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\nCrea el FormGroup para el formulario de inicio de sesión con validaciones de correo electrónico y contraseña.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Método que maneja el envío del formulario de inicio de sesión.\nVerifica si el correo electrónico está registrado y si la contraseña es correcta.\nGuarda la sesión del usuario en localStorage y navega a la página principal si las credenciales son válidas.\nMuestra mensajes de error si las credenciales no son válidas.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        correoNoRegistrado\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:39\n                        \n                    \n\n            \n                \n                    Variable para manejar el estado de correo no registrado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:26\n                        \n                    \n\n            \n                \n                    FormGroup que contiene los campos de correo electrónico y contraseña del formulario de inicio de sesión.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mensajeError\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:32\n                        \n                    \n\n            \n                \n                    Mensaje de error que se muestra si la contraseña ingresada es incorrecta.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { UsersService } from '../../service/users.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n/**\n * Componente para la autenticación de usuarios mediante correo electrónico y contraseña.\n * @description Este componente permite a los usuarios iniciar sesión verificando las credenciales con los datos almacenados en el local storage.\n */\n\nexport class LoginComponent implements OnInit {\n\n  /**\n   * FormGroup que contiene los campos de correo electrónico y contraseña del formulario de inicio de sesión.\n   * @type {FormGroup} FormGroup del formulario de inicio de sesión.\n   */\n  formLogin!: FormGroup;\n\n  /**\n   * Mensaje de error que se muestra si la contraseña ingresada es incorrecta.\n   * @type {string | null} Mensaje de error o nulo si no hay error.\n   */\n  mensajeError: string | null = null;\n\n\n  /**\n   * Variable para manejar el estado de correo no registrado.\n   * @type {boolean} True si el correo electrónico no está registrado, false si está registrado.\n   */\n  correoNoRegistrado = false;\n\n\n  constructor(private fb: FormBuilder, private router: Router, private usersService: UsersService) {}\n\n\n  /**\n   * Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\n   * Crea el FormGroup para el formulario de inicio de sesión con validaciones de correo electrónico y contraseña.\n   */\n\n  ngOnInit(): void {\n    this.formLogin = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n   /**\n   * Método que maneja el envío del formulario de inicio de sesión.\n   * Verifica si el correo electrónico está registrado y si la contraseña es correcta.\n   * Guarda la sesión del usuario en localStorage y navega a la página principal si las credenciales son válidas.\n   * Muestra mensajes de error si las credenciales no son válidas.\n   */\n   async onSubmit(): Promise {\n    const email = this.formLogin.get('email')?.value;\n    const password = this.formLogin.get('password')?.value;\n\n    try {\n      const usuario = await this.usersService.validateUser(email, password);\n      if (usuario) {\n        // Guardar solo el correo electrónico, permisos y nombre en localStorage\n        const userData = {\n          rut: usuario.rut,\n          email: usuario.correo,\n          permisos: usuario.permisos,\n          nombre: usuario.nombre,\n          correo: usuario.correo,\n          telefono: usuario.telefono,\n          direccionEnvio: usuario.direccionEnvio\n        };\n        localStorage.setItem('sesionUsuario', JSON.stringify(userData));\n\n        // Navegar a la página principal\n        this.router.navigate(['/']);\n        \n        // Limpiar mensaje de error si hubiera alguno previo\n        this.mensajeError = null;\n        this.correoNoRegistrado = false;\n      } else {\n        this.mensajeError = 'La contraseña ingresada es incorrecta';\n        this.correoNoRegistrado = true;\n      }\n    } catch (error) {\n      console.error(\"Error al iniciar sesión: \", error);\n      this.mensajeError = 'Hubo un error al iniciar sesión. Por favor, inténtelo de nuevo más tarde.';\n    }\n  }\n  \n}\n    \n\n    \n        \n  \n    Iniciar Sesión\n    \n      \n        Correo Electrónico\n        \n        \n          El correo electrónico es requerido\n        \n        \n          Proporcione un correo electrónico válido\n        \n        \n          El correo electrónico no está registrado\n        \n      \n      \n        Contraseña\n        \n        \n          La contraseña es requerida\n        \n        \n          {{ mensajeError }}\n        \n      \n      \n        ¿Olvidaste tu contraseña?\n      \n      \n        Iniciar Sesión\n      \n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Iniciar Sesión                  Correo Electrónico                          El correo electrónico es requerido                          Proporcione un correo electrónico válido                          El correo electrónico no está registrado                            Contraseña                          La contraseña es requerida                          {{ mensajeError }}                            ¿Olvidaste tu contraseña?                    Iniciar Sesión            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrdersComponent.html":{"url":"components/OrdersComponent.html","title":"component - OrdersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrdersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/orders/orders.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-orders\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./orders.component.css\n            \n\n\n\n            \n                templateUrl\n                ./orders.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correoFiltro\n                            \n                            \n                                nombreFiltro\n                            \n                            \n                                pedidos\n                            \n                            \n                                pedidosFiltrados\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filtrarPedidos\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filtrarPedidos\n                        \n                    \n                \n            \n            \n                \nfiltrarPedidos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/orders/orders.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Método para filtrar los pedidos basado en el correo electrónico del usuario.\nActualiza el arreglo pedidosFiltrados con los pedidos que coinciden con el correo del usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/orders/orders.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\nObtiene el usuario actual y los pedidos del local storage, y luego filtra los pedidos por el correo del usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        correoFiltro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:41\n                        \n                    \n\n            \n                \n                    Correo electrónico utilizado como filtro para los pedidos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreFiltro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:47\n                        \n                    \n\n            \n                \n                    Nombre utilizado como filtro para los pedidos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pedidos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:23\n                        \n                    \n\n            \n                \n                    Arreglo que contiene todos los pedidos almacenados localmente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pedidosFiltrados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:29\n                        \n                    \n\n            \n                \n                    Arreglo que contiene los pedidos filtrados por el correo electrónico del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/orders/orders.component.ts:35\n                        \n                    \n\n            \n                \n                    Objeto que representa al usuario actual.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-orders',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\n\n/**\n * Componente para la visualización de pedidos filtrados por usuario.\n * @description Este componente muestra una lista de pedidos filtrados según el correo electrónico del usuario almacenado en el local storage.\n */\n\nexport class OrdersComponent implements OnInit {\n\n   /**\n   * Arreglo que contiene todos los pedidos almacenados localmente.\n   * @type {any[]} Arreglo de objetos que representan los pedidos.\n   */\n  pedidos: any[] = [];\n\n    /**\n   * Arreglo que contiene los pedidos filtrados por el correo electrónico del usuario.\n   * @type {any[]} Arreglo de objetos que representan los pedidos filtrados.\n   */\n  pedidosFiltrados: any[] = [];\n\n  /**\n   * Objeto que representa al usuario actual.\n   * @type {any} Objeto que contiene la información del usuario.\n   */\n  usuario: any = null;\n\n   /**\n   * Correo electrónico utilizado como filtro para los pedidos.\n   * @type {string} Correo electrónico del usuario utilizado para filtrar pedidos.\n   */\n  correoFiltro: string = '';\n\n  /**\n   * Nombre utilizado como filtro para los pedidos.\n   * @type {string} Nombre del usuario utilizado para filtrar pedidos.\n   */\n  nombreFiltro: string = '';\n\n\n  /**\n   * Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\n   * Obtiene el usuario actual y los pedidos del local storage, y luego filtra los pedidos por el correo del usuario.\n   */\n\n  ngOnInit() {\n    // Obtener el usuario del local storage\n    const usuarioStorage = localStorage.getItem('sesionUsuario');\n    if (usuarioStorage) {\n      this.usuario = JSON.parse(usuarioStorage);\n\n      this.correoFiltro = this.usuario.email;\n      this.nombreFiltro = this.usuario.nombre;\n    }\n\n    // Obtener los pedidos del local storage\n    const pedidosStorage = localStorage.getItem('pedidos');\n    if (pedidosStorage) {\n      this.pedidos = JSON.parse(pedidosStorage);\n    }\n\n    // Filtrar los pedidos por el correo del usuario\n    this.filtrarPedidos();\n  }\n\n   /**\n   * Método para filtrar los pedidos basado en el correo electrónico del usuario.\n   * Actualiza el arreglo `pedidosFiltrados` con los pedidos que coinciden con el correo del usuario.\n   */\n\n  filtrarPedidos() {\n    if (this.correoFiltro) {\n      this.pedidosFiltrados = this.pedidos.filter(pedido => pedido.correo === this.correoFiltro);\n    } else {\n      this.pedidosFiltrados = [];\n    }\n  }\n}\n    \n\n    \n        \n    \n      \n        Listado de Pedidos\n         0; else noPedidos\">\n          \n            \n              Pedido de {{ pedido.nombre }}\n            \n            \n              Información del Pedido\n              Dirección: {{ pedido.direccion }}\n              Correo: {{ pedido.correo }}\n              Teléfono: {{ pedido.telefono }}\n              Total: {{ pedido.total | currency:'':'symbol':'1.0-0'  }}\n              Estado: {{ pedido.estado }}\n              Detalle\n              \n                \n                     {{ item.producto }} - {{ item.cantidad }} x {{ item.precio | currency:'':'symbol':'1.0-0'  }} = {{ item.subtotal | currency:'':'symbol':'1.0-0'  }}\n                \n              \n            \n          \n        \n        \n          No se encontraron pedidos para {{ nombreFiltro }}.\n        \n      \n    \n  \n    \n\n    \n                \n                    ./orders.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Listado de Pedidos         0; else noPedidos\">                                    Pedido de {{ pedido.nombre }}                                      Información del Pedido              Dirección: {{ pedido.direccion }}              Correo: {{ pedido.correo }}              Teléfono: {{ pedido.telefono }}              Total: {{ pedido.total | currency:\\'\\':\\'symbol\\':\\'1.0-0\\'  }}              Estado: {{ pedido.estado }}              Detalle                                                   {{ item.producto }} - {{ item.cantidad }} x {{ item.precio | currency:\\'\\':\\'symbol\\':\\'1.0-0\\'  }} = {{ item.subtotal | currency:\\'\\':\\'symbol\\':\\'1.0-0\\'  }}                                                                              No se encontraron pedidos para {{ nombreFiltro }}.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrdersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerfilComponent.html":{"url":"components/PerfilComponent.html","title":"component - PerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/perfil/perfil.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./perfil.component.html\n            \n\n\n\n            \n                styleUrl\n                ./perfil.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formRegistro\n                            \n                            \n                                mensajeExito\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                limpiarFormulario\n                            \n                            \n                                loadUserData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                passwordValidator\n                            \n                            \n                                    Async\n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/perfil/perfil.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        limpiarFormulario\n                        \n                    \n                \n            \n            \n                \nlimpiarFormulario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/perfil/perfil.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Método para limpiar el formulario de registro, restableciendo todos los campos a su estado inicial.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserData\n                        \n                    \n                \n            \n            \n                \nloadUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/perfil/perfil.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Método para cargar los datos del usuario actual en el formulario desde el almacenamiento local.\nSi los datos del usuario están disponibles, se establecen en el formulario de registro.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/perfil/perfil.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\nInicializa el formulario de registro con validadores y carga los datos del usuario si están disponibles en el almacenamiento local.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(group: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/perfil/perfil.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Validador de coincidencia de contraseñas que verifica si la contraseña y su confirmación coinciden.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    FormGroup que contiene los campos de contraseña y confirmación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto de errores si las contraseñas no coinciden, o null si coinciden.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/perfil/perfil.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para la contraseña que verifica la complejidad de la misma.\n\n\n                        \n                            Returns :     Validators | null\n\n                        \n                            \n                                Objeto de errores si la contraseña no cumple con los requisitos de complejidad, o null si es válida.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/perfil/perfil.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Método para enviar el formulario de registro.\nSi el formulario es válido, actualiza los datos del usuario en el almacenamiento local y muestra un mensaje de éxito antes de redirigir al usuario.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formRegistro\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/perfil/perfil.component.ts:28\n                        \n                    \n\n            \n                \n                    FormGroup que contiene los controles del formulario de registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mensajeExito\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/perfil/perfil.component.ts:35\n                        \n                    \n\n            \n                \n                    Mensaje de éxito mostrado al actualizar los datos del perfil.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgModule, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { validarRut } from '../../validators/rut.validator';\nimport { UsersService } from '../../service/users.service';\nimport { User } from '../../models/users.model';\n\n@Component({\n  selector: 'app-perfil',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './perfil.component.html',\n  styleUrl: './perfil.component.css'\n})\n\n/**\n * Componente para la gestión del perfil de usuario.\n * @description Este componente permite al usuario actualizar sus datos personales, incluyendo el nombre, email, contraseña, teléfono, permisos y dirección de envío.\n */\n\nexport class PerfilComponent implements OnInit {\n\n   /**\n   * FormGroup que contiene los controles del formulario de registro.\n   * @type {FormGroup} Grupo de controles del formulario.\n   */\n  formRegistro!: FormGroup;\n  \n  /**\n   * Mensaje de éxito mostrado al actualizar los datos del perfil.\n   * @type {string} Mensaje que indica que los datos se actualizaron correctamente.\n   */\n\n  mensajeExito: string = '';\n\n  constructor(private fb: FormBuilder, private router: Router, private userService : UsersService) {}\n\n  /**\n   * Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\n   * Inicializa el formulario de registro con validadores y carga los datos del usuario si están disponibles en el almacenamiento local.\n   */\n\n  ngOnInit(): void {\n    this.formRegistro = this.fb.group({\n      rut: ['', [Validators.required, validarRut]],\n      nombre: ['', Validators.required],\n      correo: ['', [Validators.required, Validators.email]],\n      password: ['', this.passwordValidator()],\n      confirmPassword: [''],\n      telefono: ['', Validators.required],\n      permisos: [''],\n      direccionEnvio: ['', Validators.required],\n    }, { validators: this.passwordMatchValidator });\n\n    this.loadUserData();\n  }\n\n  /**\n   * Método para cargar los datos del usuario actual en el formulario desde el almacenamiento local.\n   * Si los datos del usuario están disponibles, se establecen en el formulario de registro.\n   */\n\n  loadUserData(): void {\n    const user = JSON.parse(localStorage.getItem('sesionUsuario') || '{}');\n    if (user) {\n      this.formRegistro.patchValue({\n        rut: user.rut,\n        nombre: user.nombre,\n        correo: user.correo,\n        telefono: user.telefono,\n        permisos: user.permisos,\n        direccionEnvio: user.direccionEnvio\n      });\n      // El campo de la contraseña y confirmación se dejan en blanco por seguridad\n    }\n  }\n\n   /**\n   * Validador personalizado para la contraseña que verifica la complejidad de la misma.\n   * @param control Control de formulario que contiene el valor de la contraseña.\n   * @returns {ValidationErrors | null} Objeto de errores si la contraseña no cumple con los requisitos de complejidad, o null si es válida.\n   */\n\n  passwordValidator(): Validators | null {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const value = control.value;\n      const errors: any = {};\n\n      if (value && !/[A-Z]/.test(value)) {\n        errors.missingUppercase = 'Debe contener al menos una letra mayúscula';\n      }\n      if (value && !/[a-z]/.test(value)) {\n        errors.missingLowercase = 'Debe contener al menos una letra minúscula';\n      }\n      if (value && !/[0-9]/.test(value)) {\n        errors.missingNumber = 'Debe contener al menos un número';\n      }\n      if (value && !/[\\W_]/.test(value)) {\n        errors.missingSpecial = 'Debe contener al menos un carácter especial';\n      }\n      return Object.keys(errors).length ? errors : null;\n    };\n  }\n\n   /**\n   * Validador de coincidencia de contraseñas que verifica si la contraseña y su confirmación coinciden.\n   * @param group FormGroup que contiene los campos de contraseña y confirmación.\n   * @returns {ValidationErrors | null} Objeto de errores si las contraseñas no coinciden, o null si coinciden.\n   */\n\n  passwordMatchValidator(group: FormGroup): ValidationErrors | null {\n    const password = group.get('password')?.value;\n    const confirmPassword = group.get('confirmPassword')?.value;\n    return password === confirmPassword ? null : { passwordMismatch: true };\n  }\n\n  /**\n   * Método para enviar el formulario de registro.\n   * Si el formulario es válido, actualiza los datos del usuario en el almacenamiento local y muestra un mensaje de éxito antes de redirigir al usuario.\n   */\n\n  async submitForm(): Promise {\n    if (this.formRegistro.valid) {\n      const formData = this.formRegistro.value;\n      const sesionUsuario: User = JSON.parse(localStorage.getItem('sesionUsuario') || '{}');\n      let currentPassword = sesionUsuario.password;\n\n      if (!formData.password) {\n        formData.password = currentPassword;\n      }\n      delete formData.confirmPassword;\n\n      try {\n        // Filtrar los campos undefined\n        const updatedUserData: Partial = Object.fromEntries(\n          Object.entries(formData).filter(([_, v]) => v !== undefined)\n        ) as Partial;\n\n        if (!updatedUserData.correo) {\n          throw new Error('Email is required to update user');\n        }\n\n        await this.userService.updateUser(updatedUserData as User);\n\n           // Verificar que updatedUserData.correo y updatedUserData.password no sean undefined\n      if (updatedUserData.password !== currentPassword && updatedUserData.correo && updatedUserData.password) {\n        await this.userService.updatePassword(updatedUserData.correo, updatedUserData.password);\n      }\n\n        localStorage.setItem('sesionUsuario', JSON.stringify({ ...sesionUsuario, ...updatedUserData }));\n        this.mensajeExito = 'Datos actualizados con éxito.';\n        setTimeout(() => {\n          this.router.navigate(['/home']);\n        }, 4000);\n      } catch (error) {\n        console.error('Error actualizando usuario:', error);\n      }\n    }\n  }\n\n  /**\n   * Método para limpiar el formulario de registro, restableciendo todos los campos a su estado inicial.\n   */\n\n  limpiarFormulario(): void {\n    this.formRegistro.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    Editar Perfil\n    \n      \n        Rut\n        \n        \n          El rut es requerido\n        \n        \n          El rut no es válido\n        \n      \n      \n        Nombre Completo\n        \n        \n          El nombre completo es requerido\n        \n      \n      \n        Correo Electrónico\n        \n        \n          El correo electrónico es requerido\n        \n        \n          Proporcione un correo electrónico válido\n        \n      \n      \n        Contraseña\n        \n        \n          La contraseña debe tener al menos 8 caracteres\n        \n        \n          La contraseña no puede tener más de 20 caracteres\n        \n        \n          {{ formRegistro.get('password')?.errors?.['missingUppercase'] }}\n        \n        \n          {{ formRegistro.get('password')?.errors?.['missingLowercase'] }}\n        \n        \n          {{ formRegistro.get('password')?.errors?.['missingNumber'] }}\n        \n        \n          {{ formRegistro.get('password')?.errors?.['missingSpecial'] }}\n        \n      \n      \n        Confirmar Contraseña\n        \n        \n          La confirmación de la contraseña es requerida\n        \n        \n          Las contraseñas deben coincidir\n        \n      \n      \n        Teléfono\n        \n        \n          El teléfono es requerido\n        \n      \n      \n        \n      \n      \n        Dirección de Envío\n        \n      \n      \n        Actualizar\n      \n    \n\n    \n    \n      {{ mensajeExito }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Editar Perfil                  Rut                          El rut es requerido                          El rut no es válido                            Nombre Completo                          El nombre completo es requerido                            Correo Electrónico                          El correo electrónico es requerido                          Proporcione un correo electrónico válido                            Contraseña                          La contraseña debe tener al menos 8 caracteres                          La contraseña no puede tener más de 20 caracteres                          {{ formRegistro.get(\\'password\\')?.errors?.[\\'missingUppercase\\'] }}                          {{ formRegistro.get(\\'password\\')?.errors?.[\\'missingLowercase\\'] }}                          {{ formRegistro.get(\\'password\\')?.errors?.[\\'missingNumber\\'] }}                          {{ formRegistro.get(\\'password\\')?.errors?.[\\'missingSpecial\\'] }}                            Confirmar Contraseña                          La confirmación de la contraseña es requerida                          Las contraseñas deben coincidir                            Teléfono                          El teléfono es requerido                                                Dirección de Envío                            Actualizar                        {{ mensajeExito }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/product.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un producto.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoria\n                                        \n                                \n                                \n                                        \n                                            descripcion\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            marca\n                                        \n                                \n                                \n                                        \n                                            precio\n                                        \n                                \n                                \n                                        \n                                            thumbnailUrl\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categoría a la que pertenece el producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripción detallada del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        marca\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        marca:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Marca del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnailUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL de la imagen miniatura del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Título o nombre del producto\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Product{\n    /** Precio del producto */\n    precio: number;\n    /** ID único del producto */\n    id: number;\n    /** Categoría a la que pertenece el producto */\n    categoria: string;\n     /** Marca del producto */\n    marca: string;\n    /** Título o nombre del producto */\n    title: string;\n    /** Descripción detallada del producto */\n    descripcion: string;\n    /** URL de la imagen miniatura del producto */\n    thumbnailUrl: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cart\n                            \n                            \n                                cart$\n                            \n                            \n                                    Private\n                                productsCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProduct\n                            \n                            \n                                addToCart\n                            \n                            \n                                checkProductIdExists\n                            \n                            \n                                clearCart\n                            \n                            \n                                decrementQuantity\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                getCart\n                            \n                            \n                                getProductById\n                            \n                            \n                                getProducts\n                            \n                            \n                                incrementQuantity\n                            \n                            \n                                    Private\n                                updateCart\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/product.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProduct\n                        \n                    \n                \n            \n            \n                \naddProduct(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Añade un nuevo producto a la colección de productos en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El producto que se añadirá a Firestore.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando se completa la operación de añadir el producto.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Agrega un producto al carrito de compras.\nSi el producto ya existe en el carrito, incrementa la cantidad; de lo contrario, lo agrega con cantidad 1.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El objeto tipo Product que se desea agregar al carrito.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkProductIdExists\n                        \n                    \n                \n            \n            \n                \ncheckProductIdExists(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Verifica si existe un producto con el ID especificado en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del producto que se verificará.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve con true si el documento existe, o false si no existe.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Limpia el contenido del carrito de compras.\nElimina todos los productos del carrito y actualiza el estado almacenado en localStorage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrementQuantity\n                        \n                    \n                \n            \n            \n                \ndecrementQuantity(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Decrementa la cantidad de un producto en el carrito.\nSi la cantidad alcanza 0, el producto se elimina del carrito.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del producto cuya cantidad se desea decrementar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Elimina un producto de la colección en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del producto que se eliminará.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando se completa la operación de eliminar el producto.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCart\n                        \n                    \n                \n            \n            \n                \ngetCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Obtiene el contenido actual del carrito de compras almacenado en localStorage.\n\n\n                        \n                            Returns :     literal type[]\n\n                        \n                            \n                                Un arreglo de objetos que contiene cada producto en el carrito junto con su cantidad.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Obtiene un producto por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del producto que se desea obtener.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                El objeto tipo Product que corresponde al ID proporcionado, o undefined si no se encuentra.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los productos disponibles.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un arreglo de objetos tipo Product que representa todos los productos disponibles.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementQuantity\n                        \n                    \n                \n            \n            \n                \nincrementQuantity(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Incrementa la cantidad de un producto en el carrito.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del producto cuya cantidad se desea incrementar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCart(cart: literal type[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:176\n                        \n                    \n\n\n            \n                \n                        Actualiza el contenido del carrito de compras y lo guarda en localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cart\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nuevo estado del carrito de compras que se desea guardar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: string | number, product: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/product.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Actualiza un producto existente en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del producto que se actualizará.\n\n                                            \n                                        \n                                        \n                                                product\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto parcial que contiene los campos actualizados del producto.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando se completa la operación de actualizar el producto.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.getCart())\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:31\n                        \n                    \n\n            \n                \n                    BehaviorSubject que contiene el carrito de compras.\nEmite un arreglo de objetos que contienen productos y cantidades.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cart$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.cart.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        productsCollection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : collection(this.firestore, 'products')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/product.service.ts:23\n                        \n                    \n\n            \n                \n                    Servicio para la gestión de productos.\nProporciona métodos para agregar, actualizar, y eliminar productos en Firestore.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Product} from \"../models/product.model\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Firestore,collectionData, collection,doc,docData,getDoc,setDoc,updateDoc,deleteDoc } from \"@angular/fire/firestore\";\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\n\n/**\n * Servicio para la gestión de productos y carrito de compras.\n * @description Este servicio proporciona métodos para obtener productos, agregar productos al carrito, gestionar cantidades y limpiar el carrito.\n */\n\nexport class ProductService{ \n\n      /**\n     * Servicio para la gestión de productos.\n     * Proporciona métodos para agregar, actualizar, y eliminar productos en Firestore.\n     */\n    \n    private productsCollection = collection(this.firestore, 'products');\n    constructor(private firestore: Firestore) {}\n\n    /**\n     * BehaviorSubject que contiene el carrito de compras.\n     * Emite un arreglo de objetos que contienen productos y cantidades.\n     */\n\n    private cart = new BehaviorSubject(this.getCart());\n    cart$ = this.cart.asObservable();\n    \n    /**\n     * Añade un nuevo producto a la colección de productos en Firestore.\n     * @param product El producto que se añadirá a Firestore.\n     * @returns Una promesa que se resuelve cuando se completa la operación de añadir el producto.\n     */\n\n    addProduct(product: Product): Promise {\n      const productDoc = doc(this.firestore, `products/${product.id}`);\n      return setDoc(productDoc, product);\n    }\n\n    /**\n     * Actualiza un producto existente en Firestore.\n     * @param id El ID del producto que se actualizará.\n     * @param product Objeto parcial que contiene los campos actualizados del producto.\n     * @returns Una promesa que se resuelve cuando se completa la operación de actualizar el producto.\n     */\n  \n    updateProduct(id: string | number, product: Partial): Promise {\n      const productDoc = doc(this.firestore, `products/${id}`);\n      return updateDoc(productDoc, product);\n    }\n\n    /**\n     * Elimina un producto de la colección en Firestore.\n     * @param id El ID del producto que se eliminará.\n     * @returns Una promesa que se resuelve cuando se completa la operación de eliminar el producto.\n     */\n  \n    deleteProduct(id: string): Promise {\n      const productDoc = doc(this.firestore, `products/${id}`);\n      return deleteDoc(productDoc);\n    }\n\n    /**\n     * Verifica si existe un producto con el ID especificado en Firestore.\n     * @param id El ID del producto que se verificará.\n     * @returns Una promesa que se resuelve con true si el documento existe, o false si no existe.\n     */\n\n    checkProductIdExists(id: string): Promise {\n      const productDoc = doc(this.firestore, `products/${id}`);\n      return getDoc(productDoc).then(docSnapshot => docSnapshot.exists());\n    }\n\n    /**\n   * Obtiene todos los productos disponibles.\n   * @return Un arreglo de objetos tipo Product que representa todos los productos disponibles.\n   */\n    \n    getProducts(): Observable {\n      const productsCollection = collection(this.firestore, 'products');\n      return collectionData(productsCollection, { idField: 'id' }) as Observable;\n    }\n  \n\n   /**\n   * Obtiene un producto por su ID.\n   * @param id El ID del producto que se desea obtener.\n   * @return El objeto tipo Product que corresponde al ID proporcionado, o undefined si no se encuentra.\n   */\n    \n   getProductById(id: string): Observable {\n    const productDoc = doc(this.firestore, `products/${id}`);\n    return docData(productDoc, { idField: 'id' }).pipe(\n      map(product => product ? (product as Product) : undefined)\n    );\n  }\n     /**\n   * Agrega un producto al carrito de compras.\n   * Si el producto ya existe en el carrito, incrementa la cantidad; de lo contrario, lo agrega con cantidad 1.\n   * @param product El objeto tipo Product que se desea agregar al carrito.\n   */\n\n    addToCart(product: Product): void {\n        let cart = this.getCart();\n        const existingProduct = cart.find(item => item.product.id === product.id);\n        if (existingProduct) {\n          existingProduct.quantity++;\n        } else {\n          cart.push({ product, quantity: 1 });\n        }\n        this.updateCart(cart);\n      }\n\n      /**\n   * Incrementa la cantidad de un producto en el carrito.\n   * @param productId El ID del producto cuya cantidad se desea incrementar.\n   */\n    \n      incrementQuantity(productId: number): void {\n        let cart = this.getCart();\n        const existingProduct = cart.find(item => item.product.id === productId);\n        if (existingProduct) {\n          existingProduct.quantity++;\n        }\n        this.updateCart(cart);\n      }\n\n      /**\n   * Decrementa la cantidad de un producto en el carrito.\n   * Si la cantidad alcanza 0, el producto se elimina del carrito.\n   * @param productId El ID del producto cuya cantidad se desea decrementar.\n   */\n    \n      decrementQuantity(productId: number): void {\n        let cart = this.getCart();\n        const existingProduct = cart.find(item => item.product.id === productId);\n        if (existingProduct) {\n          existingProduct.quantity--;\n          if (existingProduct.quantity === 0) {\n            cart = cart.filter(item => item.product.id !== productId);\n          }\n        }\n        this.updateCart(cart);\n      }\n\n      /**\n   * Obtiene el contenido actual del carrito de compras almacenado en localStorage.\n   * @return Un arreglo de objetos que contiene cada producto en el carrito junto con su cantidad.\n   */\n    \n      getCart(): { product: Product, quantity: number }[] {\n        const cart = localStorage.getItem('cart');\n        return cart ? JSON.parse(cart) : [];\n      }\n\n      /**\n   * Limpia el contenido del carrito de compras.\n   * Elimina todos los productos del carrito y actualiza el estado almacenado en localStorage.\n   */\n\n      clearCart(): void {\n        localStorage.removeItem('cart');\n        this.cart.next([]);\n      }\n\n       /**\n   * Actualiza el contenido del carrito de compras y lo guarda en localStorage.\n   * @param cart El nuevo estado del carrito de compras que se desea guardar.\n   */\n    \n      private updateCart(cart: { product: Product, quantity: number }[]): void {\n        localStorage.setItem('cart', JSON.stringify(cart));\n        this.cart.next(cart);\n      }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RutFormatDirective.html":{"url":"directives/RutFormatDirective.html","title":"directive - RutFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  RutFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/sign-up/rut-format.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appRutFormat]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatRut\n                            \n                            \n                                    \n                                onInput\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, control: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/sign-up/rut-format.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        control\n                                                  \n                                                        \n                                                                    NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/sign-up/rut-format.directive.ts:12\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatRut\n                        \n                    \n                \n            \n            \n                \nformatRut(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sign-up/rut-format.directive.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('input', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/sign-up/rut-format.directive.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, ElementRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appRutFormat]'\n})\nexport class RutFormatDirective {\n\n  constructor(private el: ElementRef, private control: NgControl) {}\n\n  @HostListener('input', ['$event'])\n  onInput(event: any): void {\n    const value = this.el.nativeElement.value.replace(/[^0-9kK]/g, '');\n    let formattedRut = this.formatRut(value);\n    this.el.nativeElement.value = formattedRut;\n    this.control.control?.setValue(formattedRut, { emitEvent: false });\n  }\n\n  formatRut(value: string): string {\n    if (value.length  3) {\n      formattedRut = '.' + rut.slice(-3) + formattedRut;\n      rut = rut.slice(0, -3);\n    }\n    formattedRut = rut + formattedRut + '-' + dv;\n\n    return formattedRut;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SalesComponent.html":{"url":"components/SalesComponent.html","title":"component - SalesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SalesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/sales/sales.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sales\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sales.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sales.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pedidos\n                            \n                            \n                                permisos\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizarEstado\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarEstado\n                        \n                    \n                \n            \n            \n                \nactualizarEstado(pedido: any, nuevoEstado: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sales/sales.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Método para actualizar el estado de un pedido.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pedido\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El pedido que se desea actualizar.\n\n                                            \n                                        \n                                        \n                                                nuevoEstado\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nuevo estado que se asignará al pedido.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sales/sales.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\nObtiene los datos del usuario y los pedidos del almacenamiento local.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pedidos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sales/sales.component.ts:25\n                        \n                    \n\n            \n                \n                    Arreglo que contiene todos los pedidos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permisos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sales/sales.component.ts:37\n                        \n                    \n\n            \n                \n                    String que indica los permisos del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sales/sales.component.ts:31\n                        \n                    \n\n            \n                \n                    Objeto que representa al usuario actual.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-sales',\n  standalone: true,\n  imports: [CommonModule,FormsModule],\n  templateUrl: './sales.component.html',\n  styleUrl: './sales.component.css'\n})\n\n/**\n * Componente para la gestión de ventas y pedidos.\n * @description Este componente muestra la lista de pedidos y permite actualizar su estado.\n */\n\nexport class SalesComponent implements OnInit {\n\n  /**\n   * Arreglo que contiene todos los pedidos.\n   * @type {any[]} Arreglo de objetos que representan los pedidos almacenados.\n   */\n  pedidos: any[] = [];\n\n  /**\n   * Objeto que representa al usuario actual.\n   * @type {any} Objeto que contiene la información del usuario actualmente autenticado.\n   */\n  usuario: any = null;\n\n  /**\n   * String que indica los permisos del usuario.\n   * @type {string} String que describe los permisos del usuario actual.\n   */\n  permisos: string = '';\n\n  /**\n   * Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\n   * Obtiene los datos del usuario y los pedidos del almacenamiento local.\n   */\n\n  ngOnInit() {\n    // Obtener el usuario del local storage\n    const usuarioStorage = localStorage.getItem('usuario');\n    if (usuarioStorage) {\n      this.usuario = JSON.parse(usuarioStorage);\n      this.permisos = this.usuario.permisos;\n    }\n\n    // Obtener los pedidos del local storage\n    const pedidosStorage = localStorage.getItem('pedidos');\n    if (pedidosStorage) {\n      this.pedidos = JSON.parse(pedidosStorage);\n    }\n  }\n\n  /**\n   * Método para actualizar el estado de un pedido.\n   * @param pedido El pedido que se desea actualizar.\n   * @param nuevoEstado El nuevo estado que se asignará al pedido.\n   */\n  actualizarEstado(pedido: any, nuevoEstado: string) {\n    pedido.estado = nuevoEstado;\n    // Actualizar en el local storage\n    localStorage.setItem('pedidos', JSON.stringify(this.pedidos));\n  }\n}\n    \n\n    \n        \n  \n      \n          Listado de Pedidos\n           0; else noPedidos\">\n              \n                  \n                      \n                          \n                              Nombre\n                              Dirección\n                              Correo\n                              Teléfono\n                              Total\n                              Estado\n                              Acciones\n                          \n                      \n                      \n                          \n                              {{ pedido.nombre }}\n                              {{ pedido.direccion }}\n                              {{ pedido.correo }}\n                              {{ pedido.telefono }}\n                              {{ pedido.total | currency:'':'symbol':'1.0-0' }}\n                              {{ pedido.estado }}\n                              \n                                  \n                                      \n                                          \n                                      \n                                      \n                                          \n                                      \n                                      \n                                          \n                                      \n                                  \n                              \n                          \n                      \n                  \n              \n          \n          \n              No existen pedidos por gestionar.\n          \n      \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Listado de Pedidos           0; else noPedidos\">                                                                                                              Nombre                              Dirección                              Correo                              Teléfono                              Total                              Estado                              Acciones                                                                                                                              {{ pedido.nombre }}                              {{ pedido.direccion }}                              {{ pedido.correo }}                              {{ pedido.telefono }}                              {{ pedido.total | currency:\\'\\':\\'symbol\\':\\'1.0-0\\' }}                              {{ pedido.estado }}o existen pedidos por gestionar.                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'SalesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nRutFormatDirective\n\nRutFormatDirective\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nRutFormatDirective->SharedModule\n\n\n\n\n\nRutFormatDirective \n\nRutFormatDirective \n\nRutFormatDirective  -->\n\nSharedModule->RutFormatDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/sign-up/sharedModule.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RutFormatDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RutFormatDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RutFormatDirective } from './rut-format.directive';\n\n@NgModule({\n  declarations: [RutFormatDirective],\n  imports: [CommonModule],\n  exports: [RutFormatDirective]\n})\nexport class SharedModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/shopping-cart/shopping-cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que gestiona el carrito de compras y el proceso de checkout.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                total\n                            \n                            \n                                userInfoForm\n                            \n                            \n                                userLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateTotal\n                            \n                            \n                                    Private\n                                checkUserSession\n                            \n                            \n                                clearCart\n                            \n                            \n                                decrementQuantity\n                            \n                            \n                                incrementQuantity\n                            \n                            \n                                    Private\n                                loadCart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                proceedToCheckout\n                            \n                            \n                                    Private\n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, fb: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor del componente ShoppingCartComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para gestionar los productos.\n\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nConstructor de formularios reactivos para construir el formulario userInfoForm.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter de Angular para la navegación.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateTotal\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateTotal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Calcula el total del carrito sumando el precio de cada producto por su cantidad.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUserSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUserSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Verifica si hay una sesión de usuario activa almacenada en localStorage.\nSi hay sesión activa, carga la información del usuario en el formulario userInfoForm.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Vacía completamente el carrito de compras.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrementQuantity\n                        \n                    \n                \n            \n            \n                \ndecrementQuantity(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Decrementa la cantidad de un producto en el carrito.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID del producto que se quiere decrementar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementQuantity\n                        \n                    \n                \n            \n            \n                \nincrementQuantity(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Incrementa la cantidad de un producto en el carrito.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID del producto que se quiere incrementar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadCart\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Carga los productos en el carrito desde el servicio ProductService.\nCalcula el total del carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Método de ciclo de vida OnInit. Carga el carrito y verifica la sesión del usuario al inicializar el componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        proceedToCheckout\n                        \n                    \n                \n            \n            \n                \nproceedToCheckout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Procede con el proceso de checkout, almacenando el pedido en localStorage.\nSi el usuario está autenticado, utiliza su información almacenada.\nSi no, utiliza la información ingresada en el formulario userInfoForm.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:203\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de toast utilizando Bootstrap Toast.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl mensaje que se desea mostrar en el toast.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:26\n                        \n                    \n\n            \n                \n                    Lista de productos en el carrito con sus cantidades\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:29\n                        \n                    \n\n            \n                \n                    Total acumulado del carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:35\n                        \n                    \n\n            \n                \n                    Formulario para la información del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/shopping-cart/shopping-cart.component.ts:32\n                        \n                    \n\n            \n                \n                    Indica si el usuario ha iniciado sesión\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Product } from '../../models/product.model';\nimport{ ProductService } from '../../service/product.service';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup,ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\ndeclare var bootstrap: any; \n\n/**\n * Componente que gestiona el carrito de compras y el proceso de checkout.\n */\n\n\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [CommonModule,ReactiveFormsModule],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\n\nexport class ShoppingCartComponent implements OnInit {\n\n  /** Lista de productos en el carrito con sus cantidades */\n  cart: { product: Product, quantity: number }[] = [];\n\n  /** Total acumulado del carrito */\n  total: number = 0;\n\n  /** Indica si el usuario ha iniciado sesión */\n  userLoggedIn: boolean = false;\n\n  /** Formulario para la información del usuario */\n  userInfoForm: FormGroup;\n\n   /**\n   * Constructor del componente ShoppingCartComponent.\n   * @param {ProductService} productService - Servicio para gestionar los productos.\n   * @param {FormBuilder} fb - Constructor de formularios reactivos para construir el formulario userInfoForm.\n   * @param {Router} router - Router de Angular para la navegación.\n   */\n  constructor(private productService: ProductService, private fb: FormBuilder, private router: Router) {\n    this.userInfoForm = this.fb.group({\n      nombre: ['', Validators.required],\n      direccion: ['', Validators.required],\n      correo: ['', [Validators.required, Validators.email]],\n      telefono: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Método de ciclo de vida OnInit. Carga el carrito y verifica la sesión del usuario al inicializar el componente.\n   * @return {void}\n   */\n\n  ngOnInit(): void {\n    this.loadCart();\n    this.checkUserSession();\n  }\n\n  /**\n   * Carga los productos en el carrito desde el servicio ProductService.\n   * Calcula el total del carrito.\n   * @return {void}\n   */\n\n  private loadCart(): void {\n    this.cart = this.productService.getCart();\n    this.calculateTotal();\n  }\n\n   /**\n   * Calcula el total del carrito sumando el precio de cada producto por su cantidad.\n   * @return {void}\n   */\n\n  private calculateTotal(): void {\n    this.total = this.cart.reduce((sum, item) => sum + item.product.precio * item.quantity, 0);\n  }\n\n  /**\n   * Verifica si hay una sesión de usuario activa almacenada en localStorage.\n   * Si hay sesión activa, carga la información del usuario en el formulario userInfoForm.\n   * @return {void}\n   */\n\n  private checkUserSession(): void {\n    const sesionUsuario = localStorage.getItem('sesionUsuario');\n    this.userLoggedIn = !!sesionUsuario;\n    if (this.userLoggedIn && sesionUsuario) {\n      const userData = JSON.parse(sesionUsuario);\n      this.userInfoForm.patchValue({\n        nombre: userData.nombre,\n        direccion: userData.direccionEnvio,\n        correo: userData.email,\n        telefono: userData.telefono,\n      });\n    }\n  }\n\n   /**\n   * Incrementa la cantidad de un producto en el carrito.\n   * @param {number} productId - ID del producto que se quiere incrementar.\n   * @return {void}\n   */\n\n  incrementQuantity(productId: number): void {\n    this.productService.incrementQuantity(productId);\n    this.loadCart();\n  }\n\n   /**\n   * Decrementa la cantidad de un producto en el carrito.\n   * @param {number} productId - ID del producto que se quiere decrementar.\n   * @return {void}\n   */\n\n  decrementQuantity(productId: number): void {\n    this.productService.decrementQuantity(productId);\n    this.loadCart();\n  }\n\n  /**\n   * Vacía completamente el carrito de compras.\n   * @return {void}\n   */\n\n  clearCart(): void {\n    this.productService.clearCart();\n    this.loadCart();\n  }\n\n  /**\n   * Procede con el proceso de checkout, almacenando el pedido en localStorage.\n   * Si el usuario está autenticado, utiliza su información almacenada.\n   * Si no, utiliza la información ingresada en el formulario userInfoForm.\n   * @return {void}\n   */\n\n  proceedToCheckout(): void {\n    const pedido = {\n      nombre: '',\n      direccion: '',\n      correo: '',\n      telefono: '',\n      total: this.total,\n      detalle: this.cart.map(item => ({\n        img: item.product.thumbnailUrl,\n        producto: item.product.title,\n        cantidad: item.quantity,\n        precio: item.product.precio,\n        subtotal: item.product.precio * item.quantity\n      })),\n      estado: 'Procesado'\n    };\n\n    if (this.userLoggedIn) {\n      const sesionUsuario = JSON.parse(localStorage.getItem('sesionUsuario') || '{}');\n      pedido.nombre = sesionUsuario.nombre;\n      pedido.direccion = sesionUsuario.direccionEnvio;\n      pedido.correo = sesionUsuario.email;\n      pedido.telefono = sesionUsuario.telefono;\n    } else {\n      if (this.userInfoForm.valid) {\n        pedido.nombre = this.userInfoForm.value.nombre;\n        pedido.direccion = this.userInfoForm.value.direccion;\n        pedido.correo = this.userInfoForm.value.correo;\n        pedido.telefono = this.userInfoForm.value.telefono;\n        \n      } else {\n        // Si el formulario no es válido, no proceder con el checkout\n        return;\n      }\n    }\n\n    let pedidos = JSON.parse(localStorage.getItem('pedidos') || '[]');\n    pedidos.push(pedido);\n    localStorage.setItem('pedidos', JSON.stringify(pedidos));\n\n    // Destruir sesión del usuario si no está logueado\n    if (!this.userLoggedIn) {\n      localStorage.removeItem('sesionUsuario');\n    }\n\n    //destruir sesion de cart\n     this.clearCart();\n\n     this.showToast(`¡Pedido realizado con éxito! Redirigiendo a la página de inicio...`);\n\n    setTimeout(() => {\n      this.router.navigate(['/home']);\n    }, 4000);\n\n  }\n\n  /**\n   * Muestra un mensaje de toast utilizando Bootstrap Toast.\n   * @param {string} message - El mensaje que se desea mostrar en el toast.\n   * @return {void}\n   */\n\n  private showToast(message: string): void {\n    const toastElement = document.getElementById('liveToast');\n    const toastBodyElement = document.getElementById('toast-body');\n\n    if (toastBodyElement) {\n      toastBodyElement.innerText = message;\n    }\n\n    if (toastElement) {\n      const toast = new bootstrap.Toast(toastElement);\n      toast.show();\n    }\n  }\n}\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        \n      \n    \n  \n\n\n\n\n\n\n  Carrito de Compras\n  \n    Tu carrito está vacío.\n  \n  \n  \n   0\">\n    \n      \n        \n          Producto\n          Cantidad\n          Precio\n          Subtotal\n        \n      \n      \n        \n          \n            \n              \n              \n                {{ item.product.title }}\n                {{ item.product.descripcion | slice:0:50 }}...\n              \n            \n          \n          \n            \n              -\n              {{ item.quantity }}\n              +\n            \n          \n          {{ item.product.precio | currency:'':'symbol':'1.0-0' }}\n          {{ (item.product.precio * item.quantity) | currency:'':'symbol':'1.0-0' }}\n        \n      \n    \n    \n      Total: {{ total | currency:'':'symbol':'1.0-0' }}\n      Vaciar Carrito\n    \n    \n      Por favor, ingresa tu información para continuar con la compra\n      \n        \n          Nombre Completo\n          \n          \n            Nombre es requerido\n          \n        \n        \n          Dirección de Envío\n          \n          \n            Dirección es requerida\n          \n        \n        \n          Correo Electrónico\n          \n          \n            Correo Electrónico es requerido\n          \n          \n            Proporcione un correo electrónico válido\n          \n        \n        \n          Teléfono\n          \n          \n            Teléfono es requerido\n          \n        \n        \n          Proceder al Pago\n        \n      \n    \n    \n      Proceder al Pago\n    \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Carrito de Compras      Tu carrito está vacío.         0\">                            Producto          Cantidad          Precio          Subtotal                                                                                              {{ item.product.title }}                {{ item.product.descripcion | slice:0:50 }}...                                                                        -              {{ item.quantity }}              +                                {{ item.product.precio | currency:\\'\\':\\'symbol\\':\\'1.0-0\\' }}          {{ (item.product.precio * item.quantity) | currency:\\'\\':\\'symbol\\':\\'1.0-0\\' }}                            Total: {{ total | currency:\\'\\':\\'symbol\\':\\'1.0-0\\' }}      Vaciar Carrito              Por favor, ingresa tu información para continuar con la compra                        Nombre Completo                                Nombre es requerido                                    Dirección de Envío                                Dirección es requerida                                    Correo Electrónico                                Correo Electrónico es requerido                                Proporcione un correo electrónico válido                                    Teléfono                                Teléfono es requerido                                    Proceder al Pago                            Proceder al Pago              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/sign-up/sign-up.component.ts\n\n\n\n    \n        Description\n    \n    \n        Este componente permite a los usuarios registrarse ingresando sus datos personales.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formRegistro\n                            \n                            \n                                mensajeError\n                            \n                            \n                                mensajeExito\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formulario\n                            \n                            \n                                limpiarFormulario\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                passwordStrengthValidator\n                            \n                            \n                                    Async\n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(f: FormBuilder, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/sign-up/sign-up.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formulario\n                        \n                    \n                \n            \n            \n                \nformulario(formulario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sign-up/sign-up.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formulario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limpiarFormulario\n                        \n                    \n                \n            \n            \n                \nlimpiarFormulario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sign-up/sign-up.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Restablece todos los campos del formulario a su estado inicial.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sign-up/sign-up.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Se llama al inicio del ciclo de vida del componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(group: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sign-up/sign-up.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Grupo de AbstractControl que contiene los campos password y confirmPassword.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con errores si las contraseñas no coinciden, o null si coinciden.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordStrengthValidator\n                        \n                    \n                \n            \n            \n                \npasswordStrengthValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sign-up/sign-up.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    AbstractControl que representa el campo de contraseña.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con errores específicos si la contraseña no cumple con los requisitos, o null si es válida.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/sign-up/sign-up.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Guarda los datos del usuario en localStorage si el formulario es válido.\nMuestra un mensaje de éxito y limpia el formulario después de 3 segundos.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formRegistro\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sign-up/sign-up.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mensajeError\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sign-up/sign-up.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mensajeExito\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/sign-up/sign-up.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { UsersService } from '../../service/users.service';\nimport { User } from '../../models/users.model';\nimport { validarRut } from '../../validators/rut.validator';\n\n/**\n * @description Componente para el formulario de registro de usuarios.\n * Este componente permite a los usuarios registrarse ingresando sus datos personales.\n */\n\n@Component({\n  selector: 'app-sign-up',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './sign-up.component.html',\n  styleUrl: './sign-up.component.css'\n})\nexport class SignUpComponent {\n\n  formulario(formulario: any) {\n    throw new Error('Method not implemented.');\n  }\n\n    /**\n   * @description FormGroup que contiene los campos del formulario de registro.\n   * @type {FormGroup}\n   * @description Mensaje de éxito mostrado después de enviar el formulario de registro.\n   * @type {string | null}\n   */\n\n  formRegistro!: FormGroup;\n  mensajeExito: string | null = null;\n  mensajeError: string | null = null;\n\n  constructor(private f : FormBuilder, private usersService: UsersService) {}\n\n  /**\n   * @description Inicializa el formulario de registro con validadores personalizados.\n   * Se llama al inicio del ciclo de vida del componente.\n   * @usageNotes Llama este método en ngOnInit para configurar el formulario de registro.\n   */\n\n  ngOnInit(): void {\n    this.formRegistro = this.f.group({\n      rut: ['', [Validators.required,validarRut]],\n      nombre: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(20),\n        this.passwordStrengthValidator\n        \n      ]],\n      confirmPassword: ['', Validators.required],\n      telefono: ['', Validators.required],\n      direccionEnvio: ['',Validators.required]\n    }, { validator: this.passwordMatchValidator });\n  }\n\n  /**\n   * @description Validador personalizado para verificar que las contraseñas coincidan.\n   * @param {AbstractControl} group Grupo de AbstractControl que contiene los campos password y confirmPassword.\n   * @return {ValidationErrors | null} Objeto con errores si las contraseñas no coinciden, o null si coinciden.\n   */\n\n  passwordMatchValidator(group: AbstractControl): ValidationErrors | null {\n    const password = group.get('password');\n    const confirmPassword = group.get('confirmPassword');\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      return { passwordMismatch: true };\n    }\n    return null;\n  }\n\n    /**\n   * @description Validador personalizado para verificar la fuerza de la contraseña.\n   * @param {AbstractControl} control AbstractControl que representa el campo de contraseña.\n   * @return {ValidationErrors | null} Objeto con errores específicos si la contraseña no cumple con los requisitos, o null si es válida.\n   */\n\n  passwordStrengthValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    if (!value) {\n      return null;\n    }\n\n    const errors: any = {};\n\n     // Validación de requisitos de contraseña\n\n    if (!/[A-Z]/.test(value)) {\n      errors.missingUppercase = 'La contraseña debe contener al menos una letra mayúscula';\n    }\n\n    if (!/[a-z]/.test(value)) {\n      errors.missingLowercase = 'La contraseña debe contener al menos una letra minúscula';\n    }\n\n    if (!/[0-9]/.test(value)) {\n      errors.missingNumber = 'La contraseña debe contener al menos un número';\n    }\n\n    if (!/[@$!%*?&]/.test(value)) {\n      errors.missingSpecial = 'La contraseña debe contener al menos un carácter especial (@$!%*?&)';\n    }\n\n    return Object.keys(errors).length ? errors : null;\n  }\n\n   /**\n   * @description Maneja el envío del formulario de registro.\n   * Guarda los datos del usuario en localStorage si el formulario es válido.\n   * Muestra un mensaje de éxito y limpia el formulario después de 3 segundos.\n   * @usageNotes Llama este método al hacer clic en el botón de enviar formulario en el template.\n   */\n   async submitForm():  Promise {\n    if (this.formRegistro.valid) {\n      const rut = this.formRegistro.get('rut')?.value;\n\n      try {\n        const rutRegistered = await this.usersService.isRutRegistered(rut);\n\n        if (rutRegistered) {\n          this.mensajeError = 'El RUT ingresado ya está registrado.';\n          setTimeout(() => {\n            this.formRegistro.reset();\n            this.mensajeError = null;\n          }, 3000);\n          return;\n        }\n\n        const nuevoUsuario: User = {\n          rut: this.formRegistro.get('rut')?.value,\n          nombre: this.formRegistro.get('nombre')?.value,\n          correo: this.formRegistro.get('email')?.value,\n          password: this.formRegistro.get('password')?.value,\n          telefono: this.formRegistro.get('telefono')?.value,\n          direccionEnvio: this.formRegistro.get('direccionEnvio')?.value,\n          permisos: 'cliente'\n        };\n\n        await this.usersService.addUser(nuevoUsuario);\n\n        const nombreUsuario = this.formRegistro.get('nombre')?.value;\n        this.mensajeExito = `¡${nombreUsuario}, tu información ha sido guardada exitosamente!`;\n\n        setTimeout(() => {\n          this.formRegistro.reset();\n          this.mensajeExito = null;\n        }, 3000);\n\n      } catch (error) {\n        console.error(\"Error al registrar el usuario: \", error);\n      }\n    }\n  }\n\n\n\n   /**\n   * @description Limpia el formulario de registro.\n   * Restablece todos los campos del formulario a su estado inicial.\n   * @usageNotes Llama este método al hacer clic en el botón de limpiar formulario en el template.\n   */\n\n  limpiarFormulario() {\n    this.formRegistro.reset();\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    Registro\n    \n      \n        Rut\n        \n        \n          El rut es requerido\n        \n        \n          El rut no es válido\n        \n      \n      \n        Nombre Completo\n        \n        \n          El nombre completo es requerido\n        \n      \n      \n        Correo Electrónico\n        \n        \n          El correo electrónico es requerido\n        \n        \n          Proporcione un correo electrónico válido\n        \n      \n      \n        Contraseña\n        \n        \n          La contraseña es requerida\n        \n        \n          La contraseña debe tener al menos 8 caracteres\n        \n        \n          La contraseña no puede tener más de 20 caracteres\n        \n        \n          {{ formRegistro.get('password')?.errors?.['missingUppercase'] }}\n        \n        \n          {{ formRegistro.get('password')?.errors?.['missingLowercase'] }}\n        \n        \n          {{ formRegistro.get('password')?.errors?.['missingNumber'] }}\n        \n        \n          {{ formRegistro.get('password')?.errors?.['missingSpecial'] }}\n        \n      \n      \n        Confirmar Contraseña\n        \n        \n          La confirmación de la contraseña es requerida\n        \n        \n          Las contraseñas deben coincidir\n        \n      \n      \n        Teléfono\n        \n        \n          El teléfono es requerido\n        \n        \n          Proporcione un teléfono válido\n        \n      \n      \n        Dirección de Envío\n        \n        \n          La dirección es requerida\n        \n      \n      \n        Registrar\n        Limpiar\n      \n    \n\n    \n    \n      {{ mensajeExito }}\n    \n\n     \n     \n      {{ mensajeError }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Registro                  Rut                          El rut es requerido                          El rut no es válido                            Nombre Completo                          El nombre completo es requerido                            Correo Electrónico                          El correo electrónico es requerido                          Proporcione un correo electrónico válido                            Contraseña                          La contraseña es requerida                          La contraseña debe tener al menos 8 caracteres                          La contraseña no puede tener más de 20 caracteres                          {{ formRegistro.get(\\'password\\')?.errors?.[\\'missingUppercase\\'] }}                          {{ formRegistro.get(\\'password\\')?.errors?.[\\'missingLowercase\\'] }}                          {{ formRegistro.get(\\'password\\')?.errors?.[\\'missingNumber\\'] }}                          {{ formRegistro.get(\\'password\\')?.errors?.[\\'missingSpecial\\'] }}                            Confirmar Contraseña                          La confirmación de la contraseña es requerida                          Las contraseñas deben coincidir                            Teléfono                          El teléfono es requerido                          Proporcione un teléfono válido                            Dirección de Envío                          La dirección es requerida                            Registrar        Limpiar                        {{ mensajeExito }}                    {{ mensajeError }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/users.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un usuario.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            correo\n                                        \n                                \n                                \n                                        \n                                            direccionEnvio\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permisos\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            telefono\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        correo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        correo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo electrónico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direccionEnvio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direccionEnvio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Dirección del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID único del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre completo del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contraseña del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permisos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permisos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Permisos o roles asignados al usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rut del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        telefono\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        telefono:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Número de teléfono del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    /**\n     * ID único del usuario.\n     */\n    id?: string;\n  \n    /**\n     * Rut del usuario.\n     */\n    rut: string;\n  \n    /**\n     * Nombre completo del usuario.\n     */\n    nombre: string;\n  \n    /**\n     * Correo electrónico del usuario.\n     */\n    correo: string;\n  \n    /**\n     * Contraseña del usuario.\n     */\n    password: string;\n  \n    /**\n     * Permisos o roles asignados al usuario.\n     */\n    permisos?: string;\n  \n    /**\n     * Número de teléfono del usuario.\n     */\n    telefono?: string;\n\n    /**\n     * Dirección del usuario.\n     */\n    direccionEnvio: string\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAdmin\n                            \n                            \n                                selectedUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                    Async\n                                loadUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteModal\n                            \n                            \n                                    Private\n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/users/users.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor del componente UsersComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que maneja las operaciones relacionadas con los usuarios.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario seleccionado.\nRealiza la operación de eliminación a través del servicio y maneja la respuesta.\nMuestra un toast de confirmación al eliminar con éxito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Carga la lista de usuarios desde el servicio.\nManeja cualquier error que ocurra durante la carga.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\nCarga la lista de usuarios al iniciar el componente y establece isAdmin en true (simulado para demostración).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteModal\n                        \n                    \n                \n            \n            \n                \nopenDeleteModal(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Abre el modal de confirmación para eliminar un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Usuario seleccionado para eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Muestra un toast de Bootstrap con el mensaje proporcionado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mensaje a mostrar en el toast.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../service/users.service';\nimport { CommonModule } from '@angular/common';\nimport { User } from '../../models/users.model';\n\n// Declaramos la variable bootstrap para acceder a los componentes de Bootstrap\ndeclare var bootstrap: any; \n\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  users: User[] = []; // Arreglo que almacenará la lista de usuarios\n  isAdmin: boolean = false; // Indica si el usuario actual es administrador\n\n  selectedUser: User | undefined; // Usuario seleccionado para operaciones como eliminación\n\n /**\n   * Constructor del componente UsersComponent.\n   * @param usersService Servicio que maneja las operaciones relacionadas con los usuarios.\n   */\n\n  constructor(private usersService: UsersService) {}\n\n   /**\n   * Método del ciclo de vida de Angular que se ejecuta al inicializar el componente.\n   * Carga la lista de usuarios al iniciar el componente y establece isAdmin en true (simulado para demostración).\n   */\n\n  ngOnInit(): void {\n    this.loadUsers();\n    this.isAdmin = true;\n  }\n\n  /**\n   * Carga la lista de usuarios desde el servicio.\n   * Maneja cualquier error que ocurra durante la carga.\n   */\n\n  async loadUsers(): Promise {\n    try {\n      this.users = await this.usersService.getUsers();\n    } catch (error) {\n      console.error('Error al cargar usuarios:', error);\n    }\n  }\n\n   /**\n   * Abre el modal de confirmación para eliminar un usuario.\n   * @param user Usuario seleccionado para eliminar.\n   */\n\n  openDeleteModal(user: User): void {\n    this.selectedUser = user;\n    const deleteModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));\n    deleteModal.show();\n  }\n\n   /**\n   * Elimina un usuario seleccionado.\n   * Realiza la operación de eliminación a través del servicio y maneja la respuesta.\n   * Muestra un toast de confirmación al eliminar con éxito.\n   */\n\n  deleteUser(): void {\n    if (this.selectedUser && this.selectedUser.id) {\n      this.usersService.deleteUser(this.selectedUser.id.toString())\n        .then(() => {\n          console.log('Usuario eliminado con éxito');\n          this.showToast(`${this.selectedUser?.nombre} ha sido eliminado.`);\n          this.loadUsers();\n          \n          const modalElement = document.getElementById('deleteUserModal');\n          if (modalElement) {\n            const modalInstance = bootstrap.Modal.getInstance(modalElement);\n            if (modalInstance) {\n              modalInstance.hide(); // Oculta el modal después de eliminar el usuario\n            } else {\n              console.warn('No se encontró una instancia de la modal.');\n            }\n          } else {\n            console.warn('No se encontró el elemento de la modal en el DOM.');\n          }\n        })\n        .catch(error => {\n          console.error('Error al eliminar Usuario', error);  // Manejo de errores al eliminar usuario\n        });\n    } else {\n      console.warn('No se puede eliminar usuario porque selectedUser o su ID son undefined.');\n    }\n  }\n\n   /**\n   * Muestra un toast de Bootstrap con el mensaje proporcionado.\n   * @param message Mensaje a mostrar en el toast.\n   */\n  private showToast(message: string): void {\n    const toastElement = document.getElementById('liveToast');\n    const toastBodyElement = document.getElementById('toast-body');\n\n    if (toastBodyElement) {\n      toastBodyElement.innerText = message;\n    }\n\n    if (toastElement) {\n      const toast = new bootstrap.Toast(toastElement);\n      toast.show();\n    }\n  }\n\n}\n    \n\n    \n        \n    Lista de Usuarios\n    \n      \n        \n          ID\n          Nombre\n          RUT\n          Teléfono\n          Dirección de Envío\n          Opciones\n        \n      \n      \n        \n          {{ user.id }}\n          {{ user.nombre }}\n          {{ user.rut }}\n          {{ user.telefono }}\n          {{ user.direccionEnvio }}\n          \n            \n                 Eliminar\n              \n          \n        \n      \n    \n  \n          \n          \n            \n              \n                \n                  Confirmar Eliminación\n                  \n                \n                \n                  ¿Estás seguro de que deseas eliminar al usuario \"{{ selectedUser?.nombre }}\"?\n                \n                \n                  Cancelar\n                  Eliminar Usuario\n                \n              \n            \n          \n      \n      \n          \n            \n              \n                Confirmación\n                \n              \n              \n            \n          \n\n    \n\n    \n                \n                    ./users.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Lista de Usuarios                            ID          Nombre          RUT          Teléfono          Dirección de Envío          Opciones                                      {{ user.id }}          {{ user.nombre }}          {{ user.rut }}          {{ user.telefono }}          {{ user.direccionEnvio }}                                       Eliminar                                                                                                                            Confirmar Eliminación                                                                    ¿Estás seguro de que deseas eliminar al usuario \"{{ selectedUser?.nombre }}\"?                                                  Cancelar                  Eliminar Usuario                                                                                                                    Confirmación                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PerfilComponent', 'selector': 'app-perfil'},{'name': 'SalesComponent', 'selector': 'app-sales'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'RutFormatDirective', 'selector': '[appRutFormat]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                usersCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                isEmailRegistered\n                            \n                            \n                                    Async\n                                isRutRegistered\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/users.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Añade un nuevo usuario a la colección de usuarios en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando se completa la operación de añadir el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/users.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario de Firestore según su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario que se eliminará.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando se completa la eliminación del usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/users.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los usuarios de la colección en Firestore.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Una promesa que se resuelve con un arreglo de usuarios.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isEmailRegistered\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEmailRegistered(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/users.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Verifica si existe un usuario con el correo electrónico proporcionado en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electrónico del usuario a verificar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve con true si el correo electrónico está registrado, de lo contrario false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isRutRegistered\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRutRegistered(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/users.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Verifica si existe un usuario con el RUT proporcionado en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT del usuario a verificar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve con true si el RUT está registrado, de lo contrario false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(email: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/users.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Actualiza la contraseña de un usuario en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electrónico del usuario cuya contraseña se actualizará.\n\n                                            \n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva contraseña del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando se completa la actualización de la contraseña.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/users.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Actualiza los datos de un usuario en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto parcial del usuario con los campos a actualizar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando se completa la actualización de los datos del usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/users.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Valida las credenciales de inicio de sesión de un usuario en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electrónico del usuario.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contraseña del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Una promesa que se resuelve con los datos del usuario si las credenciales son válidas, de lo contrario null.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersCollection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : collection(this.firestore, 'users')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/users.service.ts:15\n                        \n                    \n\n            \n                \n                    Servicio para la gestión de usuarios.\nProporciona métodos para agregar, actualizar, y eliminar usuarios en Firestore.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/users.model';\nimport { Firestore,collection,addDoc,doc,query,deleteDoc,getDocs,where,updateDoc } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService{\n \n   /**\n     * Servicio para la gestión de usuarios.\n     * Proporciona métodos para agregar, actualizar, y eliminar usuarios en Firestore.\n     */\n  \n  private usersCollection = collection(this.firestore, 'users');\n  constructor(private firestore : Firestore) { }\n\n  /**\n     * Añade un nuevo usuario a la colección de usuarios en Firestore.\n     * @param usuario El usuario que se añadirá a Firestore.\n     * @returns Una promesa que se resuelve cuando se completa la operación de añadir el usuario.\n     */\n  \n  addUser(user: User): Promise {\n    return addDoc(this.usersCollection, user).then(() => {});\n  }\n\n   /**\n   * Verifica si existe un usuario con el RUT proporcionado en Firestore.\n   * @param rut RUT del usuario a verificar.\n   * @returns Una promesa que se resuelve con true si el RUT está registrado, de lo contrario false.\n   */\n\n  async isRutRegistered(rut: string): Promise {\n    const q = query(this.usersCollection, where('rut', '==', rut));\n    const querySnapshot = await getDocs(q);\n    return !querySnapshot.empty;\n  }\n\n  /**\n   * Verifica si existe un usuario con el correo electrónico proporcionado en Firestore.\n   * @param email Correo electrónico del usuario a verificar.\n   * @returns Una promesa que se resuelve con true si el correo electrónico está registrado, de lo contrario false.\n   */\n\n  async isEmailRegistered(email: string): Promise {\n    const q = query(this.usersCollection, where('correo', '==', email));\n    const querySnapshot = await getDocs(q);\n    return !querySnapshot.empty;\n  }\n\n    /**\n   * Valida las credenciales de inicio de sesión de un usuario en Firestore.\n   * @param email Correo electrónico del usuario.\n   * @param password Contraseña del usuario.\n   * @returns Una promesa que se resuelve con los datos del usuario si las credenciales son válidas, de lo contrario null.\n   */\n\n  async validateUser(email: string, password: string): Promise {\n    const q = query(this.usersCollection, where('correo', '==', email), where('password', '==', password));\n    const querySnapshot = await getDocs(q);\n    if (!querySnapshot.empty) {\n      const userDoc = querySnapshot.docs[0];\n      return userDoc.data() as User;\n    }\n    return null;\n  }\n  \n    /**\n   * Actualiza la contraseña de un usuario en Firestore.\n   * @param email Correo electrónico del usuario cuya contraseña se actualizará.\n   * @param newPassword Nueva contraseña del usuario.\n   * @returns Una promesa que se resuelve cuando se completa la actualización de la contraseña.\n   */\n\n  async updatePassword(email: string, newPassword: string): Promise {\n    const q = query(this.usersCollection, where('correo', '==', email));\n    const querySnapshot = await getDocs(q);\n    if (!querySnapshot.empty) {\n      const userDoc = querySnapshot.docs[0];\n      const userRef = doc(this.firestore, 'users', userDoc.id);\n      await updateDoc(userRef, { password: newPassword });\n    }\n  }\n\n   /**\n   * Actualiza los datos de un usuario en Firestore.\n   * @param user Objeto parcial del usuario con los campos a actualizar.\n   * @returns Una promesa que se resuelve cuando se completa la actualización de los datos del usuario.\n   * @throws Error si el correo electrónico del usuario no está definido.\n   */\n\n async updateUser(user: Partial): Promise {\n    if (!user.correo) {\n      throw new Error('Email is required to update user');\n    }\n\n    const q = query(this.usersCollection, where('correo', '==', user.correo));\n    const querySnapshot = await getDocs(q);\n    if (!querySnapshot.empty) {\n      const userDoc = querySnapshot.docs[0];\n      const userRef = doc(this.firestore, 'users', userDoc.id);\n\n      // Filtrar los campos undefined y conservar el tipo Partial\n      const userData: Partial = Object.fromEntries(\n        Object.entries(user).filter(([_, v]) => v !== undefined)\n      ) as Partial;\n\n      await updateDoc(userRef, userData);\n    }\n  }\n\n   /**\n   * Obtiene todos los usuarios de la colección en Firestore.\n   * @returns Una promesa que se resuelve con un arreglo de usuarios.\n   * @throws Error si ocurre un problema al obtener los usuarios.\n   */\n\n  async getUsers(): Promise {\n    try {\n      const querySnapshot = await getDocs(collection(this.firestore, 'users'));\n      const users: User[] = [];\n      querySnapshot.forEach(doc => {\n        const userData = doc.data() as User;\n        const user: User = { ...userData, id: doc.id };\n        users.push(user);\n      });\n      return users;\n    } catch (error) {\n      console.error('Error al obtener usuarios:', error);\n      throw error;\n    }\n  }\n\n   /**\n   * Elimina un usuario de Firestore según su ID.\n   * @param id ID del usuario que se eliminará.\n   * @returns Una promesa que se resuelve cuando se completa la eliminación del usuario.\n   */\n\n  deleteUser(id: string): Promise {\n    const userDoc = doc(this.firestore, `users/${id}`);\n    return deleteDoc(userDoc);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/models/product.model.ts\n            \n            interface\n            Product\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/users.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/pages/change-password/change-password.component.ts\n            \n            component\n            ChangePasswordComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/pages/details/details.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                78 %\n                (18/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/pages/orders/orders.component.ts\n            \n            component\n            OrdersComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/perfil/perfil.component.ts\n            \n            component\n            PerfilComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/pages/sales/sales.component.ts\n            \n            component\n            SalesComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/pages/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/pages/shopping-cart/shopping-cart.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/sign-up/rut-format.directive.ts\n            \n            directive\n            RutFormatDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/pages/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/pages/users/users.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/product.service.ts\n            \n            injectable\n            ProductService\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                src/app/service/users.service.ts\n            \n            injectable\n            UsersService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/validators/rut.validator.ts\n            \n            function\n            validarRut\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/fire : ^17.1.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            validarRut   (src/.../rut.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validators/rut.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validarRut\n                        \n                    \n                \n            \n            \n                \nvalidarRut(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n                        Función personalizada para validar un RUT chileno.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nControl de formulario que contiene el valor del RUT.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto de errores si el RUT es inválido o null si es válido.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDyf\nThis project was generated with Angular CLI version 17.3.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nRutFormatDirective\n\nRutFormatDirective\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nRutFormatDirective->SharedModule\n\n\n\n\n\nRutFormatDirective \n\nRutFormatDirective \n\nRutFormatDirective  -->\n\nSharedModule->RutFormatDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../details.component.ts)\n                        \n                        \n                            bootstrap   (src/.../home.component.ts)\n                        \n                        \n                            bootstrap   (src/.../shopping-cart.component.ts)\n                        \n                        \n                            bootstrap   (src/.../users.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes), \n    provideFirebaseApp(() => \n      initializeApp({\n        \"projectId\":\"db-dyf\",\n        \"appId\":\"1:916680941903:web:6bc1c0a1a74e72aab0653a\",\n        \"storageBucket\":\"db-dyf.appspot.com\",\n        \"apiKey\":\"AIzaSyDp3dqLvIW0tkwHLXDIf6TZDSEXJD6AwLM\",\n        \"authDomain\":\"db-dyf.firebaseapp.com\",\n        \"messagingSenderId\":\"916680941903\"\n      })\n    ), \n    provideFirestore(() => getFirestore())\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/details/details.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/home.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/pages/shopping-cart/shopping-cart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/pages/users/users.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
